(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:52:37+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id mbpr4.c_AllErrorsAtOnce_Iteration9)
(declare-fun |c_old(~CELLCOUNT~0)| () Int)
(declare-fun |c_old(~CELLCOUNT~0)_primed| () Int)
(declare-fun c_~CELLCOUNT~0 () Int)
(declare-fun c_~CELLCOUNT~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~mem5| () Int)
(declare-fun |c_main_#t~mem5_primed| () Int)
(declare-fun |c_main_#t~mem6| () Int)
(declare-fun |c_main_#t~mem6_primed| () Int)
(declare-fun |c_main_#t~mem7| () Int)
(declare-fun |c_main_#t~mem7_primed| () Int)
(declare-fun |c_main_#t~post8| () Int)
(declare-fun |c_main_#t~post8_primed| () Int)
(declare-fun |c_main_#t~mem9| () Int)
(declare-fun |c_main_#t~mem9_primed| () Int)
(declare-fun |c_main_#t~mem10| () Int)
(declare-fun |c_main_#t~mem10_primed| () Int)
(declare-fun |c_main_#t~mem11| () Int)
(declare-fun |c_main_#t~mem11_primed| () Int)
(declare-fun |c_main_#t~post12| () Int)
(declare-fun |c_main_#t~post12_primed| () Int)
(declare-fun |c_main_#t~mem13| () Int)
(declare-fun |c_main_#t~mem13_primed| () Int)
(declare-fun |c_main_#t~mem14| () Int)
(declare-fun |c_main_#t~mem14_primed| () Int)
(declare-fun |c_main_#t~mem15| () Int)
(declare-fun |c_main_#t~mem15_primed| () Int)
(declare-fun |c_main_#t~post16| () Int)
(declare-fun |c_main_#t~post16_primed| () Int)
(declare-fun |c_main_#t~mem17| () Int)
(declare-fun |c_main_#t~mem17_primed| () Int)
(declare-fun |c_main_#t~mem18| () Int)
(declare-fun |c_main_#t~mem18_primed| () Int)
(declare-fun |c_main_#t~mem19| () Int)
(declare-fun |c_main_#t~mem19_primed| () Int)
(declare-fun |c_main_#t~post20| () Int)
(declare-fun |c_main_#t~post20_primed| () Int)
(declare-fun |c_main_#t~mem21| () Int)
(declare-fun |c_main_#t~mem21_primed| () Int)
(declare-fun |c_main_#t~mem22| () Int)
(declare-fun |c_main_#t~mem22_primed| () Int)
(declare-fun |c_main_#t~short23| () Bool)
(declare-fun |c_main_#t~short23_primed| () Bool)
(declare-fun |c_main_#t~post24| () Int)
(declare-fun |c_main_#t~post24_primed| () Int)
(declare-fun c_main_~MINVAL~0 () Int)
(declare-fun c_main_~MINVAL~0_primed () Int)
(declare-fun c_main_~i~0 () Int)
(declare-fun c_main_~i~0_primed () Int)
(declare-fun |c_main_~#volArray~0.base| () Int)
(declare-fun |c_main_~#volArray~0.base_primed| () Int)
(declare-fun |c_main_~#volArray~0.offset| () Int)
(declare-fun |c_main_~#volArray~0.offset_primed| () Int)
(declare-fun c_main_~CCCELVOL4~0 () Int)
(declare-fun c_main_~CCCELVOL4~0_primed () Int)
(declare-fun c_main_~CCCELVOL3~0 () Int)
(declare-fun c_main_~CCCELVOL3~0_primed () Int)
(declare-fun c_main_~CCCELVOL2~0 () Int)
(declare-fun c_main_~CCCELVOL2~0_primed () Int)
(declare-fun c_main_~CCCELVOL1~0 () Int)
(declare-fun c_main_~CCCELVOL1~0_primed () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret25| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret25_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~mem21_3| () Int)
(declare-fun |c_aux_v_main_#t~mem22_3| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret25_3| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun |c_aux_v_main_#t~mem21_6| () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_3 () Int)
(declare-fun |c_aux_v_main_#t~mem21_7| () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun c_aux_v_ArrVal_6 () Int)
(declare-fun |c_aux_v_main_#t~mem21_8| () Int)
(declare-fun |c_aux_v_main_#t~mem22_6| () Int)
(declare-fun c_aux_v_ArrVal_8 () Int)
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun c_aux_v_ArrVal_10 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_9 () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_12 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_14 () Int)
(declare-fun c_aux_v_ArrVal_11 () Int)
(declare-fun c_aux_v_ArrVal_15 () Int)
(declare-fun c_aux_v_ArrVal_16 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_18 () Int)
(declare-fun c_aux_v_ArrVal_19 () Int)
(declare-fun c_aux_v_ArrVal_20 () Int)
(declare-fun c_aux_v_ArrVal_17 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_21 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_22 () Int)
(declare-fun c_aux_v_ArrVal_24 () Int)
(declare-fun c_aux_v_ArrVal_23 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_25 () Int)
(declare-fun c_aux_v_ArrVal_26 () Int)
(declare-fun c_aux_v_ArrVal_28 () Int)
(declare-fun c_aux_v_ArrVal_27 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_29 () Int)
(declare-fun c_aux_v_ArrVal_32 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_31 () Int)
(declare-fun c_aux_v_ArrVal_30 () Int)
(declare-fun |c_aux_v_main_#t~mem21_9| () Int)
(declare-fun |c_aux_v_main_#t~mem22_7| () Int)
(declare-fun c_aux_v_ArrVal_33 () Int)
(declare-fun c_aux_v_ArrVal_34 () Int)
(declare-fun c_aux_v_ArrVal_36 () Int)
(declare-fun c_aux_v_ArrVal_35 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_39 () Int)
(declare-fun c_aux_v_ArrVal_37 () Int)
(declare-fun c_aux_v_ArrVal_38 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_40 () Int)
(declare-fun c_aux_v_ArrVal_42 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_41 () Int)
(declare-fun c_aux_v_ArrVal_46 () Int)
(declare-fun c_aux_v_ArrVal_43 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_44 () Int)
(declare-fun c_aux_v_ArrVal_45 () Int)
(declare-fun c_aux_v_ArrVal_48 () Int)
(declare-fun c_aux_v_ArrVal_47 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_49 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_50 () Int)
(declare-fun c_aux_v_ArrVal_51 () Int)
(declare-fun c_aux_v_ArrVal_52 () Int)
(declare-fun c_aux_v_ArrVal_53 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_54 () Int)
(declare-fun c_aux_v_ArrVal_57 () Int)
(declare-fun c_aux_v_ArrVal_55 () Int)
(declare-fun c_aux_v_ArrVal_56 () Int)
(declare-fun c_aux_v_ArrVal_58 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem21_10| () Int)
(declare-fun |c_aux_v_main_#t~mem22_8| () Int)
(declare-fun c_aux_v_ArrVal_59 () Int)
(declare-fun c_aux_v_ArrVal_60 () Int)
(declare-fun c_aux_v_ArrVal_61 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_62 () Int)
(declare-fun c_aux_v_ArrVal_64 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_65 () Int)
(declare-fun c_aux_v_ArrVal_66 () Int)
(declare-fun c_aux_v_ArrVal_63 () Int)
(declare-fun c_aux_v_ArrVal_68 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_67 () Int)
(declare-fun c_aux_v_ArrVal_70 () Int)
(declare-fun c_aux_v_ArrVal_69 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_71 () Int)
(declare-fun c_aux_v_ArrVal_72 () Int)
(declare-fun c_aux_v_ArrVal_73 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_74 () Int)
(declare-fun c_aux_v_ArrVal_75 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_76 () Int)
(declare-fun c_aux_v_ArrVal_77 () Int)
(declare-fun c_aux_v_ArrVal_78 () Int)
(declare-fun c_aux_v_ArrVal_80 () Int)
(declare-fun c_aux_v_ArrVal_79 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_84 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_81 () Int)
(declare-fun c_aux_v_ArrVal_82 () Int)
(declare-fun c_aux_v_ArrVal_83 () Int)
(declare-fun |c_aux_v_main_#t~mem21_11| () Int)
(declare-fun |c_aux_v_main_#t~mem22_9| () Int)
(declare-fun c_aux_v_ArrVal_86 () Int)
(declare-fun c_aux_v_ArrVal_85 () Int)
(declare-fun c_aux_v_ArrVal_87 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_88 () Int)
(declare-fun c_aux_v_ArrVal_91 () Int)
(declare-fun c_aux_v_ArrVal_92 () Int)
(declare-fun c_aux_v_ArrVal_89 () Int)
(declare-fun c_aux_v_ArrVal_90 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_94 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_93 () Int)
(declare-fun c_aux_v_ArrVal_95 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_97 () Int)
(declare-fun c_aux_v_ArrVal_98 () Int)
(declare-fun c_aux_v_ArrVal_96 () Int)
(declare-fun c_aux_v_ArrVal_99 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_100 () Int)
(declare-fun c_aux_v_ArrVal_104 () Int)
(declare-fun c_aux_v_ArrVal_103 () Int)
(declare-fun c_aux_v_ArrVal_102 () Int)
(declare-fun c_aux_v_ArrVal_101 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_105 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_106 () Int)
(declare-fun c_aux_v_ArrVal_109 () Int)
(declare-fun c_aux_v_ArrVal_110 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_108 () Int)
(declare-fun c_aux_v_ArrVal_107 () Int)
(declare-fun |c_aux_v_main_#t~mem21_12| () Int)
(declare-fun |c_aux_v_main_#t~mem21_13| () Int)
(declare-fun |c_aux_v_main_#t~mem22_10| () Int)
(declare-fun c_aux_v_ArrVal_112 () Int)
(declare-fun c_aux_v_ArrVal_111 () Int)
(declare-fun c_aux_v_ArrVal_114 () Int)
(declare-fun c_aux_v_ArrVal_113 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_115 () Int)
(declare-fun c_aux_v_ArrVal_116 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_118 () Int)
(declare-fun c_aux_v_ArrVal_117 () Int)
(declare-fun c_aux_v_ArrVal_120 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_119 () Int)
(declare-fun c_aux_v_ArrVal_124 () Int)
(declare-fun c_aux_v_ArrVal_123 () Int)
(declare-fun c_aux_v_ArrVal_122 () Int)
(declare-fun c_aux_v_ArrVal_121 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_126 () Int)
(declare-fun c_aux_v_ArrVal_125 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_127 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_130 () Int)
(declare-fun c_aux_v_ArrVal_129 () Int)
(declare-fun c_aux_v_ArrVal_128 () Int)
(declare-fun c_aux_v_ArrVal_132 () Int)
(declare-fun c_aux_v_ArrVal_131 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_135 () Int)
(declare-fun c_aux_v_ArrVal_134 () Int)
(declare-fun c_aux_v_ArrVal_133 () Int)
(declare-fun c_aux_v_ArrVal_136 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem21_14| () Int)
(declare-fun |c_aux_v_main_#t~mem21_15| () Int)
(declare-fun |c_aux_v_main_#t~mem21_16| () Int)
(declare-fun |c_aux_v_main_#t~mem22_11| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_0| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_1 () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_3| () Int)
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_3 () Int)
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun ~CELLCOUNT~0_4 () Int)
(declare-fun main_~MINVAL~0_5 () Int)
(declare-fun main_~CCCELVOL1~0_5 () Int)
(declare-fun main_~CCCELVOL3~0_5 () Int)
(declare-fun |main_~#volArray~0.offset_5| () Int)
(declare-fun main_~CCCELVOL4~0_5 () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun main_~i~0_5 () Int)
(declare-fun main_~CCCELVOL2~0_5 () Int)
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |main_~#volArray~0.base_5| () Int)
(declare-fun v_ArrVal_137_fresh_1 () Int)
(declare-fun v_ArrVal_138_fresh_1 () Int)
(declare-fun |assume_abort_if_not_#in~cond_7| () Int)
(declare-fun assume_abort_if_not_~cond_8 () Int)
(declare-fun assume_abort_if_not_~cond_9 () Int)
(declare-fun main_~i~0_12 () Int)
(declare-fun |#memory_int#1_14| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_139_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_140_fresh_1 () Int)
(declare-fun main_~i~0_15 () Int)
(declare-fun |main_#t~mem7_15| () Int)
(declare-fun |main_#t~mem5_15| () Int)
(declare-fun |main_#t~mem6_15| () Int)
(declare-fun |main_#t~post8_15| () Int)
(declare-fun |#memory_int#1_15| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_144_fresh_1 () Int)
(declare-fun v_ArrVal_143_fresh_1 () Int)
(declare-fun v_ArrVal_141_fresh_1 () Int)
(declare-fun v_ArrVal_142_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_16 () Int)
(declare-fun main_~i~0_17 () Int)
(declare-fun |#memory_int#1_19| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_145_fresh_1 () Int)
(declare-fun v_ArrVal_146_fresh_1 () (Array Int Int))
(declare-fun |main_#t~mem10_20| () Int)
(declare-fun |main_#t~mem11_20| () Int)
(declare-fun main_~i~0_20 () Int)
(declare-fun |main_#t~post12_20| () Int)
(declare-fun |#memory_int#1_20| () (Array Int (Array Int Int)))
(declare-fun |main_#t~mem9_20| () Int)
(declare-fun v_ArrVal_148_fresh_1 () Int)
(declare-fun v_ArrVal_150_fresh_1 () Int)
(declare-fun v_ArrVal_147_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_149_fresh_1 () Int)
(declare-fun main_~i~0_21 () Int)
(declare-fun main_~i~0_22 () Int)
(declare-fun |#memory_int#1_24| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_151_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_152_fresh_1 () Int)
(declare-fun |main_#t~mem13_25| () Int)
(declare-fun |main_#t~mem14_25| () Int)
(declare-fun |main_#t~mem15_25| () Int)
(declare-fun main_~i~0_25 () Int)
(declare-fun |main_#t~post16_25| () Int)
(declare-fun |#memory_int#1_25| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_156_fresh_1 () Int)
(declare-fun v_ArrVal_155_fresh_1 () Int)
(declare-fun v_ArrVal_154_fresh_1 () Int)
(declare-fun v_ArrVal_153_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_26 () Int)
(declare-fun main_~i~0_27 () Int)
(declare-fun |#memory_int#1_29| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_158_fresh_1 () Int)
(declare-fun v_ArrVal_157_fresh_1 () (Array Int Int))
(declare-fun |main_#t~post20_30| () Int)
(declare-fun main_~i~0_30 () Int)
(declare-fun |#memory_int#1_30| () (Array Int (Array Int Int)))
(declare-fun |main_#t~mem17_30| () Int)
(declare-fun |main_#t~mem18_30| () Int)
(declare-fun |main_#t~mem19_30| () Int)
(declare-fun v_ArrVal_159_fresh_1 () Int)
(declare-fun v_ArrVal_162_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_161_fresh_1 () Int)
(declare-fun v_ArrVal_160_fresh_1 () Int)
(declare-fun main_~i~0_31 () Int)
(declare-fun main_~i~0_32 () Int)
(declare-fun |main_#t~short23_33| () Bool)
(declare-fun |v_main_#t~mem21_17_fresh_1| () Int)
(declare-fun |main_#t~short23_35| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_35| () Int)
(declare-fun __VERIFIER_assert_~cond_36 () Int)
(declare-fun __VERIFIER_assert_~cond_37 () Int)
(declare-fun |main_#t~short23_40| () Bool)
(declare-fun |main_#t~mem22_40| () Int)
(declare-fun |main_#t~mem21_40| () Int)
(declare-fun main_~i~0_40 () Int)
(declare-fun |main_#t~post24_40| () Int)
(declare-fun |main_#t~short23_41| () Bool)
(declare-fun |v_main_#t~mem21_18_fresh_1| () Int)
(declare-fun |main_#t~short23_43| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_43| () Int)
(declare-fun __VERIFIER_assert_~cond_44 () Int)
(declare-fun __VERIFIER_assert_~cond_45 () Int)
(declare-fun |main_#t~short23_48| () Bool)
(declare-fun |main_#t~mem22_48| () Int)
(declare-fun |main_#t~mem21_48| () Int)
(declare-fun main_~i~0_48 () Int)
(declare-fun |main_#t~post24_48| () Int)
(declare-fun |main_#t~short23_49| () Bool)
(declare-fun |v_main_#t~mem21_19_fresh_1| () Int)
(declare-fun |main_#t~short23_51| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_51| () Int)
(declare-fun __VERIFIER_assert_~cond_52 () Int)
(declare-fun __VERIFIER_assert_~cond_53 () Int)
(declare-fun |main_#t~short23_56| () Bool)
(declare-fun |main_#t~mem22_56| () Int)
(declare-fun |main_#t~mem21_56| () Int)
(declare-fun main_~i~0_56 () Int)
(declare-fun |main_#t~post24_56| () Int)
(declare-fun |main_#t~short23_57| () Bool)
(declare-fun |v_main_#t~mem21_20_fresh_1| () Int)
(declare-fun |main_#t~short23_58| () Bool)
(declare-fun |v_main_#t~mem22_12_fresh_1| () Int)
(declare-fun |main_#t~short23_59| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_59| () Int)
(declare-fun __VERIFIER_assert_~cond_60 () Int)
(declare-fun __VERIFIER_assert_~cond_61 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_0) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_-1) :named ssa_0_OldVarAssigCall))
(assert (! (and (= 46 (select (select |#memory_int#2_-1| 2) 5)) (= (select |#length_-1| 2) 8) (= (select (select |#memory_int#2_-1| 2) 7) 0) (= (select (select |#memory_int#2_-1| 2) 4) 52) (= (select |#valid_-1| 0) 0) (= (select |#valid_-1| 2) 1) (= 112 (select (select |#memory_int#2_-1| 2) 2)) (= (select (select |#memory_int#2_-1| 2) 0) 109) (= (select |#valid_-1| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= 98 (select (select |#memory_int#2_-1| 2) 1)) (= (select |#valid_-1| 1) 1) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#2_-1| 2) 6) 99) (= ~CELLCOUNT~0_1 0) (= (select |#length_-1| 3) 12) (= 114 (select (select |#memory_int#2_-1| 2) 3)) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select (select |#memory_int#0_-1| 1) 0) 48)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_1) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= 0 (+ ~CELLCOUNT~0_4 2147483648)) (<= ~CELLCOUNT~0_4 2147483647)) :named ssa_4))
(assert (! (and (= 7 main_~CCCELVOL3~0_5) (= 5 main_~CCCELVOL4~0_5) (< 1 ~CELLCOUNT~0_4) (= v_ArrVal_137_fresh_1 (* (mod ~CELLCOUNT~0_4 1073741824) 4)) (= (select |#valid_3| |main_~#volArray~0.base_5|) 0) (= main_~MINVAL~0_5 2) (= |#valid_5| (store |#valid_3| |main_~#volArray~0.base_5| v_ArrVal_138_fresh_1)) (= 3 main_~CCCELVOL2~0_5) (not (= |main_~#volArray~0.base_5| 0)) (= v_ArrVal_138_fresh_1 1) (= main_~CCCELVOL1~0_5 1) (= |main_~#volArray~0.offset_5| 0) (< |#StackHeapBarrier_-1| |main_~#volArray~0.base_5|) (= (store |#length_3| |main_~#volArray~0.base_5| v_ArrVal_137_fresh_1) |#length_5|)) :named ssa_5))
(assert (! (= (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (- 4) (mod ~CELLCOUNT~0_4 4)) (mod ~CELLCOUNT~0_4 4)) 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (= (ite (= (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (mod ~CELLCOUNT~0_4 4) (- 4)) (mod ~CELLCOUNT~0_4 4)) 0) 1 0) |assume_abort_if_not_#in~cond_7|) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_7| assume_abort_if_not_~cond_8) :named ssa_8))
(assert (! (not (= assume_abort_if_not_~cond_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! true :named ssa_11_return))
(assert (! (= main_~i~0_12 1) :named ssa_12))
(assert (! (<= main_~i~0_12 (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4))) :named ssa_13))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL4~0_5) (= v_ArrVal_139_fresh_1 (store (select |#memory_int#1_3| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_12 16)) main_~CCCELVOL4~0_5)) (= v_ArrVal_140_fresh_1 main_~CCCELVOL4~0_5) (= (store |#memory_int#1_3| |main_~#volArray~0.base_5| v_ArrVal_139_fresh_1) |#memory_int#1_14|)) :named ssa_14))
(assert (! (and (= main_~i~0_15 (+ main_~i~0_12 1)) (= v_ArrVal_142_fresh_1 (store (store (store (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 12) (* main_~i~0_12 16)) v_ArrVal_141_fresh_1) (+ |main_~#volArray~0.offset_5| (* main_~i~0_12 16) (- 8)) (select (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_12 16) (- 8)))) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_12 16)) (select (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_12 16))))) (= v_ArrVal_143_fresh_1 (select (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_12 16)))) (= v_ArrVal_144_fresh_1 (select (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_12 16) (- 8)))) (= v_ArrVal_141_fresh_1 (select (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 12) (* main_~i~0_12 16)))) (= (store |#memory_int#1_14| |main_~#volArray~0.base_5| v_ArrVal_142_fresh_1) |#memory_int#1_15|)) :named ssa_15))
(assert (! (< (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)) main_~i~0_15) :named ssa_16))
(assert (! (= main_~i~0_17 1) :named ssa_17))
(assert (! (<= main_~i~0_17 (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4))) :named ssa_18))
(assert (! (and (= v_ArrVal_145_fresh_1 main_~CCCELVOL3~0_5) (<= main_~MINVAL~0_5 main_~CCCELVOL3~0_5) (= (store |#memory_int#1_15| |main_~#volArray~0.base_5| v_ArrVal_146_fresh_1) |#memory_int#1_19|) (= v_ArrVal_146_fresh_1 (store (select |#memory_int#1_15| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_17 16) (- 12)) v_ArrVal_145_fresh_1))) :named ssa_19))
(assert (! (and (= main_~i~0_20 (+ main_~i~0_17 1)) (= (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_17 16))) v_ArrVal_150_fresh_1) (= v_ArrVal_149_fresh_1 (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_17 16) (- 8)))) (= v_ArrVal_148_fresh_1 (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_17 16)))) (= |#memory_int#1_20| (store |#memory_int#1_19| |main_~#volArray~0.base_5| v_ArrVal_147_fresh_1)) (= v_ArrVal_147_fresh_1 (store (store (store (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_17 16)) (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_17 16)))) (+ |main_~#volArray~0.offset_5| (* main_~i~0_17 16) (- 8)) (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_17 16) (- 8)))) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_17 16)) (select (select |#memory_int#1_19| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_17 16)))))) :named ssa_20))
(assert (! (< (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)) main_~i~0_20) :named ssa_21))
(assert (! (= main_~i~0_22 1) :named ssa_22))
(assert (! (<= main_~i~0_22 (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4))) :named ssa_23))
(assert (! (and (= v_ArrVal_151_fresh_1 (store (select |#memory_int#1_20| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_22 16) (- 8)) main_~CCCELVOL2~0_5)) (= v_ArrVal_152_fresh_1 main_~CCCELVOL2~0_5) (= (store |#memory_int#1_20| |main_~#volArray~0.base_5| v_ArrVal_151_fresh_1) |#memory_int#1_24|) (<= main_~MINVAL~0_5 main_~CCCELVOL2~0_5)) :named ssa_24))
(assert (! (and (= |#memory_int#1_25| (store |#memory_int#1_24| |main_~#volArray~0.base_5| v_ArrVal_153_fresh_1)) (= (+ main_~i~0_22 1) main_~i~0_25) (= v_ArrVal_155_fresh_1 (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_22 16) (- 12)))) (= v_ArrVal_153_fresh_1 (store (store (store (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_22 16)) (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_22 16)))) (+ |main_~#volArray~0.offset_5| (* main_~i~0_22 16) (- 12)) (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_22 16) (- 12)))) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_22 16)) (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_22 16))))) (= v_ArrVal_156_fresh_1 (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 16) (* main_~i~0_22 16)))) (= v_ArrVal_154_fresh_1 (select (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (- 4) (* main_~i~0_22 16))))) :named ssa_25))
(assert (! (< (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)) main_~i~0_25) :named ssa_26))
(assert (! (= main_~i~0_27 1) :named ssa_27))
(assert (! (<= main_~i~0_27 (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4))) :named ssa_28))
(assert (! (and (< main_~CCCELVOL1~0_5 main_~MINVAL~0_5) (= v_ArrVal_158_fresh_1 0) (= (store |#memory_int#1_25| |main_~#volArray~0.base_5| v_ArrVal_157_fresh_1) |#memory_int#1_29|) (= v_ArrVal_157_fresh_1 (store (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 4)) 0))) :named ssa_29))
(assert (! (and (= v_ArrVal_160_fresh_1 (select (select |#memory_int#1_29| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 12)))) (= v_ArrVal_161_fresh_1 (select (select |#memory_int#1_29| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 16)))) (= |#memory_int#1_30| (store |#memory_int#1_29| |main_~#volArray~0.base_5| v_ArrVal_162_fresh_1)) (= v_ArrVal_159_fresh_1 (select (select |#memory_int#1_29| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 8)))) (= (store (store (store (select |#memory_int#1_29| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 16)) v_ArrVal_161_fresh_1) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 12)) v_ArrVal_160_fresh_1) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (- 8)) v_ArrVal_159_fresh_1) v_ArrVal_162_fresh_1) (= main_~i~0_30 (+ main_~i~0_27 1))) :named ssa_30))
(assert (! (< (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)) main_~i~0_30) :named ssa_31))
(assert (! (= main_~i~0_32 0) :named ssa_32))
(assert (! (and (= (select (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_32 4))) |v_main_#t~mem21_17_fresh_1|) (< main_~i~0_32 ~CELLCOUNT~0_4) (or (and (< |v_main_#t~mem21_17_fresh_1| main_~MINVAL~0_5) (not |main_#t~short23_33|)) (and |main_#t~short23_33| (<= main_~MINVAL~0_5 |v_main_#t~mem21_17_fresh_1|)))) :named ssa_33))
(assert (! |main_#t~short23_33| :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_35| (ite |main_#t~short23_33| 1 0)) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_36 |__VERIFIER_assert_#in~cond_35|) :named ssa_36))
(assert (! (not (= __VERIFIER_assert_~cond_36 0)) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! true :named ssa_39_return))
(assert (! (= main_~i~0_40 (+ main_~i~0_32 1)) :named ssa_40))
(assert (! (and (= (select (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_40 4))) |v_main_#t~mem21_18_fresh_1|) (< main_~i~0_40 ~CELLCOUNT~0_4) (or (and (< |v_main_#t~mem21_18_fresh_1| main_~MINVAL~0_5) (not |main_#t~short23_41|)) (and (<= main_~MINVAL~0_5 |v_main_#t~mem21_18_fresh_1|) |main_#t~short23_41|))) :named ssa_41))
(assert (! |main_#t~short23_41| :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_43| (ite |main_#t~short23_41| 1 0)) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_44 |__VERIFIER_assert_#in~cond_43|) :named ssa_44))
(assert (! (not (= __VERIFIER_assert_~cond_44 0)) :named ssa_45))
(assert (! true :named ssa_46))
(assert (! true :named ssa_47_return))
(assert (! (= main_~i~0_48 (+ main_~i~0_40 1)) :named ssa_48))
(assert (! (and (= (select (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_48 4))) |v_main_#t~mem21_19_fresh_1|) (< main_~i~0_48 ~CELLCOUNT~0_4) (or (and (<= main_~MINVAL~0_5 |v_main_#t~mem21_19_fresh_1|) |main_#t~short23_49|) (and (< |v_main_#t~mem21_19_fresh_1| main_~MINVAL~0_5) (not |main_#t~short23_49|)))) :named ssa_49))
(assert (! |main_#t~short23_49| :named ssa_50))
(assert (! true :named ssa_51_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_51| (ite |main_#t~short23_49| 1 0)) :named ssa_51_LocVarAssigCall))
(assert (! true :named ssa_51_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_52 |__VERIFIER_assert_#in~cond_51|) :named ssa_52))
(assert (! (not (= __VERIFIER_assert_~cond_52 0)) :named ssa_53))
(assert (! true :named ssa_54))
(assert (! true :named ssa_55_return))
(assert (! (= main_~i~0_56 (+ main_~i~0_48 1)) :named ssa_56))
(assert (! (and (< main_~i~0_56 ~CELLCOUNT~0_4) (or (and (<= main_~MINVAL~0_5 |v_main_#t~mem21_20_fresh_1|) |main_#t~short23_57|) (and (< |v_main_#t~mem21_20_fresh_1| main_~MINVAL~0_5) (not |main_#t~short23_57|))) (= (select (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_56 4))) |v_main_#t~mem21_20_fresh_1|)) :named ssa_57))
(assert (! (and (= (select (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_56 4))) |v_main_#t~mem22_12_fresh_1|) (or (and (not (= 0 |v_main_#t~mem22_12_fresh_1|)) (not |main_#t~short23_58|)) (and |main_#t~short23_58| (= 0 |v_main_#t~mem22_12_fresh_1|))) (not |main_#t~short23_57|)) :named ssa_58))
(assert (! true :named ssa_59_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_59| (ite |main_#t~short23_58| 1 0)) :named ssa_59_LocVarAssigCall))
(assert (! true :named ssa_59_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_60 |__VERIFIER_assert_#in~cond_59|) :named ssa_60))
(assert (! (= __VERIFIER_assert_~cond_60 0) :named ssa_61))
(assert (! true :named ssa_62))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_11_return ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_7_OldVarAssigCall ssa_7_GlobVarAssigCall) ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 ssa_19 ssa_20 ssa_21 ssa_22 ssa_23 ssa_24 ssa_25 ssa_26 ssa_27 ssa_28 ssa_29 ssa_30 ssa_31 ssa_32 ssa_33 ssa_34 (and ssa_35_LocVarAssigCall ssa_35_GlobVarAssigCall ssa_39_return ssa_37 ssa_38 ssa_36 ssa_35_OldVarAssigCall) ssa_40 ssa_41 ssa_42 (and ssa_43_OldVarAssigCall ssa_44 ssa_47_return ssa_45 ssa_46 ssa_43_GlobVarAssigCall ssa_43_LocVarAssigCall) ssa_48 ssa_49 ssa_50 (and ssa_55_return ssa_53 ssa_51_OldVarAssigCall ssa_51_GlobVarAssigCall ssa_51_LocVarAssigCall ssa_54 ssa_52) ssa_56 ssa_57 ssa_58 (and ssa_59_OldVarAssigCall ssa_59_LocVarAssigCall ssa_59_GlobVarAssigCall) ssa_60 ssa_61 (and ssa_62 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-1) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= 46 (select (select |#memory_int#2_-2| 2) 5)) (= (select |#length_-2| 2) 8) (= (select (select |#memory_int#2_-2| 2) 7) 0) (= (select (select |#memory_int#2_-2| 2) 4) 52) (= (select |#valid_-2| 0) 0) (= (select |#valid_-2| 2) 1) (= 112 (select (select |#memory_int#2_-2| 2) 2)) (= (select (select |#memory_int#2_-2| 2) 0) 109) (= (select |#valid_-2| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= 98 (select (select |#memory_int#2_-2| 2) 1)) (= (select |#valid_-2| 1) 1) (= (select |#length_-2| 1) 2) (= (select (select |#memory_int#2_-2| 2) 6) 99) (= ~CELLCOUNT~0_0 0) (= (select |#length_-2| 3) 12) (= 114 (select (select |#memory_int#2_-2| 2) 3)) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select (select |#memory_int#0_-2| 1) 0) 48)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun |assume_abort_if_not_#in~cond_-1| () Int)
(declare-fun assume_abort_if_not_~cond_0 () Int)
(declare-fun assume_abort_if_not_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= |main_~#volArray~0.offset_-2| 0)) :named ssa_postcond))
(assert (! (= |assume_abort_if_not_#in~cond_-1| assume_abort_if_not_~cond_0) :named ssa_0))
(assert (! (not (= assume_abort_if_not_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (= |main_~#volArray~0.offset_-2| 0) :named ssa_-2_PendingContext))
(assert (! (= (ite (= (ite (and (not (= (mod ~CELLCOUNT~0_-2 4) 0)) (< ~CELLCOUNT~0_-2 0)) (+ (mod ~CELLCOUNT~0_-2 4) (- 4)) (mod ~CELLCOUNT~0_-2 4)) 0) 1 0) |assume_abort_if_not_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short23_-2| () Bool)
(declare-fun |main_#t~short23_-1| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= |main_~#volArray~0.offset_-2| 0) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0) (= main_~i~0_-2 0))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= |main_~#volArray~0.offset_-2| 0) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0) (= main_~i~0_-2 0)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short23_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short23_-2| () Bool)
(declare-fun |main_#t~short23_-1| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= |main_~#volArray~0.offset_-2| 0) (= main_~i~0_-2 1) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= |main_~#volArray~0.offset_-2| 0) (= main_~i~0_-2 1) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short23_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short23_-2| () Bool)
(declare-fun |main_#t~short23_-1| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= |main_~#volArray~0.offset_-2| 0) (= main_~i~0_-2 2) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= |main_~#volArray~0.offset_-2| 0) (= main_~i~0_-2 2) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) 12) 0)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short23_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
