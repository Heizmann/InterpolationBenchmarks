(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:16:40+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.c_AllErrorsAtOnce_Iteration9)
(define-sort ~msg_t~0 () Int)
(define-sort ~port_t~0 () Int)
(declare-fun |c_old(~nomsg~0)| () Int)
(declare-fun |c_old(~nomsg~0)_primed| () Int)
(declare-fun c_~nomsg~0 () Int)
(declare-fun c_~nomsg~0_primed () Int)
(declare-fun |c_old(~r1~0)| () Int)
(declare-fun |c_old(~r1~0)_primed| () Int)
(declare-fun c_~r1~0 () Int)
(declare-fun c_~r1~0_primed () Int)
(declare-fun |c_old(~p1~0)| () Int)
(declare-fun |c_old(~p1~0)_primed| () Int)
(declare-fun c_~p1~0 () Int)
(declare-fun c_~p1~0_primed () Int)
(declare-fun |c_old(~p1_old~0)| () Int)
(declare-fun |c_old(~p1_old~0)_primed| () Int)
(declare-fun c_~p1_old~0 () Int)
(declare-fun c_~p1_old~0_primed () Int)
(declare-fun |c_old(~p1_new~0)| () Int)
(declare-fun |c_old(~p1_new~0)_primed| () Int)
(declare-fun c_~p1_new~0 () Int)
(declare-fun c_~p1_new~0_primed () Int)
(declare-fun |c_old(~id1~0)| () Int)
(declare-fun |c_old(~id1~0)_primed| () Int)
(declare-fun c_~id1~0 () Int)
(declare-fun c_~id1~0_primed () Int)
(declare-fun |c_old(~st1~0)| () Int)
(declare-fun |c_old(~st1~0)_primed| () Int)
(declare-fun c_~st1~0 () Int)
(declare-fun c_~st1~0_primed () Int)
(declare-fun |c_old(~send1~0)| () Int)
(declare-fun |c_old(~send1~0)_primed| () Int)
(declare-fun c_~send1~0 () Int)
(declare-fun c_~send1~0_primed () Int)
(declare-fun |c_old(~mode1~0)| () Int)
(declare-fun |c_old(~mode1~0)_primed| () Int)
(declare-fun c_~mode1~0 () Int)
(declare-fun c_~mode1~0_primed () Int)
(declare-fun |c_old(~alive1~0)| () Int)
(declare-fun |c_old(~alive1~0)_primed| () Int)
(declare-fun c_~alive1~0 () Int)
(declare-fun c_~alive1~0_primed () Int)
(declare-fun |c_old(~p2~0)| () Int)
(declare-fun |c_old(~p2~0)_primed| () Int)
(declare-fun c_~p2~0 () Int)
(declare-fun c_~p2~0_primed () Int)
(declare-fun |c_old(~p2_old~0)| () Int)
(declare-fun |c_old(~p2_old~0)_primed| () Int)
(declare-fun c_~p2_old~0 () Int)
(declare-fun c_~p2_old~0_primed () Int)
(declare-fun |c_old(~p2_new~0)| () Int)
(declare-fun |c_old(~p2_new~0)_primed| () Int)
(declare-fun c_~p2_new~0 () Int)
(declare-fun c_~p2_new~0_primed () Int)
(declare-fun |c_old(~id2~0)| () Int)
(declare-fun |c_old(~id2~0)_primed| () Int)
(declare-fun c_~id2~0 () Int)
(declare-fun c_~id2~0_primed () Int)
(declare-fun |c_old(~st2~0)| () Int)
(declare-fun |c_old(~st2~0)_primed| () Int)
(declare-fun c_~st2~0 () Int)
(declare-fun c_~st2~0_primed () Int)
(declare-fun |c_old(~send2~0)| () Int)
(declare-fun |c_old(~send2~0)_primed| () Int)
(declare-fun c_~send2~0 () Int)
(declare-fun c_~send2~0_primed () Int)
(declare-fun |c_old(~mode2~0)| () Int)
(declare-fun |c_old(~mode2~0)_primed| () Int)
(declare-fun c_~mode2~0 () Int)
(declare-fun c_~mode2~0_primed () Int)
(declare-fun |c_old(~alive2~0)| () Int)
(declare-fun |c_old(~alive2~0)_primed| () Int)
(declare-fun c_~alive2~0 () Int)
(declare-fun c_~alive2~0_primed () Int)
(declare-fun |c_old(~p3~0)| () Int)
(declare-fun |c_old(~p3~0)_primed| () Int)
(declare-fun c_~p3~0 () Int)
(declare-fun c_~p3~0_primed () Int)
(declare-fun |c_old(~p3_old~0)| () Int)
(declare-fun |c_old(~p3_old~0)_primed| () Int)
(declare-fun c_~p3_old~0 () Int)
(declare-fun c_~p3_old~0_primed () Int)
(declare-fun |c_old(~p3_new~0)| () Int)
(declare-fun |c_old(~p3_new~0)_primed| () Int)
(declare-fun c_~p3_new~0 () Int)
(declare-fun c_~p3_new~0_primed () Int)
(declare-fun |c_old(~id3~0)| () Int)
(declare-fun |c_old(~id3~0)_primed| () Int)
(declare-fun c_~id3~0 () Int)
(declare-fun c_~id3~0_primed () Int)
(declare-fun |c_old(~st3~0)| () Int)
(declare-fun |c_old(~st3~0)_primed| () Int)
(declare-fun c_~st3~0 () Int)
(declare-fun c_~st3~0_primed () Int)
(declare-fun |c_old(~send3~0)| () Int)
(declare-fun |c_old(~send3~0)_primed| () Int)
(declare-fun c_~send3~0 () Int)
(declare-fun c_~send3~0_primed () Int)
(declare-fun |c_old(~mode3~0)| () Int)
(declare-fun |c_old(~mode3~0)_primed| () Int)
(declare-fun c_~mode3~0 () Int)
(declare-fun c_~mode3~0_primed () Int)
(declare-fun |c_old(~alive3~0)| () Int)
(declare-fun |c_old(~alive3~0)_primed| () Int)
(declare-fun c_~alive3~0 () Int)
(declare-fun c_~alive3~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_init_#res| () Int)
(declare-fun |c_init_#res_primed| () Int)
(declare-fun c_init_~tmp~0 () Int)
(declare-fun c_init_~tmp~0_primed () Int)
(declare-fun |c_read_#in~p| () Int)
(declare-fun |c_read_#in~p_primed| () Int)
(declare-fun |c_read_#in~m| () Int)
(declare-fun |c_read_#in~m_primed| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~nondet5| () Int)
(declare-fun |c_main_#t~nondet5_primed| () Int)
(declare-fun |c_main_#t~nondet6| () Int)
(declare-fun |c_main_#t~nondet6_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~nondet8| () Int)
(declare-fun |c_main_#t~nondet8_primed| () Int)
(declare-fun |c_main_#t~nondet9| () Int)
(declare-fun |c_main_#t~nondet9_primed| () Int)
(declare-fun |c_main_#t~nondet10| () Int)
(declare-fun |c_main_#t~nondet10_primed| () Int)
(declare-fun |c_main_#t~nondet11| () Int)
(declare-fun |c_main_#t~nondet11_primed| () Int)
(declare-fun |c_main_#t~nondet12| () Int)
(declare-fun |c_main_#t~nondet12_primed| () Int)
(declare-fun |c_main_#t~nondet13| () Int)
(declare-fun |c_main_#t~nondet13_primed| () Int)
(declare-fun |c_main_#t~nondet14| () Int)
(declare-fun |c_main_#t~nondet14_primed| () Int)
(declare-fun |c_main_#t~nondet15| () Int)
(declare-fun |c_main_#t~nondet15_primed| () Int)
(declare-fun |c_main_#t~nondet16| () Int)
(declare-fun |c_main_#t~nondet16_primed| () Int)
(declare-fun |c_main_#t~nondet17| () Int)
(declare-fun |c_main_#t~nondet17_primed| () Int)
(declare-fun |c_main_#t~nondet18| () Int)
(declare-fun |c_main_#t~nondet18_primed| () Int)
(declare-fun |c_main_#t~nondet19| () Int)
(declare-fun |c_main_#t~nondet19_primed| () Int)
(declare-fun |c_main_#t~ret20| () Int)
(declare-fun |c_main_#t~ret20_primed| () Int)
(declare-fun |c_main_#t~ret21| () Int)
(declare-fun |c_main_#t~ret21_primed| () Int)
(declare-fun |c_main_#t~post22| () Int)
(declare-fun |c_main_#t~post22_primed| () Int)
(declare-fun c_main_~c1~0 () Int)
(declare-fun c_main_~c1~0_primed () Int)
(declare-fun c_main_~i2~0 () Int)
(declare-fun c_main_~i2~0_primed () Int)
(declare-fun |c_check_#res| () Int)
(declare-fun |c_check_#res_primed| () Int)
(declare-fun c_check_~tmp~1 () Int)
(declare-fun c_check_~tmp~1_primed () Int)
(declare-fun c_node1_~m1~0 () Int)
(declare-fun c_node1_~m1~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_node2_~m2~0 () Int)
(declare-fun c_node2_~m2~0_primed () Int)
(declare-fun c_node3_~m3~0 () Int)
(declare-fun c_node3_~m3~0_primed () Int)
(declare-fun |c_assert_#in~arg| () Int)
(declare-fun |c_assert_#in~arg_primed| () Int)
(declare-fun c_assert_~arg () Int)
(declare-fun c_assert_~arg_primed () Int)
(declare-fun |c___VERIFIER_nondet_bool_#res| () Int)
(declare-fun |c___VERIFIER_nondet_bool_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret23| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret23_primed| () Int)
(declare-fun |c_write_#in~p| () Int)
(declare-fun |c_write_#in~p_primed| () Int)
(declare-fun |c_write_#in~m| () Int)
(declare-fun |c_write_#in~m_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~c1~0_6 () Int)
(declare-fun c_aux_v_node1_~m1~0_11 () Int)
(declare-fun c_aux_v_node2_~m2~0_11 () Int)
(declare-fun c_aux_v_node3_~m3~0_11 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret23_3| () Int)
(declare-fun c_aux_v_main_~c1~0_7 () Int)
(declare-fun c_aux_v_node1_~m1~0_12 () Int)
(declare-fun c_aux_v_node2_~m2~0_12 () Int)
(declare-fun c_aux_v_node3_~m3~0_12 () Int)
(declare-fun c_aux_v_node1_~m1~0_13 () Int)
(declare-fun c_aux_v_node2_~m2~0_13 () Int)
(declare-fun c_aux_v_node3_~m3~0_13 () Int)
(declare-fun c_aux_v_main_~c1~0_8 () Int)
(declare-fun c_aux_v_node1_~m1~0_14 () Int)
(declare-fun c_aux_v_node2_~m2~0_14 () Int)
(declare-fun c_aux_v_node3_~m3~0_14 () Int)
(declare-fun c_aux_v_node1_~m1~0_15 () Int)
(declare-fun c_aux_v_node2_~m2~0_15 () Int)
(declare-fun c_aux_v_node3_~m3~0_15 () Int)
(declare-fun c_aux_v_main_~c1~0_9 () Int)
(declare-fun c_aux_v_node1_~m1~0_16 () Int)
(declare-fun c_aux_v_node2_~m2~0_16 () Int)
(declare-fun c_aux_v_node3_~m3~0_16 () Int)
(declare-fun c_aux_v_node1_~m1~0_17 () Int)
(declare-fun c_aux_v_node2_~m2~0_17 () Int)
(declare-fun c_aux_v_node3_~m3~0_17 () Int)
(declare-fun c_aux_v_main_~c1~0_10 () Int)
(declare-fun c_aux_v_node1_~m1~0_18 () Int)
(declare-fun c_aux_v_node2_~m2~0_18 () Int)
(declare-fun c_aux_v_node3_~m3~0_18 () Int)
(declare-fun c_aux_v_node1_~m1~0_19 () Int)
(declare-fun c_aux_v_node2_~m2~0_19 () Int)
(declare-fun c_aux_v_node3_~m3~0_19 () Int)
(declare-fun c_aux_v_main_~c1~0_11 () Int)
(declare-fun c_aux_v_node1_~m1~0_20 () Int)
(declare-fun c_aux_v_node2_~m2~0_20 () Int)
(declare-fun c_aux_v_node3_~m3~0_20 () Int)
(declare-fun c_aux_v_node1_~m1~0_21 () Int)
(declare-fun c_aux_v_node2_~m2~0_21 () Int)
(declare-fun c_aux_v_node3_~m3~0_21 () Int)
(declare-fun c_aux_v_main_~c1~0_12 () Int)
(declare-fun c_aux_v_node1_~m1~0_22 () Int)
(declare-fun c_aux_v_node2_~m2~0_22 () Int)
(declare-fun c_aux_v_node3_~m3~0_22 () Int)
(declare-fun c_aux_v_node1_~m1~0_23 () Int)
(declare-fun c_aux_v_node2_~m2~0_23 () Int)
(declare-fun c_aux_v_node3_~m3~0_23 () Int)
(declare-fun c_aux_v_main_~c1~0_13 () Int)
(declare-fun c_aux_v_node1_~m1~0_24 () Int)
(declare-fun c_aux_v_node2_~m2~0_24 () Int)
(declare-fun c_aux_v_node3_~m3~0_24 () Int)
(declare-fun c_aux_v_node1_~m1~0_25 () Int)
(declare-fun c_aux_v_node2_~m2~0_25 () Int)
(declare-fun c_aux_v_node3_~m3~0_25 () Int)
(declare-fun c_aux_v_main_~c1~0_14 () Int)
(declare-fun c_aux_v_node1_~m1~0_26 () Int)
(declare-fun c_aux_v_node2_~m2~0_26 () Int)
(declare-fun c_aux_v_node3_~m3~0_26 () Int)
(declare-fun c_aux_v_node1_~m1~0_27 () Int)
(declare-fun c_aux_v_node2_~m2~0_27 () Int)
(declare-fun c_aux_v_node3_~m3~0_27 () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-1 () Int)
(declare-fun ~alive1~0_-1 () Int)
(declare-fun ~p2~0_-1 () Int)
(declare-fun ~id3~0_-1 () Int)
(declare-fun ~alive3~0_-1 () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~id2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun ~alive2~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~p3~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~p1~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun |old(~id1~0)_-1| () Int)
(declare-fun |old(~alive1~0)_-1| () Int)
(declare-fun |old(~p2~0)_-1| () Int)
(declare-fun |old(~id3~0)_-1| () Int)
(declare-fun |old(~alive3~0)_-1| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun |old(~id2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~nomsg~0)_-1| () Int)
(declare-fun |old(~alive2~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun |old(~p3~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~p1~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun |old(~id1~0)_0| () Int)
(declare-fun |old(~alive1~0)_0| () Int)
(declare-fun |old(~p2~0)_0| () Int)
(declare-fun |old(~id3~0)_0| () Int)
(declare-fun |old(~alive3~0)_0| () Int)
(declare-fun |old(~mode2~0)_0| () Int)
(declare-fun |old(~st3~0)_0| () Int)
(declare-fun |old(~r1~0)_0| () Int)
(declare-fun |old(~st1~0)_0| () Int)
(declare-fun |old(~send2~0)_0| () Int)
(declare-fun |old(~id2~0)_0| () Int)
(declare-fun |old(~p1_old~0)_0| () Int)
(declare-fun |old(~nomsg~0)_0| () Int)
(declare-fun |old(~alive2~0)_0| () Int)
(declare-fun |old(~p3_old~0)_0| () Int)
(declare-fun |old(~p2_old~0)_0| () Int)
(declare-fun |old(~p3~0)_0| () Int)
(declare-fun |old(~mode1~0)_0| () Int)
(declare-fun |old(~mode3~0)_0| () Int)
(declare-fun |old(~p2_new~0)_0| () Int)
(declare-fun |old(~p1_new~0)_0| () Int)
(declare-fun |old(~p3_new~0)_0| () Int)
(declare-fun |old(~p1~0)_0| () Int)
(declare-fun |old(~st2~0)_0| () Int)
(declare-fun |old(~send3~0)_0| () Int)
(declare-fun |old(~send1~0)_0| () Int)
(declare-fun ~id1~0_0 () Int)
(declare-fun ~alive1~0_0 () Int)
(declare-fun ~p2~0_0 () Int)
(declare-fun ~id3~0_0 () Int)
(declare-fun ~alive3~0_0 () Int)
(declare-fun ~mode2~0_0 () Int)
(declare-fun ~st3~0_0 () Int)
(declare-fun ~r1~0_0 () Int)
(declare-fun ~st1~0_0 () Int)
(declare-fun ~send2~0_0 () Int)
(declare-fun ~id2~0_0 () Int)
(declare-fun ~p1_old~0_0 () Int)
(declare-fun ~nomsg~0_0 () Int)
(declare-fun ~alive2~0_0 () Int)
(declare-fun ~p3_old~0_0 () Int)
(declare-fun ~p2_old~0_0 () Int)
(declare-fun ~p3~0_0 () Int)
(declare-fun ~mode1~0_0 () Int)
(declare-fun ~mode3~0_0 () Int)
(declare-fun ~p2_new~0_0 () Int)
(declare-fun ~p1_new~0_0 () Int)
(declare-fun ~p3_new~0_0 () Int)
(declare-fun ~p1~0_0 () Int)
(declare-fun ~st2~0_0 () Int)
(declare-fun ~send3~0_0 () Int)
(declare-fun ~send1~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~id1~0_1 () Int)
(declare-fun ~alive1~0_1 () Int)
(declare-fun ~p2~0_1 () Int)
(declare-fun ~id3~0_1 () Int)
(declare-fun ~alive3~0_1 () Int)
(declare-fun ~mode2~0_1 () Int)
(declare-fun ~st3~0_1 () Int)
(declare-fun ~r1~0_1 () Int)
(declare-fun ~st1~0_1 () Int)
(declare-fun ~send2~0_1 () Int)
(declare-fun ~id2~0_1 () Int)
(declare-fun ~p1_old~0_1 () Int)
(declare-fun ~nomsg~0_1 () Int)
(declare-fun ~alive2~0_1 () Int)
(declare-fun ~p3_old~0_1 () Int)
(declare-fun ~p3~0_1 () Int)
(declare-fun ~p2_old~0_1 () Int)
(declare-fun ~mode1~0_1 () Int)
(declare-fun ~mode3~0_1 () Int)
(declare-fun ~p3_new~0_1 () Int)
(declare-fun ~p2_new~0_1 () Int)
(declare-fun ~p1_new~0_1 () Int)
(declare-fun ~st2~0_1 () Int)
(declare-fun ~p1~0_1 () Int)
(declare-fun ~send3~0_1 () Int)
(declare-fun ~send1~0_1 () Int)
(declare-fun |old(~id1~0)_3| () Int)
(declare-fun |old(~id2~0)_3| () Int)
(declare-fun |old(~p1_old~0)_3| () Int)
(declare-fun |old(~alive2~0)_3| () Int)
(declare-fun |old(~alive1~0)_3| () Int)
(declare-fun |old(~p3_old~0)_3| () Int)
(declare-fun |old(~p2_old~0)_3| () Int)
(declare-fun |old(~id3~0)_3| () Int)
(declare-fun |old(~alive3~0)_3| () Int)
(declare-fun |old(~mode2~0)_3| () Int)
(declare-fun |old(~st3~0)_3| () Int)
(declare-fun |old(~mode1~0)_3| () Int)
(declare-fun |old(~mode3~0)_3| () Int)
(declare-fun |old(~r1~0)_3| () Int)
(declare-fun |old(~p1_new~0)_3| () Int)
(declare-fun |old(~p2_new~0)_3| () Int)
(declare-fun |old(~p3_new~0)_3| () Int)
(declare-fun |old(~st1~0)_3| () Int)
(declare-fun |old(~st2~0)_3| () Int)
(declare-fun |old(~send3~0)_3| () Int)
(declare-fun |old(~send2~0)_3| () Int)
(declare-fun |old(~send1~0)_3| () Int)
(declare-fun ~id1~0_3 () Int)
(declare-fun ~id2~0_3 () Int)
(declare-fun ~p1_old~0_3 () Int)
(declare-fun ~alive2~0_3 () Int)
(declare-fun ~alive1~0_3 () Int)
(declare-fun ~p3_old~0_3 () Int)
(declare-fun ~p2_old~0_3 () Int)
(declare-fun ~id3~0_3 () Int)
(declare-fun ~alive3~0_3 () Int)
(declare-fun ~mode2~0_3 () Int)
(declare-fun ~st3~0_3 () Int)
(declare-fun ~mode1~0_3 () Int)
(declare-fun ~mode3~0_3 () Int)
(declare-fun ~r1~0_3 () Int)
(declare-fun ~p1_new~0_3 () Int)
(declare-fun ~p2_new~0_3 () Int)
(declare-fun ~p3_new~0_3 () Int)
(declare-fun ~st1~0_3 () Int)
(declare-fun ~st2~0_3 () Int)
(declare-fun ~send3~0_3 () Int)
(declare-fun ~send2~0_3 () Int)
(declare-fun ~send1~0_3 () Int)
(declare-fun |main_#t~nondet5_4| () Int)
(declare-fun ~id1~0_4 () Int)
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun |main_#t~nondet7_4| () Int)
(declare-fun |main_#t~nondet6_4| () Int)
(declare-fun ~alive1~0_4 () Int)
(declare-fun |main_#t~nondet9_4| () Int)
(declare-fun ~id3~0_4 () Int)
(declare-fun |main_#t~nondet8_4| () Int)
(declare-fun ~alive3~0_4 () Int)
(declare-fun ~mode2~0_4 () Int)
(declare-fun main_~i2~0_4 () Int)
(declare-fun ~st3~0_4 () Int)
(declare-fun ~r1~0_4 () Int)
(declare-fun ~st1~0_4 () Int)
(declare-fun ~send2~0_4 () Int)
(declare-fun ~id2~0_4 () Int)
(declare-fun ~alive2~0_4 () Int)
(declare-fun |main_#t~nondet16_4| () Int)
(declare-fun |main_#t~nondet15_4| () Int)
(declare-fun ~mode1~0_4 () Int)
(declare-fun ~mode3~0_4 () Int)
(declare-fun |main_#t~nondet14_4| () Int)
(declare-fun |main_#t~nondet13_4| () Int)
(declare-fun |main_#t~nondet19_4| () Int)
(declare-fun ~st2~0_4 () Int)
(declare-fun |main_#t~nondet18_4| () Int)
(declare-fun |main_#t~nondet17_4| () Int)
(declare-fun ~send3~0_4 () Int)
(declare-fun |main_#t~nondet12_4| () Int)
(declare-fun |main_#t~nondet11_4| () Int)
(declare-fun ~send1~0_4 () Int)
(declare-fun |main_#t~nondet10_4| () Int)
(declare-fun v_main_~c1~0_15_fresh_1 () Int)
(declare-fun init_~tmp~0_6 () Int)
(declare-fun init_~tmp~0_23 () Int)
(declare-fun |init_#res_24| () Int)
(declare-fun init_~tmp~0_24 () Int)
(declare-fun |init_#res_25| () Int)
(declare-fun |main_#t~ret20_25| () Int)
(declare-fun main_~i2~0_26 () Int)
(declare-fun |main_#t~ret20_26| () Int)
(declare-fun main_~i2~0_27 () Int)
(declare-fun main_~i2~0_28 () Int)
(declare-fun ~p3_new~0_28 () Int)
(declare-fun ~p2_new~0_28 () Int)
(declare-fun ~p1_new~0_28 () Int)
(declare-fun ~p1_old~0_28 () Int)
(declare-fun ~p3_old~0_28 () Int)
(declare-fun ~p2_old~0_28 () Int)
(declare-fun |old(~mode1~0)_30| () Int)
(declare-fun |old(~r1~0)_30| () Int)
(declare-fun |old(~p1_new~0)_30| () Int)
(declare-fun |old(~st1~0)_30| () Int)
(declare-fun |old(~p3_old~0)_30| () Int)
(declare-fun |old(~send1~0)_30| () Int)
(declare-fun ~mode1~0_30 () Int)
(declare-fun ~r1~0_30 () Int)
(declare-fun ~p1_new~0_30 () Int)
(declare-fun ~st1~0_30 () Int)
(declare-fun ~p3_old~0_30 () Int)
(declare-fun ~send1~0_30 () Int)
(declare-fun v_node1_~m1~0_28_fresh_1 () Int)
(declare-fun ~r1~0_32 () Int)
(declare-fun ~p3_old~0_32 () Int)
(declare-fun node1_~m1~0_32 () Int)
(declare-fun node1_~m1~0_33 () Int)
(declare-fun ~mode1~0_34 () Int)
(declare-fun |old(~mode2~0)_37| () Int)
(declare-fun |old(~p1_old~0)_37| () Int)
(declare-fun |old(~p2_new~0)_37| () Int)
(declare-fun |old(~st2~0)_37| () Int)
(declare-fun |old(~send2~0)_37| () Int)
(declare-fun ~mode2~0_37 () Int)
(declare-fun ~p1_old~0_37 () Int)
(declare-fun ~p2_new~0_37 () Int)
(declare-fun ~st2~0_37 () Int)
(declare-fun ~send2~0_37 () Int)
(declare-fun v_node2_~m2~0_28_fresh_1 () Int)
(declare-fun ~p2_new~0_40 () Int)
(declare-fun ~mode2~0_41 () Int)
(declare-fun |old(~st3~0)_44| () Int)
(declare-fun |old(~mode3~0)_44| () Int)
(declare-fun |old(~p3_new~0)_44| () Int)
(declare-fun |old(~send3~0)_44| () Int)
(declare-fun |old(~p2_old~0)_44| () Int)
(declare-fun ~st3~0_44 () Int)
(declare-fun ~mode3~0_44 () Int)
(declare-fun ~p3_new~0_44 () Int)
(declare-fun ~send3~0_44 () Int)
(declare-fun ~p2_old~0_44 () Int)
(declare-fun v_node3_~m3~0_28_fresh_1 () Int)
(declare-fun ~p3_new~0_47 () Int)
(declare-fun ~mode3~0_48 () Int)
(declare-fun ~p3_new~0_51 () Int)
(declare-fun ~p2_new~0_51 () Int)
(declare-fun ~p1_new~0_51 () Int)
(declare-fun ~p1_old~0_51 () Int)
(declare-fun ~p3_old~0_51 () Int)
(declare-fun ~p2_old~0_51 () Int)
(declare-fun check_~tmp~1_53 () Int)
(declare-fun check_~tmp~1_55 () Int)
(declare-fun |check_#res_56| () Int)
(declare-fun check_~tmp~1_56 () Int)
(declare-fun |main_#t~ret21_57| () Int)
(declare-fun |check_#res_57| () Int)
(declare-fun main_~c1~0_58 () Int)
(declare-fun |main_#t~ret21_58| () Int)
(declare-fun main_~c1~0_59 () Int)
(declare-fun |assert_#in~arg_59| () Int)
(declare-fun assert_~arg_60 () Int)
(declare-fun assert_~arg_61 () Int)
(declare-fun main_~i2~0_64 () Int)
(declare-fun |main_#t~post22_64| () Int)
(declare-fun |old(~mode1~0)_66| () Int)
(declare-fun |old(~r1~0)_66| () Int)
(declare-fun |old(~p1_new~0)_66| () Int)
(declare-fun |old(~st1~0)_66| () Int)
(declare-fun |old(~p3_old~0)_66| () Int)
(declare-fun |old(~send1~0)_66| () Int)
(declare-fun ~mode1~0_66 () Int)
(declare-fun ~r1~0_66 () Int)
(declare-fun ~p1_new~0_66 () Int)
(declare-fun ~st1~0_66 () Int)
(declare-fun ~p3_old~0_66 () Int)
(declare-fun ~send1~0_66 () Int)
(declare-fun v_node1_~m1~0_29_fresh_1 () Int)
(declare-fun ~r1~0_68 () Int)
(declare-fun ~p3_old~0_68 () Int)
(declare-fun node1_~m1~0_68 () Int)
(declare-fun node1_~m1~0_69 () Int)
(declare-fun ~mode1~0_70 () Int)
(declare-fun |old(~mode2~0)_73| () Int)
(declare-fun |old(~p1_old~0)_73| () Int)
(declare-fun |old(~p2_new~0)_73| () Int)
(declare-fun |old(~st2~0)_73| () Int)
(declare-fun |old(~send2~0)_73| () Int)
(declare-fun ~mode2~0_73 () Int)
(declare-fun ~p1_old~0_73 () Int)
(declare-fun ~p2_new~0_73 () Int)
(declare-fun ~st2~0_73 () Int)
(declare-fun ~send2~0_73 () Int)
(declare-fun v_node2_~m2~0_29_fresh_1 () Int)
(declare-fun ~p2_new~0_76 () Int)
(declare-fun ~mode2~0_77 () Int)
(declare-fun |old(~st3~0)_80| () Int)
(declare-fun |old(~mode3~0)_80| () Int)
(declare-fun |old(~p3_new~0)_80| () Int)
(declare-fun |old(~send3~0)_80| () Int)
(declare-fun |old(~p2_old~0)_80| () Int)
(declare-fun ~st3~0_80 () Int)
(declare-fun ~mode3~0_80 () Int)
(declare-fun ~p3_new~0_80 () Int)
(declare-fun ~send3~0_80 () Int)
(declare-fun ~p2_old~0_80 () Int)
(declare-fun v_node3_~m3~0_29_fresh_1 () Int)
(declare-fun ~p3_new~0_83 () Int)
(declare-fun ~mode3~0_84 () Int)
(declare-fun ~p3_new~0_87 () Int)
(declare-fun ~p2_new~0_87 () Int)
(declare-fun ~p1_new~0_87 () Int)
(declare-fun ~p1_old~0_87 () Int)
(declare-fun ~p3_old~0_87 () Int)
(declare-fun ~p2_old~0_87 () Int)
(declare-fun check_~tmp~1_89 () Int)
(declare-fun check_~tmp~1_92 () Int)
(declare-fun |check_#res_93| () Int)
(declare-fun check_~tmp~1_93 () Int)
(declare-fun |main_#t~ret21_94| () Int)
(declare-fun |check_#res_94| () Int)
(declare-fun main_~c1~0_95 () Int)
(declare-fun |main_#t~ret21_95| () Int)
(declare-fun main_~c1~0_96 () Int)
(declare-fun |assert_#in~arg_96| () Int)
(declare-fun assert_~arg_97 () Int)
(declare-fun assert_~arg_98 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |old(~r1~0)_0| ~r1~0_0) (= ~alive1~0_0 |old(~alive1~0)_0|) (= |old(~send1~0)_0| ~send1~0_0) (= |old(~id2~0)_0| ~id2~0_0) (= |old(~alive3~0)_0| ~alive3~0_0) (= ~id1~0_0 |old(~id1~0)_0|) (= |old(~p1_new~0)_0| ~p1_new~0_0) (= ~send3~0_0 |old(~send3~0)_0|) (= ~mode1~0_0 |old(~mode1~0)_0|) (= |old(~st3~0)_0| ~st3~0_0) (= ~alive2~0_0 |old(~alive2~0)_0|) (= |old(~p1~0)_0| ~p1~0_0) (= ~mode2~0_0 |old(~mode2~0)_0|) (= ~nomsg~0_0 |old(~nomsg~0)_0|) (= |old(~p3_new~0)_0| ~p3_new~0_0) (= ~p1_old~0_0 |old(~p1_old~0)_0|) (= |old(~p2~0)_0| ~p2~0_0) (= |old(~p3~0)_0| ~p3~0_0) (= ~p2_new~0_0 |old(~p2_new~0)_0|) (= ~p3_old~0_0 |old(~p3_old~0)_0|) (= |old(~id3~0)_0| ~id3~0_0) (= |old(~p2_old~0)_0| ~p2_old~0_0) (= |old(~mode3~0)_0| ~mode3~0_0) (= ~send2~0_0 |old(~send2~0)_0|) (= |old(~st1~0)_0| ~st1~0_0) (= |old(~st2~0)_0| ~st2~0_0)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= ~st2~0_-1 |old(~st2~0)_0|) (= ~r1~0_-1 |old(~r1~0)_0|) (= ~id2~0_-1 |old(~id2~0)_0|) (= ~id3~0_-1 |old(~id3~0)_0|) (= |old(~alive1~0)_0| ~alive1~0_-1) (= |old(~alive2~0)_0| ~alive2~0_-1) (= ~id1~0_-1 |old(~id1~0)_0|) (= |old(~nomsg~0)_0| ~nomsg~0_-1) (= ~st1~0_-1 |old(~st1~0)_0|) (= |old(~send2~0)_0| ~send2~0_-1) (= ~p3_old~0_-1 |old(~p3_old~0)_0|) (= ~p1~0_-1 |old(~p1~0)_0|) (= |old(~p1_new~0)_0| ~p1_new~0_-1) (= |old(~mode1~0)_0| ~mode1~0_-1) (= |old(~send3~0)_0| ~send3~0_-1) (= ~p1_old~0_-1 |old(~p1_old~0)_0|) (= |old(~mode2~0)_0| ~mode2~0_-1) (= ~p3~0_-1 |old(~p3~0)_0|) (= |old(~p3_new~0)_0| ~p3_new~0_-1) (= ~p2_old~0_-1 |old(~p2_old~0)_0|) (= ~alive3~0_-1 |old(~alive3~0)_0|) (= |old(~mode3~0)_0| ~mode3~0_-1) (= ~send1~0_-1 |old(~send1~0)_0|) (= |old(~p2~0)_0| ~p2~0_-1) (= |old(~st3~0)_0| ~st3~0_-1) (= |old(~p2_new~0)_0| ~p2_new~0_-1)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= ~st3~0_1 0) (= ~p3~0_1 0) (= ~id1~0_1 0) (= (+ ~nomsg~0_1 1) 0) (= ~send2~0_1 0) (= ~p2_old~0_1 0) (= ~mode2~0_1 0) (< 0 |#StackHeapBarrier_-1|) (= ~p2_new~0_1 0) (= ~p1~0_1 0) (= 12 (select |#length_-1| 3)) (= ~st1~0_1 0) (= ~p3_new~0_1 0) (= ~alive3~0_1 0) (= ~id3~0_1 0) (= ~mode3~0_1 0) (= ~alive2~0_1 0) (= ~send3~0_1 0) (= ~p2~0_1 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~alive1~0_1 0) (= ~p1_new~0_1 0) (= ~st2~0_1 0) (= (select |#valid_-1| 1) 1) (= ~p1_old~0_1 0) (= ~send1~0_1 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~id2~0_1 0) (= (select |#length_-1| 1) 2) (= 47 (select |#length_-1| 2)) (= ~p3_old~0_1 0) (= ~r1~0_1 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~mode1~0_1 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(~r1~0)_3| ~r1~0_3) (= ~alive1~0_3 |old(~alive1~0)_3|) (= |old(~send1~0)_3| ~send1~0_3) (= |old(~id2~0)_3| ~id2~0_3) (= |old(~alive3~0)_3| ~alive3~0_3) (= ~id1~0_3 |old(~id1~0)_3|) (= |old(~p1_new~0)_3| ~p1_new~0_3) (= ~send3~0_3 |old(~send3~0)_3|) (= ~mode1~0_3 |old(~mode1~0)_3|) (= |old(~st3~0)_3| ~st3~0_3) (= ~alive2~0_3 |old(~alive2~0)_3|) (= ~mode2~0_3 |old(~mode2~0)_3|) (= |old(~p3_new~0)_3| ~p3_new~0_3) (= ~p1_old~0_3 |old(~p1_old~0)_3|) (= ~p2_new~0_3 |old(~p2_new~0)_3|) (= ~p3_old~0_3 |old(~p3_old~0)_3|) (= |old(~id3~0)_3| ~id3~0_3) (= |old(~p2_old~0)_3| ~p2_old~0_3) (= |old(~mode3~0)_3| ~mode3~0_3) (= ~send2~0_3 |old(~send2~0)_3|) (= |old(~st1~0)_3| ~st1~0_3) (= |old(~st2~0)_3| ~st2~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= ~st2~0_1 |old(~st2~0)_3|) (= ~r1~0_1 |old(~r1~0)_3|) (= ~id2~0_1 |old(~id2~0)_3|) (= ~id3~0_1 |old(~id3~0)_3|) (= |old(~alive1~0)_3| ~alive1~0_1) (= |old(~alive2~0)_3| ~alive2~0_1) (= ~id1~0_1 |old(~id1~0)_3|) (= ~st1~0_1 |old(~st1~0)_3|) (= |old(~send2~0)_3| ~send2~0_1) (= ~p3_old~0_1 |old(~p3_old~0)_3|) (= |old(~p1_new~0)_3| ~p1_new~0_1) (= |old(~mode1~0)_3| ~mode1~0_1) (= |old(~send3~0)_3| ~send3~0_1) (= ~p1_old~0_1 |old(~p1_old~0)_3|) (= |old(~mode2~0)_3| ~mode2~0_1) (= |old(~p3_new~0)_3| ~p3_new~0_1) (= ~p2_old~0_1 |old(~p2_old~0)_3|) (= ~alive3~0_1 |old(~alive3~0)_3|) (= |old(~mode3~0)_3| ~mode3~0_1) (= ~send1~0_1 |old(~send1~0)_3|) (= |old(~st3~0)_3| ~st3~0_1) (= |old(~p2_new~0)_3| ~p2_new~0_1)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= ~id2~0_4 127) (<= 0 (+ ~send2~0_4 128)) (<= ~id1~0_4 127) (<= 0 (+ ~send3~0_4 128)) (<= ~send3~0_4 127) (<= ~st2~0_4 127) (<= 0 (+ ~id3~0_4 128)) (<= ~r1~0_4 127) (<= ~st1~0_4 127) (= v_main_~c1~0_15_fresh_1 0) (<= 0 (+ 128 ~st3~0_4)) (<= 0 (+ 128 ~st2~0_4)) (<= 0 (+ ~r1~0_4 128)) (<= 0 (+ 128 ~st1~0_4)) (<= 0 (+ ~id2~0_4 128)) (<= ~id3~0_4 127) (<= ~st3~0_4 127) (<= 0 (+ ~send1~0_4 128)) (<= 0 (+ ~id1~0_4 128)) (<= ~send1~0_4 127) (<= ~send2~0_4 127)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! true :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! true :named ssa_6))
(assert (! (= ~r1~0_4 0) :named ssa_7))
(assert (! (<= 1 (+ (mod ~alive2~0_4 256) (mod ~alive1~0_4 256) (mod ~alive3~0_4 256))) :named ssa_8))
(assert (! (<= 0 ~id1~0_4) :named ssa_9))
(assert (! (= ~st1~0_4 0) :named ssa_10))
(assert (! (= ~send1~0_4 ~id1~0_4) :named ssa_11))
(assert (! (= (mod ~mode1~0_4 256) 0) :named ssa_12))
(assert (! (<= 0 ~id2~0_4) :named ssa_13))
(assert (! (= ~st2~0_4 0) :named ssa_14))
(assert (! (= ~send2~0_4 ~id2~0_4) :named ssa_15))
(assert (! (= (mod ~mode2~0_4 256) 0) :named ssa_16))
(assert (! (<= 0 ~id3~0_4) :named ssa_17))
(assert (! (= ~st3~0_4 0) :named ssa_18))
(assert (! (= ~send3~0_4 ~id3~0_4) :named ssa_19))
(assert (! (= (mod ~mode3~0_4 256) 0) :named ssa_20))
(assert (! (not (= ~id1~0_4 ~id2~0_4)) :named ssa_21))
(assert (! (not (= ~id1~0_4 ~id3~0_4)) :named ssa_22))
(assert (! (and (= init_~tmp~0_23 1) (not (= ~id2~0_4 ~id3~0_4))) :named ssa_23))
(assert (! (= |init_#res_24| init_~tmp~0_23) :named ssa_24))
(assert (! (= |init_#res_24| |main_#t~ret20_25|) :named ssa_25_return))
(assert (! (and (<= |main_#t~ret20_25| 2147483647) (<= 0 (+ |main_#t~ret20_25| 2147483648)) (= main_~i2~0_26 |main_#t~ret20_25|)) :named ssa_26))
(assert (! (not (= main_~i2~0_26 0)) :named ssa_27))
(assert (! (and (= main_~i2~0_28 0) (= ~nomsg~0_1 ~p1_new~0_28) (= ~p2_new~0_28 ~nomsg~0_1) (= ~nomsg~0_1 ~p3_new~0_28) (= ~p1_old~0_28 ~nomsg~0_1) (= ~p3_old~0_28 ~nomsg~0_1) (= ~nomsg~0_1 ~p2_old~0_28)) :named ssa_28))
(assert (! (< main_~i2~0_28 6) :named ssa_29))
(assert (! (and (= |old(~r1~0)_30| ~r1~0_30) (= |old(~send1~0)_30| ~send1~0_30) (= |old(~p1_new~0)_30| ~p1_new~0_30) (= ~mode1~0_30 |old(~mode1~0)_30|) (= ~p3_old~0_30 |old(~p3_old~0)_30|) (= |old(~st1~0)_30| ~st1~0_30)) :named ssa_30_GlobVarAssigCall))
(assert (! true :named ssa_30_LocVarAssigCall))
(assert (! (and (= ~r1~0_4 |old(~r1~0)_30|) (= ~st1~0_4 |old(~st1~0)_30|) (= ~p3_old~0_28 |old(~p3_old~0)_30|) (= |old(~p1_new~0)_30| ~p1_new~0_28) (= |old(~mode1~0)_30| ~mode1~0_4) (= ~send1~0_4 |old(~send1~0)_30|)) :named ssa_30_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node1_~m1~0_28_fresh_1) :named ssa_31))
(assert (! (and (not (= (mod ~mode1~0_30 256) 0)) (= (ite (<= (mod (+ ~r1~0_30 1) 256) 127) (mod (+ ~r1~0_30 1) 256) (+ (mod (+ ~r1~0_30 1) 256) (- 256))) ~r1~0_32) (= ~p3_old~0_30 node1_~m1~0_32) (= ~p3_old~0_32 ~nomsg~0_1)) :named ssa_32))
(assert (! (= ~nomsg~0_1 node1_~m1~0_32) :named ssa_33))
(assert (! (= ~mode1~0_34 0) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! true :named ssa_36_return))
(assert (! (and (= ~mode2~0_37 |old(~mode2~0)_37|) (= ~p1_old~0_37 |old(~p1_old~0)_37|) (= ~p2_new~0_37 |old(~p2_new~0)_37|) (= ~send2~0_37 |old(~send2~0)_37|) (= |old(~st2~0)_37| ~st2~0_37)) :named ssa_37_GlobVarAssigCall))
(assert (! true :named ssa_37_LocVarAssigCall))
(assert (! (and (= ~st2~0_4 |old(~st2~0)_37|) (= |old(~send2~0)_37| ~send2~0_4) (= ~p1_old~0_28 |old(~p1_old~0)_37|) (= |old(~mode2~0)_37| ~mode2~0_4) (= |old(~p2_new~0)_37| ~p2_new~0_28)) :named ssa_37_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node2_~m2~0_28_fresh_1) :named ssa_38))
(assert (! (= (mod ~mode2~0_37 256) 0) :named ssa_39))
(assert (! (and (= ~p2_new~0_40 (ite (<= (mod (ite (and (not (= ~send2~0_37 ~nomsg~0_1)) (= ~p2_new~0_37 ~nomsg~0_1)) ~send2~0_37 ~p2_new~0_37) 256) 127) (mod (ite (and (not (= ~send2~0_37 ~nomsg~0_1)) (= ~p2_new~0_37 ~nomsg~0_1)) ~send2~0_37 ~p2_new~0_37) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_37 ~nomsg~0_1)) (= ~p2_new~0_37 ~nomsg~0_1)) ~send2~0_37 ~p2_new~0_37) 256)))) (not (= (mod ~alive2~0_4 256) 0))) :named ssa_40))
(assert (! (= ~mode2~0_41 1) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! true :named ssa_43_return))
(assert (! (and (= ~send3~0_44 |old(~send3~0)_44|) (= |old(~st3~0)_44| ~st3~0_44) (= |old(~p3_new~0)_44| ~p3_new~0_44) (= |old(~p2_old~0)_44| ~p2_old~0_44) (= |old(~mode3~0)_44| ~mode3~0_44)) :named ssa_44_GlobVarAssigCall))
(assert (! true :named ssa_44_LocVarAssigCall))
(assert (! (and (= |old(~send3~0)_44| ~send3~0_4) (= |old(~p3_new~0)_44| ~p3_new~0_28) (= ~p2_old~0_28 |old(~p2_old~0)_44|) (= |old(~mode3~0)_44| ~mode3~0_4) (= |old(~st3~0)_44| ~st3~0_4)) :named ssa_44_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node3_~m3~0_28_fresh_1) :named ssa_45))
(assert (! (= (mod ~mode3~0_44 256) 0) :named ssa_46))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_44 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_44)) ~send3~0_44 ~p3_new~0_44) 256) 127) (mod (ite (and (not (= ~send3~0_44 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_44)) ~send3~0_44 ~p3_new~0_44) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_44 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_44)) ~send3~0_44 ~p3_new~0_44) 256))) ~p3_new~0_47) (not (= (mod ~alive3~0_4 256) 0))) :named ssa_47))
(assert (! (= ~mode3~0_48 1) :named ssa_48))
(assert (! true :named ssa_49))
(assert (! true :named ssa_50_return))
(assert (! (and (= ~p2_new~0_40 ~p2_old~0_51) (= ~nomsg~0_1 ~p1_new~0_51) (= ~p2_new~0_51 ~nomsg~0_1) (= ~p1_old~0_51 ~p1_new~0_30) (= ~nomsg~0_1 ~p3_new~0_51) (= ~p3_old~0_51 ~p3_new~0_47)) :named ssa_51))
(assert (! true :named ssa_52_GlobVarAssigCall))
(assert (! true :named ssa_52_LocVarAssigCall))
(assert (! true :named ssa_52_OldVarAssigCall))
(assert (! true :named ssa_53))
(assert (! (<= (+ ~st1~0_30 ~st2~0_37 ~st3~0_44) 1) :named ssa_54))
(assert (! (and (< ~r1~0_32 3) (= check_~tmp~1_55 1)) :named ssa_55))
(assert (! (= |check_#res_56| check_~tmp~1_55) :named ssa_56))
(assert (! (= |check_#res_56| |main_#t~ret21_57|) :named ssa_57_return))
(assert (! (and (<= 0 (+ |main_#t~ret21_57| 2147483648)) (= |main_#t~ret21_57| main_~c1~0_58) (<= |main_#t~ret21_57| 2147483647)) :named ssa_58))
(assert (! true :named ssa_59_GlobVarAssigCall))
(assert (! (= (ite (= 0 main_~c1~0_58) 0 1) |assert_#in~arg_59|) :named ssa_59_LocVarAssigCall))
(assert (! true :named ssa_59_OldVarAssigCall))
(assert (! (= assert_~arg_60 |assert_#in~arg_59|) :named ssa_60))
(assert (! (not (= (mod assert_~arg_60 256) 0)) :named ssa_61))
(assert (! true :named ssa_62))
(assert (! true :named ssa_63_return))
(assert (! (= main_~i2~0_64 (+ main_~i2~0_28 1)) :named ssa_64))
(assert (! (< main_~i2~0_64 6) :named ssa_65))
(assert (! (and (= |old(~r1~0)_66| ~r1~0_66) (= |old(~send1~0)_66| ~send1~0_66) (= |old(~p1_new~0)_66| ~p1_new~0_66) (= ~mode1~0_66 |old(~mode1~0)_66|) (= ~p3_old~0_66 |old(~p3_old~0)_66|) (= |old(~st1~0)_66| ~st1~0_66)) :named ssa_66_GlobVarAssigCall))
(assert (! true :named ssa_66_LocVarAssigCall))
(assert (! (and (= ~r1~0_32 |old(~r1~0)_66|) (= ~st1~0_30 |old(~st1~0)_66|) (= ~p3_old~0_51 |old(~p3_old~0)_66|) (= |old(~p1_new~0)_66| ~p1_new~0_51) (= |old(~mode1~0)_66| ~mode1~0_34) (= ~send1~0_30 |old(~send1~0)_66|)) :named ssa_66_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node1_~m1~0_29_fresh_1) :named ssa_67))
(assert (! (and (not (= (mod ~mode1~0_66 256) 0)) (= (ite (<= (mod (+ ~r1~0_66 1) 256) 127) (mod (+ ~r1~0_66 1) 256) (+ (mod (+ ~r1~0_66 1) 256) (- 256))) ~r1~0_68) (= ~p3_old~0_66 node1_~m1~0_68) (= ~p3_old~0_68 ~nomsg~0_1)) :named ssa_68))
(assert (! (= ~nomsg~0_1 node1_~m1~0_68) :named ssa_69))
(assert (! (= ~mode1~0_70 0) :named ssa_70))
(assert (! true :named ssa_71))
(assert (! true :named ssa_72_return))
(assert (! (and (= ~mode2~0_73 |old(~mode2~0)_73|) (= ~p1_old~0_73 |old(~p1_old~0)_73|) (= ~p2_new~0_73 |old(~p2_new~0)_73|) (= ~send2~0_73 |old(~send2~0)_73|) (= |old(~st2~0)_73| ~st2~0_73)) :named ssa_73_GlobVarAssigCall))
(assert (! true :named ssa_73_LocVarAssigCall))
(assert (! (and (= ~st2~0_37 |old(~st2~0)_73|) (= |old(~send2~0)_73| ~send2~0_37) (= ~p1_old~0_51 |old(~p1_old~0)_73|) (= |old(~mode2~0)_73| ~mode2~0_41) (= |old(~p2_new~0)_73| ~p2_new~0_51)) :named ssa_73_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node2_~m2~0_29_fresh_1) :named ssa_74))
(assert (! (= (mod ~mode2~0_73 256) 0) :named ssa_75))
(assert (! (and (= ~p2_new~0_76 (ite (<= (mod (ite (and (not (= ~send2~0_73 ~nomsg~0_1)) (= ~p2_new~0_73 ~nomsg~0_1)) ~send2~0_73 ~p2_new~0_73) 256) 127) (mod (ite (and (not (= ~send2~0_73 ~nomsg~0_1)) (= ~p2_new~0_73 ~nomsg~0_1)) ~send2~0_73 ~p2_new~0_73) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_73 ~nomsg~0_1)) (= ~p2_new~0_73 ~nomsg~0_1)) ~send2~0_73 ~p2_new~0_73) 256)))) (not (= (mod ~alive2~0_4 256) 0))) :named ssa_76))
(assert (! (= ~mode2~0_77 1) :named ssa_77))
(assert (! true :named ssa_78))
(assert (! true :named ssa_79_return))
(assert (! (and (= ~send3~0_80 |old(~send3~0)_80|) (= |old(~st3~0)_80| ~st3~0_80) (= |old(~p3_new~0)_80| ~p3_new~0_80) (= |old(~p2_old~0)_80| ~p2_old~0_80) (= |old(~mode3~0)_80| ~mode3~0_80)) :named ssa_80_GlobVarAssigCall))
(assert (! true :named ssa_80_LocVarAssigCall))
(assert (! (and (= |old(~send3~0)_80| ~send3~0_44) (= |old(~p3_new~0)_80| ~p3_new~0_51) (= ~p2_old~0_51 |old(~p2_old~0)_80|) (= |old(~mode3~0)_80| ~mode3~0_48) (= |old(~st3~0)_80| ~st3~0_44)) :named ssa_80_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node3_~m3~0_29_fresh_1) :named ssa_81))
(assert (! (= (mod ~mode3~0_80 256) 0) :named ssa_82))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_80 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_80)) ~send3~0_80 ~p3_new~0_80) 256) 127) (mod (ite (and (not (= ~send3~0_80 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_80)) ~send3~0_80 ~p3_new~0_80) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_80 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_80)) ~send3~0_80 ~p3_new~0_80) 256))) ~p3_new~0_83) (not (= (mod ~alive3~0_4 256) 0))) :named ssa_83))
(assert (! (= ~mode3~0_84 1) :named ssa_84))
(assert (! true :named ssa_85))
(assert (! true :named ssa_86_return))
(assert (! (and (= ~p2_new~0_76 ~p2_old~0_87) (= ~nomsg~0_1 ~p1_new~0_87) (= ~p2_new~0_87 ~nomsg~0_1) (= ~p1_old~0_87 ~p1_new~0_66) (= ~nomsg~0_1 ~p3_new~0_87) (= ~p3_old~0_87 ~p3_new~0_83)) :named ssa_87))
(assert (! true :named ssa_88_GlobVarAssigCall))
(assert (! true :named ssa_88_LocVarAssigCall))
(assert (! true :named ssa_88_OldVarAssigCall))
(assert (! true :named ssa_89))
(assert (! (<= (+ ~st1~0_66 ~st2~0_73 ~st3~0_80) 1) :named ssa_90))
(assert (! (<= 3 ~r1~0_68) :named ssa_91))
(assert (! (and (= check_~tmp~1_92 0) (not (= (+ ~st1~0_66 ~st2~0_73 ~st3~0_80) 1))) :named ssa_92))
(assert (! (= |check_#res_93| check_~tmp~1_92) :named ssa_93))
(assert (! (= |check_#res_93| |main_#t~ret21_94|) :named ssa_94_return))
(assert (! (and (<= 0 (+ |main_#t~ret21_94| 2147483648)) (= |main_#t~ret21_94| main_~c1~0_95) (<= |main_#t~ret21_94| 2147483647)) :named ssa_95))
(assert (! true :named ssa_96_GlobVarAssigCall))
(assert (! (= (ite (= 0 main_~c1~0_95) 0 1) |assert_#in~arg_96|) :named ssa_96_LocVarAssigCall))
(assert (! true :named ssa_96_OldVarAssigCall))
(assert (! (= assert_~arg_97 |assert_#in~arg_96|) :named ssa_97))
(assert (! (= (mod assert_~arg_97 256) 0) :named ssa_98))
(assert (! true :named ssa_99))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_13 ssa_25_return ssa_20 ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_10 ssa_14 ssa_8 ssa_9 ssa_19 ssa_12 ssa_5_OldVarAssigCall ssa_11 ssa_22 ssa_15 ssa_21 ssa_18 ssa_23 ssa_17 ssa_24) ssa_26 ssa_27 ssa_28 ssa_29 (and ssa_31 ssa_34 ssa_30_LocVarAssigCall ssa_30_OldVarAssigCall ssa_32 ssa_36_return ssa_33 ssa_35 ssa_30_GlobVarAssigCall) (and ssa_40 ssa_37_LocVarAssigCall ssa_39 ssa_43_return ssa_38 ssa_37_GlobVarAssigCall ssa_41 ssa_42 ssa_37_OldVarAssigCall) (and ssa_44_LocVarAssigCall ssa_45 ssa_46 ssa_47 ssa_50_return ssa_44_OldVarAssigCall ssa_44_GlobVarAssigCall ssa_48 ssa_49) ssa_51 (and ssa_55 ssa_53 ssa_57_return ssa_52_LocVarAssigCall ssa_54 ssa_52_OldVarAssigCall ssa_56 ssa_52_GlobVarAssigCall) ssa_58 (and ssa_60 ssa_59_OldVarAssigCall ssa_63_return ssa_59_LocVarAssigCall ssa_61 ssa_59_GlobVarAssigCall ssa_62) ssa_64 ssa_65 (and ssa_68 ssa_67 ssa_66_LocVarAssigCall ssa_66_OldVarAssigCall ssa_72_return ssa_70 ssa_69 ssa_66_GlobVarAssigCall ssa_71) (and ssa_75 ssa_77 ssa_76 ssa_74 ssa_73_GlobVarAssigCall ssa_73_LocVarAssigCall ssa_78 ssa_73_OldVarAssigCall ssa_79_return) (and ssa_81 ssa_84 ssa_80_GlobVarAssigCall ssa_86_return ssa_80_OldVarAssigCall ssa_82 ssa_85 ssa_83 ssa_80_LocVarAssigCall) ssa_87 (and ssa_89 ssa_90 ssa_88_GlobVarAssigCall ssa_94_return ssa_88_LocVarAssigCall ssa_88_OldVarAssigCall ssa_91 ssa_92 ssa_93) ssa_95 (and ssa_96_GlobVarAssigCall ssa_96_OldVarAssigCall ssa_96_LocVarAssigCall) ssa_97 ssa_98 (and ssa_99 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p2~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~nomsg~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~p3~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~p1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p2~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~nomsg~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~p3~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~p1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~id1~0)_-1| () Int)
(declare-fun |old(~alive1~0)_-1| () Int)
(declare-fun |old(~p2~0)_-1| () Int)
(declare-fun |old(~id3~0)_-1| () Int)
(declare-fun |old(~alive3~0)_-1| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun |old(~id2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~nomsg~0)_-1| () Int)
(declare-fun |old(~alive2~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun |old(~p3~0)_-1| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~p1~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun ~id1~0_-1 () Int)
(declare-fun ~alive1~0_-1 () Int)
(declare-fun ~p2~0_-1 () Int)
(declare-fun ~id3~0_-1 () Int)
(declare-fun ~alive3~0_-1 () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~id2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun ~alive2~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~p3~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~p1~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~id1~0_0 () Int)
(declare-fun ~alive1~0_0 () Int)
(declare-fun ~p2~0_0 () Int)
(declare-fun ~id3~0_0 () Int)
(declare-fun ~alive3~0_0 () Int)
(declare-fun ~mode2~0_0 () Int)
(declare-fun ~st3~0_0 () Int)
(declare-fun ~r1~0_0 () Int)
(declare-fun ~st1~0_0 () Int)
(declare-fun ~send2~0_0 () Int)
(declare-fun ~id2~0_0 () Int)
(declare-fun ~p1_old~0_0 () Int)
(declare-fun ~nomsg~0_0 () Int)
(declare-fun ~alive2~0_0 () Int)
(declare-fun ~p3_old~0_0 () Int)
(declare-fun ~p3~0_0 () Int)
(declare-fun ~p2_old~0_0 () Int)
(declare-fun ~mode1~0_0 () Int)
(declare-fun ~mode3~0_0 () Int)
(declare-fun ~p3_new~0_0 () Int)
(declare-fun ~p2_new~0_0 () Int)
(declare-fun ~p1_new~0_0 () Int)
(declare-fun ~st2~0_0 () Int)
(declare-fun ~p1~0_0 () Int)
(declare-fun ~send3~0_0 () Int)
(declare-fun ~send1~0_0 () Int)
(assert (! (and (= ~p1_old~0_-1 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-1) (= |old(~p2_old~0)_-1| ~p2_old~0_-1) (= ~p3~0_-1 |old(~p3~0)_-1|) (= ~nomsg~0_-1 |old(~nomsg~0)_-1|) (= |old(~alive2~0)_-1| ~alive2~0_-1) (= |old(~p1_new~0)_-1| ~p1_new~0_-1) (= |old(~alive1~0)_-1| ~alive1~0_-1) (= |old(~id2~0)_-1| ~id2~0_-1) (= ~r1~0_-1 |old(~r1~0)_-1|) (= ~p2~0_-1 |old(~p2~0)_-1|) (= |old(~alive3~0)_-1| ~alive3~0_-1) (= |old(~id3~0)_-1| ~id3~0_-1) (= ~send2~0_-1 |old(~send2~0)_-1|) (= |old(~p2_new~0)_-1| ~p2_new~0_-1) (= ~send1~0_-1 |old(~send1~0)_-1|) (= |old(~id1~0)_-1| ~id1~0_-1) (= ~p3_new~0_-1 |old(~p3_new~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-1) (= |old(~st1~0)_-1| ~st1~0_-1) (= |old(~mode1~0)_-1| ~mode1~0_-1) (= ~send3~0_-1 |old(~send3~0)_-1|) (= ~p3_old~0_-1 |old(~p3_old~0)_-1|) (= |old(~st2~0)_-1| ~st2~0_-1) (= |old(~st3~0)_-1| ~st3~0_-1) (= ~p1~0_-1 |old(~p1~0)_-1|)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ~st3~0_0 0) (= ~p3~0_0 0) (= ~id1~0_0 0) (= (+ ~nomsg~0_0 1) 0) (= ~send2~0_0 0) (= ~p2_old~0_0 0) (= ~mode2~0_0 0) (< 0 |#StackHeapBarrier_-1|) (= ~p2_new~0_0 0) (= ~p1~0_0 0) (= 12 (select |#length_-1| 3)) (= ~st1~0_0 0) (= ~p3_new~0_0 0) (= ~alive3~0_0 0) (= ~id3~0_0 0) (= ~mode3~0_0 0) (= ~alive2~0_0 0) (= ~send3~0_0 0) (= ~p2~0_0 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~alive1~0_0 0) (= ~p1_new~0_0 0) (= ~st2~0_0 0) (= (select |#valid_-1| 1) 1) (= ~p1_old~0_0 0) (= ~send1~0_0 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~id2~0_0 0) (= (select |#length_-1| 1) 2) (= 47 (select |#length_-1| 2)) (= ~p3_old~0_0 0) (= ~r1~0_0 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~mode1~0_0 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~st2~0_-2 |old(~st2~0)_-1|) (= ~r1~0_-2 |old(~r1~0)_-1|) (= ~id2~0_-2 |old(~id2~0)_-1|) (= ~id3~0_-2 |old(~id3~0)_-1|) (= |old(~alive1~0)_-1| ~alive1~0_-2) (= |old(~alive2~0)_-1| ~alive2~0_-2) (= ~id1~0_-2 |old(~id1~0)_-1|) (= |old(~nomsg~0)_-1| ~nomsg~0_-2) (= ~st1~0_-2 |old(~st1~0)_-1|) (= |old(~send2~0)_-1| ~send2~0_-2) (= ~p3_old~0_-2 |old(~p3_old~0)_-1|) (= ~p1~0_-2 |old(~p1~0)_-1|) (= |old(~p1_new~0)_-1| ~p1_new~0_-2) (= |old(~mode1~0)_-1| ~mode1~0_-2) (= |old(~send3~0)_-1| ~send3~0_-2) (= ~p1_old~0_-2 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-2) (= ~p3~0_-2 |old(~p3~0)_-1|) (= |old(~p3_new~0)_-1| ~p3_new~0_-2) (= ~p2_old~0_-2 |old(~p2_old~0)_-1|) (= ~alive3~0_-2 |old(~alive3~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-2) (= ~send1~0_-2 |old(~send1~0)_-1|) (= |old(~p2~0)_-1| ~p2~0_-2) (= |old(~st3~0)_-1| ~st3~0_-2) (= |old(~p2_new~0)_-1| ~p2_new~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun init_~tmp~0_0 () Int)
(declare-fun init_~tmp~0_17 () Int)
(declare-fun |init_#res_18| () Int)
(declare-fun init_~tmp~0_18 () Int)
(declare-fun |init_#res_19| () Int)
(declare-fun |main_#t~ret20_19| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (= ~r1~0_-2 0) :named ssa_1))
(assert (! (<= 1 (+ (mod ~alive2~0_-2 256) (mod ~alive1~0_-2 256) (mod ~alive3~0_-2 256))) :named ssa_2))
(assert (! (<= 0 ~id1~0_-2) :named ssa_3))
(assert (! (= ~st1~0_-2 0) :named ssa_4))
(assert (! (= ~send1~0_-2 ~id1~0_-2) :named ssa_5))
(assert (! (= (mod ~mode1~0_-2 256) 0) :named ssa_6))
(assert (! (<= 0 ~id2~0_-2) :named ssa_7))
(assert (! (= ~st2~0_-2 0) :named ssa_8))
(assert (! (= ~send2~0_-2 ~id2~0_-2) :named ssa_9))
(assert (! (= (mod ~mode2~0_-2 256) 0) :named ssa_10))
(assert (! (<= 0 ~id3~0_-2) :named ssa_11))
(assert (! (= ~st3~0_-2 0) :named ssa_12))
(assert (! (= ~send3~0_-2 ~id3~0_-2) :named ssa_13))
(assert (! (= (mod ~mode3~0_-2 256) 0) :named ssa_14))
(assert (! (not (= ~id1~0_-2 ~id2~0_-2)) :named ssa_15))
(assert (! (not (= ~id1~0_-2 ~id3~0_-2)) :named ssa_16))
(assert (! (and (= init_~tmp~0_17 1) (not (= ~id2~0_-2 ~id3~0_-2))) :named ssa_17))
(assert (! (= |init_#res_18| init_~tmp~0_17) :named ssa_18))
(assert (! (= |init_#res_18| |main_#t~ret20_19|) :named ssa_19_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_19_return ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node1_~m1~0_30_fresh_1 () Int)
(declare-fun ~r1~0_1 () Int)
(declare-fun ~p3_old~0_1 () Int)
(declare-fun node1_~m1~0_1 () Int)
(declare-fun node1_~m1~0_2 () Int)
(declare-fun ~mode1~0_3 () Int)
(assert (! (and (= |old(~p1_new~0)_-1| ~p1_new~0_-1) (= ~r1~0_-1 |old(~r1~0)_-1|) (= ~send1~0_-1 |old(~send1~0)_-1|) (= |old(~st1~0)_-1| ~st1~0_-1) (= |old(~mode1~0)_-1| ~mode1~0_-1) (= ~p3_old~0_-1 |old(~p3_old~0)_-1|)) :named ssa_precond))
(assert (! (not (= ~mode1~0_3 0)) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node1_~m1~0_30_fresh_1) :named ssa_0))
(assert (! (and (not (= (mod ~mode1~0_-1 256) 0)) (= (ite (<= (mod (+ ~r1~0_-1 1) 256) 127) (mod (+ ~r1~0_-1 1) 256) (+ (mod (+ ~r1~0_-1 1) 256) (- 256))) ~r1~0_1) (= ~p3_old~0_-1 node1_~m1~0_1) (= ~p3_old~0_1 ~nomsg~0_-1)) :named ssa_1))
(assert (! (= ~nomsg~0_-1 node1_~m1~0_1) :named ssa_2))
(assert (! (= ~mode1~0_3 0) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~r1~0_-2 |old(~r1~0)_-1|) (= ~st1~0_-2 |old(~st1~0)_-1|) (= ~p3_old~0_-2 |old(~p3_old~0)_-1|) (= |old(~p1_new~0)_-1| ~p1_new~0_-2) (= |old(~mode1~0)_-1| ~mode1~0_-2) (= ~send1~0_-2 |old(~send1~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node2_~m2~0_30_fresh_1 () Int)
(declare-fun ~p2_new~0_2 () Int)
(declare-fun ~mode2~0_3 () Int)
(assert (! (and (= ~p1_old~0_-1 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-1) (= ~send2~0_-1 |old(~send2~0)_-1|) (= |old(~p2_new~0)_-1| ~p2_new~0_-1) (= |old(~st2~0)_-1| ~st2~0_-1)) :named ssa_precond))
(assert (! (not (= ~mode1~0_-2 0)) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node2_~m2~0_30_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode2~0_-1 256) 0) :named ssa_1))
(assert (! (and (= ~p2_new~0_2 (ite (<= (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) 127) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256)))) (not (= (mod ~alive2~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode2~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! (= ~mode1~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~st2~0_-2 |old(~st2~0)_-1|) (= |old(~send2~0)_-1| ~send2~0_-2) (= ~p1_old~0_-2 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-2) (= |old(~p2_new~0)_-1| ~p2_new~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node3_~m3~0_30_fresh_1 () Int)
(declare-fun ~p3_new~0_2 () Int)
(declare-fun ~mode3~0_3 () Int)
(assert (! (and (= |old(~p2_old~0)_-1| ~p2_old~0_-1) (= ~p3_new~0_-1 |old(~p3_new~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-1) (= ~send3~0_-1 |old(~send3~0)_-1|) (= |old(~st3~0)_-1| ~st3~0_-1)) :named ssa_precond))
(assert (! (not (= ~mode1~0_-2 0)) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node3_~m3~0_30_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode3~0_-1 256) 0) :named ssa_1))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) 127) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256))) ~p3_new~0_2) (not (= (mod ~alive3~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode3~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! (= ~mode1~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~send3~0)_-1| ~send3~0_-2) (= |old(~p3_new~0)_-1| ~p3_new~0_-2) (= ~p2_old~0_-2 |old(~p2_old~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-2) (= |old(~st3~0)_-1| ~st3~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun check_~tmp~1_0 () Int)
(declare-fun check_~tmp~1_2 () Int)
(declare-fun |check_#res_3| () Int)
(declare-fun check_~tmp~1_3 () Int)
(declare-fun |main_#t~ret21_4| () Int)
(declare-fun |check_#res_4| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= ~mode1~0_-2 0)) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (<= (+ ~st1~0_-2 ~st2~0_-2 ~st3~0_-2) 1) :named ssa_1))
(assert (! (and (< ~r1~0_-2 3) (= check_~tmp~1_2 1)) :named ssa_2))
(assert (! (= |check_#res_3| check_~tmp~1_2) :named ssa_3))
(assert (! (= |check_#res_3| |main_#t~ret21_4|) :named ssa_4_return))
(assert (! (= ~mode1~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 (and ssa_-2_PendingContext ssa_4_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun main_~c1~0_-2 () Int)
(declare-fun main_~c1~0_-1 () Int)
(declare-fun |assert_#in~arg_-1| () Int)
(declare-fun assert_~arg_0 () Int)
(declare-fun assert_~arg_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= ~mode1~0_-2 0)) :named ssa_postcond))
(assert (! (= assert_~arg_0 |assert_#in~arg_-1|) :named ssa_0))
(assert (! (not (= (mod assert_~arg_0 256) 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (= ~mode1~0_-2 0) :named ssa_-2_PendingContext))
(assert (! (= (ite (= 0 main_~c1~0_-2) 0 1) |assert_#in~arg_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node1_~m1~0_31_fresh_1 () Int)
(declare-fun ~r1~0_1 () Int)
(declare-fun ~p3_old~0_1 () Int)
(declare-fun node1_~m1~0_1 () Int)
(declare-fun node1_~m1~0_2 () Int)
(declare-fun ~mode1~0_3 () Int)
(assert (! (and (= |old(~p1_new~0)_-1| ~p1_new~0_-1) (= ~r1~0_-1 |old(~r1~0)_-1|) (= ~send1~0_-1 |old(~send1~0)_-1|) (= |old(~st1~0)_-1| ~st1~0_-1) (= |old(~mode1~0)_-1| ~mode1~0_-1) (= ~p3_old~0_-1 |old(~p3_old~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node1_~m1~0_31_fresh_1) :named ssa_0))
(assert (! (and (not (= (mod ~mode1~0_-1 256) 0)) (= (ite (<= (mod (+ ~r1~0_-1 1) 256) 127) (mod (+ ~r1~0_-1 1) 256) (+ (mod (+ ~r1~0_-1 1) 256) (- 256))) ~r1~0_1) (= ~p3_old~0_-1 node1_~m1~0_1) (= ~p3_old~0_1 ~nomsg~0_-1)) :named ssa_1))
(assert (! (= ~nomsg~0_-1 node1_~m1~0_1) :named ssa_2))
(assert (! (= ~mode1~0_3 0) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! (= ~mode1~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~r1~0_-2 |old(~r1~0)_-1|) (= ~st1~0_-2 |old(~st1~0)_-1|) (= ~p3_old~0_-2 |old(~p3_old~0)_-1|) (= |old(~p1_new~0)_-1| ~p1_new~0_-2) (= |old(~mode1~0)_-1| ~mode1~0_-2) (= ~send1~0_-2 |old(~send1~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node2_~m2~0_31_fresh_1 () Int)
(declare-fun ~p2_new~0_2 () Int)
(declare-fun ~mode2~0_3 () Int)
(assert (! (and (= ~p1_old~0_-1 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-1) (= ~send2~0_-1 |old(~send2~0)_-1|) (= |old(~p2_new~0)_-1| ~p2_new~0_-1) (= |old(~st2~0)_-1| ~st2~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node2_~m2~0_31_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode2~0_-1 256) 0) :named ssa_1))
(assert (! (and (= ~p2_new~0_2 (ite (<= (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) 127) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256)))) (not (= (mod ~alive2~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode2~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~st2~0_-2 |old(~st2~0)_-1|) (= |old(~send2~0)_-1| ~send2~0_-2) (= ~p1_old~0_-2 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-2) (= |old(~p2_new~0)_-1| ~p2_new~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node3_~m3~0_31_fresh_1 () Int)
(declare-fun ~p3_new~0_2 () Int)
(declare-fun ~mode3~0_3 () Int)
(assert (! (and (= |old(~p2_old~0)_-1| ~p2_old~0_-1) (= ~p3_new~0_-1 |old(~p3_new~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-1) (= ~send3~0_-1 |old(~send3~0)_-1|) (= |old(~st3~0)_-1| ~st3~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node3_~m3~0_31_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode3~0_-1 256) 0) :named ssa_1))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) 127) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256))) ~p3_new~0_2) (not (= (mod ~alive3~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode3~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~send3~0)_-1| ~send3~0_-2) (= |old(~p3_new~0)_-1| ~p3_new~0_-2) (= ~p2_old~0_-2 |old(~p2_old~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-2) (= |old(~st3~0)_-1| ~st3~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun check_~tmp~1_0 () Int)
(declare-fun check_~tmp~1_3 () Int)
(declare-fun |check_#res_4| () Int)
(declare-fun check_~tmp~1_4 () Int)
(declare-fun |main_#t~ret21_5| () Int)
(declare-fun |check_#res_5| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (<= (+ ~st1~0_-2 ~st2~0_-2 ~st3~0_-2) 1) :named ssa_1))
(assert (! (<= 3 ~r1~0_-2) :named ssa_2))
(assert (! (and (= check_~tmp~1_3 0) (not (= (+ ~st1~0_-2 ~st2~0_-2 ~st3~0_-2) 1))) :named ssa_3))
(assert (! (= |check_#res_4| check_~tmp~1_3) :named ssa_4))
(assert (! (= |check_#res_4| |main_#t~ret21_5|) :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
