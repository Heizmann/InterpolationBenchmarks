(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:16:34+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id pals_lcr-var-start-time.3.ufo.BOUNDED-6.pals.c_AllErrorsAtOnce_Iteration1)
(define-sort ~msg_t~0 () Int)
(define-sort ~port_t~0 () Int)
(declare-fun |c_old(~nomsg~0)| () Int)
(declare-fun |c_old(~nomsg~0)_primed| () Int)
(declare-fun c_~nomsg~0 () Int)
(declare-fun c_~nomsg~0_primed () Int)
(declare-fun |c_old(~r1~0)| () Int)
(declare-fun |c_old(~r1~0)_primed| () Int)
(declare-fun c_~r1~0 () Int)
(declare-fun c_~r1~0_primed () Int)
(declare-fun |c_old(~p1~0)| () Int)
(declare-fun |c_old(~p1~0)_primed| () Int)
(declare-fun c_~p1~0 () Int)
(declare-fun c_~p1~0_primed () Int)
(declare-fun |c_old(~p1_old~0)| () Int)
(declare-fun |c_old(~p1_old~0)_primed| () Int)
(declare-fun c_~p1_old~0 () Int)
(declare-fun c_~p1_old~0_primed () Int)
(declare-fun |c_old(~p1_new~0)| () Int)
(declare-fun |c_old(~p1_new~0)_primed| () Int)
(declare-fun c_~p1_new~0 () Int)
(declare-fun c_~p1_new~0_primed () Int)
(declare-fun |c_old(~id1~0)| () Int)
(declare-fun |c_old(~id1~0)_primed| () Int)
(declare-fun c_~id1~0 () Int)
(declare-fun c_~id1~0_primed () Int)
(declare-fun |c_old(~st1~0)| () Int)
(declare-fun |c_old(~st1~0)_primed| () Int)
(declare-fun c_~st1~0 () Int)
(declare-fun c_~st1~0_primed () Int)
(declare-fun |c_old(~send1~0)| () Int)
(declare-fun |c_old(~send1~0)_primed| () Int)
(declare-fun c_~send1~0 () Int)
(declare-fun c_~send1~0_primed () Int)
(declare-fun |c_old(~mode1~0)| () Int)
(declare-fun |c_old(~mode1~0)_primed| () Int)
(declare-fun c_~mode1~0 () Int)
(declare-fun c_~mode1~0_primed () Int)
(declare-fun |c_old(~alive1~0)| () Int)
(declare-fun |c_old(~alive1~0)_primed| () Int)
(declare-fun c_~alive1~0 () Int)
(declare-fun c_~alive1~0_primed () Int)
(declare-fun |c_old(~p2~0)| () Int)
(declare-fun |c_old(~p2~0)_primed| () Int)
(declare-fun c_~p2~0 () Int)
(declare-fun c_~p2~0_primed () Int)
(declare-fun |c_old(~p2_old~0)| () Int)
(declare-fun |c_old(~p2_old~0)_primed| () Int)
(declare-fun c_~p2_old~0 () Int)
(declare-fun c_~p2_old~0_primed () Int)
(declare-fun |c_old(~p2_new~0)| () Int)
(declare-fun |c_old(~p2_new~0)_primed| () Int)
(declare-fun c_~p2_new~0 () Int)
(declare-fun c_~p2_new~0_primed () Int)
(declare-fun |c_old(~id2~0)| () Int)
(declare-fun |c_old(~id2~0)_primed| () Int)
(declare-fun c_~id2~0 () Int)
(declare-fun c_~id2~0_primed () Int)
(declare-fun |c_old(~st2~0)| () Int)
(declare-fun |c_old(~st2~0)_primed| () Int)
(declare-fun c_~st2~0 () Int)
(declare-fun c_~st2~0_primed () Int)
(declare-fun |c_old(~send2~0)| () Int)
(declare-fun |c_old(~send2~0)_primed| () Int)
(declare-fun c_~send2~0 () Int)
(declare-fun c_~send2~0_primed () Int)
(declare-fun |c_old(~mode2~0)| () Int)
(declare-fun |c_old(~mode2~0)_primed| () Int)
(declare-fun c_~mode2~0 () Int)
(declare-fun c_~mode2~0_primed () Int)
(declare-fun |c_old(~alive2~0)| () Int)
(declare-fun |c_old(~alive2~0)_primed| () Int)
(declare-fun c_~alive2~0 () Int)
(declare-fun c_~alive2~0_primed () Int)
(declare-fun |c_old(~p3~0)| () Int)
(declare-fun |c_old(~p3~0)_primed| () Int)
(declare-fun c_~p3~0 () Int)
(declare-fun c_~p3~0_primed () Int)
(declare-fun |c_old(~p3_old~0)| () Int)
(declare-fun |c_old(~p3_old~0)_primed| () Int)
(declare-fun c_~p3_old~0 () Int)
(declare-fun c_~p3_old~0_primed () Int)
(declare-fun |c_old(~p3_new~0)| () Int)
(declare-fun |c_old(~p3_new~0)_primed| () Int)
(declare-fun c_~p3_new~0 () Int)
(declare-fun c_~p3_new~0_primed () Int)
(declare-fun |c_old(~id3~0)| () Int)
(declare-fun |c_old(~id3~0)_primed| () Int)
(declare-fun c_~id3~0 () Int)
(declare-fun c_~id3~0_primed () Int)
(declare-fun |c_old(~st3~0)| () Int)
(declare-fun |c_old(~st3~0)_primed| () Int)
(declare-fun c_~st3~0 () Int)
(declare-fun c_~st3~0_primed () Int)
(declare-fun |c_old(~send3~0)| () Int)
(declare-fun |c_old(~send3~0)_primed| () Int)
(declare-fun c_~send3~0 () Int)
(declare-fun c_~send3~0_primed () Int)
(declare-fun |c_old(~mode3~0)| () Int)
(declare-fun |c_old(~mode3~0)_primed| () Int)
(declare-fun c_~mode3~0 () Int)
(declare-fun c_~mode3~0_primed () Int)
(declare-fun |c_old(~alive3~0)| () Int)
(declare-fun |c_old(~alive3~0)_primed| () Int)
(declare-fun c_~alive3~0 () Int)
(declare-fun c_~alive3~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_init_#res| () Int)
(declare-fun |c_init_#res_primed| () Int)
(declare-fun c_init_~tmp~0 () Int)
(declare-fun c_init_~tmp~0_primed () Int)
(declare-fun |c_read_#in~p| () Int)
(declare-fun |c_read_#in~p_primed| () Int)
(declare-fun |c_read_#in~m| () Int)
(declare-fun |c_read_#in~m_primed| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~nondet5| () Int)
(declare-fun |c_main_#t~nondet5_primed| () Int)
(declare-fun |c_main_#t~nondet6| () Int)
(declare-fun |c_main_#t~nondet6_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~nondet8| () Int)
(declare-fun |c_main_#t~nondet8_primed| () Int)
(declare-fun |c_main_#t~nondet9| () Int)
(declare-fun |c_main_#t~nondet9_primed| () Int)
(declare-fun |c_main_#t~nondet10| () Int)
(declare-fun |c_main_#t~nondet10_primed| () Int)
(declare-fun |c_main_#t~nondet11| () Int)
(declare-fun |c_main_#t~nondet11_primed| () Int)
(declare-fun |c_main_#t~nondet12| () Int)
(declare-fun |c_main_#t~nondet12_primed| () Int)
(declare-fun |c_main_#t~nondet13| () Int)
(declare-fun |c_main_#t~nondet13_primed| () Int)
(declare-fun |c_main_#t~nondet14| () Int)
(declare-fun |c_main_#t~nondet14_primed| () Int)
(declare-fun |c_main_#t~nondet15| () Int)
(declare-fun |c_main_#t~nondet15_primed| () Int)
(declare-fun |c_main_#t~nondet16| () Int)
(declare-fun |c_main_#t~nondet16_primed| () Int)
(declare-fun |c_main_#t~nondet17| () Int)
(declare-fun |c_main_#t~nondet17_primed| () Int)
(declare-fun |c_main_#t~nondet18| () Int)
(declare-fun |c_main_#t~nondet18_primed| () Int)
(declare-fun |c_main_#t~nondet19| () Int)
(declare-fun |c_main_#t~nondet19_primed| () Int)
(declare-fun |c_main_#t~ret20| () Int)
(declare-fun |c_main_#t~ret20_primed| () Int)
(declare-fun |c_main_#t~ret21| () Int)
(declare-fun |c_main_#t~ret21_primed| () Int)
(declare-fun |c_main_#t~post22| () Int)
(declare-fun |c_main_#t~post22_primed| () Int)
(declare-fun c_main_~c1~0 () Int)
(declare-fun c_main_~c1~0_primed () Int)
(declare-fun c_main_~i2~0 () Int)
(declare-fun c_main_~i2~0_primed () Int)
(declare-fun |c_check_#res| () Int)
(declare-fun |c_check_#res_primed| () Int)
(declare-fun c_check_~tmp~1 () Int)
(declare-fun c_check_~tmp~1_primed () Int)
(declare-fun c_node1_~m1~0 () Int)
(declare-fun c_node1_~m1~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_node2_~m2~0 () Int)
(declare-fun c_node2_~m2~0_primed () Int)
(declare-fun c_node3_~m3~0 () Int)
(declare-fun c_node3_~m3~0_primed () Int)
(declare-fun |c_assert_#in~arg| () Int)
(declare-fun |c_assert_#in~arg_primed| () Int)
(declare-fun c_assert_~arg () Int)
(declare-fun c_assert_~arg_primed () Int)
(declare-fun |c___VERIFIER_nondet_bool_#res| () Int)
(declare-fun |c___VERIFIER_nondet_bool_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret23| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret23_primed| () Int)
(declare-fun |c_write_#in~p| () Int)
(declare-fun |c_write_#in~p_primed| () Int)
(declare-fun |c_write_#in~m| () Int)
(declare-fun |c_write_#in~m_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~c1~0_6 () Int)
(declare-fun c_aux_v_node1_~m1~0_11 () Int)
(declare-fun c_aux_v_node2_~m2~0_11 () Int)
(declare-fun c_aux_v_node3_~m3~0_11 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret23_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-1 () Int)
(declare-fun ~alive1~0_-1 () Int)
(declare-fun ~p2~0_-1 () Int)
(declare-fun ~id3~0_-1 () Int)
(declare-fun ~alive3~0_-1 () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~id2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun ~alive2~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~p3~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~p1~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun |old(~id1~0)_-1| () Int)
(declare-fun |old(~alive1~0)_-1| () Int)
(declare-fun |old(~p2~0)_-1| () Int)
(declare-fun |old(~id3~0)_-1| () Int)
(declare-fun |old(~alive3~0)_-1| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun |old(~id2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~nomsg~0)_-1| () Int)
(declare-fun |old(~alive2~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun |old(~p3~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~p1~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun |old(~id1~0)_0| () Int)
(declare-fun |old(~alive1~0)_0| () Int)
(declare-fun |old(~p2~0)_0| () Int)
(declare-fun |old(~id3~0)_0| () Int)
(declare-fun |old(~alive3~0)_0| () Int)
(declare-fun |old(~mode2~0)_0| () Int)
(declare-fun |old(~st3~0)_0| () Int)
(declare-fun |old(~r1~0)_0| () Int)
(declare-fun |old(~st1~0)_0| () Int)
(declare-fun |old(~send2~0)_0| () Int)
(declare-fun |old(~id2~0)_0| () Int)
(declare-fun |old(~p1_old~0)_0| () Int)
(declare-fun |old(~nomsg~0)_0| () Int)
(declare-fun |old(~alive2~0)_0| () Int)
(declare-fun |old(~p3_old~0)_0| () Int)
(declare-fun |old(~p2_old~0)_0| () Int)
(declare-fun |old(~p3~0)_0| () Int)
(declare-fun |old(~mode1~0)_0| () Int)
(declare-fun |old(~mode3~0)_0| () Int)
(declare-fun |old(~p2_new~0)_0| () Int)
(declare-fun |old(~p1_new~0)_0| () Int)
(declare-fun |old(~p3_new~0)_0| () Int)
(declare-fun |old(~p1~0)_0| () Int)
(declare-fun |old(~st2~0)_0| () Int)
(declare-fun |old(~send3~0)_0| () Int)
(declare-fun |old(~send1~0)_0| () Int)
(declare-fun ~id1~0_0 () Int)
(declare-fun ~alive1~0_0 () Int)
(declare-fun ~p2~0_0 () Int)
(declare-fun ~id3~0_0 () Int)
(declare-fun ~alive3~0_0 () Int)
(declare-fun ~mode2~0_0 () Int)
(declare-fun ~st3~0_0 () Int)
(declare-fun ~r1~0_0 () Int)
(declare-fun ~st1~0_0 () Int)
(declare-fun ~send2~0_0 () Int)
(declare-fun ~id2~0_0 () Int)
(declare-fun ~p1_old~0_0 () Int)
(declare-fun ~nomsg~0_0 () Int)
(declare-fun ~alive2~0_0 () Int)
(declare-fun ~p3_old~0_0 () Int)
(declare-fun ~p2_old~0_0 () Int)
(declare-fun ~p3~0_0 () Int)
(declare-fun ~mode1~0_0 () Int)
(declare-fun ~mode3~0_0 () Int)
(declare-fun ~p2_new~0_0 () Int)
(declare-fun ~p1_new~0_0 () Int)
(declare-fun ~p3_new~0_0 () Int)
(declare-fun ~p1~0_0 () Int)
(declare-fun ~st2~0_0 () Int)
(declare-fun ~send3~0_0 () Int)
(declare-fun ~send1~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~id1~0_1 () Int)
(declare-fun ~alive1~0_1 () Int)
(declare-fun ~p2~0_1 () Int)
(declare-fun ~id3~0_1 () Int)
(declare-fun ~alive3~0_1 () Int)
(declare-fun ~mode2~0_1 () Int)
(declare-fun ~st3~0_1 () Int)
(declare-fun ~r1~0_1 () Int)
(declare-fun ~st1~0_1 () Int)
(declare-fun ~send2~0_1 () Int)
(declare-fun ~id2~0_1 () Int)
(declare-fun ~p1_old~0_1 () Int)
(declare-fun ~nomsg~0_1 () Int)
(declare-fun ~alive2~0_1 () Int)
(declare-fun ~p3_old~0_1 () Int)
(declare-fun ~p3~0_1 () Int)
(declare-fun ~p2_old~0_1 () Int)
(declare-fun ~mode1~0_1 () Int)
(declare-fun ~mode3~0_1 () Int)
(declare-fun ~p3_new~0_1 () Int)
(declare-fun ~p2_new~0_1 () Int)
(declare-fun ~p1_new~0_1 () Int)
(declare-fun ~st2~0_1 () Int)
(declare-fun ~p1~0_1 () Int)
(declare-fun ~send3~0_1 () Int)
(declare-fun ~send1~0_1 () Int)
(declare-fun |old(~id1~0)_3| () Int)
(declare-fun |old(~id2~0)_3| () Int)
(declare-fun |old(~p1_old~0)_3| () Int)
(declare-fun |old(~alive2~0)_3| () Int)
(declare-fun |old(~alive1~0)_3| () Int)
(declare-fun |old(~p3_old~0)_3| () Int)
(declare-fun |old(~p2_old~0)_3| () Int)
(declare-fun |old(~id3~0)_3| () Int)
(declare-fun |old(~alive3~0)_3| () Int)
(declare-fun |old(~mode2~0)_3| () Int)
(declare-fun |old(~st3~0)_3| () Int)
(declare-fun |old(~mode1~0)_3| () Int)
(declare-fun |old(~mode3~0)_3| () Int)
(declare-fun |old(~r1~0)_3| () Int)
(declare-fun |old(~p1_new~0)_3| () Int)
(declare-fun |old(~p2_new~0)_3| () Int)
(declare-fun |old(~p3_new~0)_3| () Int)
(declare-fun |old(~st1~0)_3| () Int)
(declare-fun |old(~st2~0)_3| () Int)
(declare-fun |old(~send3~0)_3| () Int)
(declare-fun |old(~send2~0)_3| () Int)
(declare-fun |old(~send1~0)_3| () Int)
(declare-fun ~id1~0_3 () Int)
(declare-fun ~id2~0_3 () Int)
(declare-fun ~p1_old~0_3 () Int)
(declare-fun ~alive2~0_3 () Int)
(declare-fun ~alive1~0_3 () Int)
(declare-fun ~p3_old~0_3 () Int)
(declare-fun ~p2_old~0_3 () Int)
(declare-fun ~id3~0_3 () Int)
(declare-fun ~alive3~0_3 () Int)
(declare-fun ~mode2~0_3 () Int)
(declare-fun ~st3~0_3 () Int)
(declare-fun ~mode1~0_3 () Int)
(declare-fun ~mode3~0_3 () Int)
(declare-fun ~r1~0_3 () Int)
(declare-fun ~p1_new~0_3 () Int)
(declare-fun ~p2_new~0_3 () Int)
(declare-fun ~p3_new~0_3 () Int)
(declare-fun ~st1~0_3 () Int)
(declare-fun ~st2~0_3 () Int)
(declare-fun ~send3~0_3 () Int)
(declare-fun ~send2~0_3 () Int)
(declare-fun ~send1~0_3 () Int)
(declare-fun |main_#t~nondet5_4| () Int)
(declare-fun ~id1~0_4 () Int)
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun |main_#t~nondet7_4| () Int)
(declare-fun |main_#t~nondet6_4| () Int)
(declare-fun ~alive1~0_4 () Int)
(declare-fun |main_#t~nondet9_4| () Int)
(declare-fun ~id3~0_4 () Int)
(declare-fun |main_#t~nondet8_4| () Int)
(declare-fun ~alive3~0_4 () Int)
(declare-fun ~mode2~0_4 () Int)
(declare-fun main_~i2~0_4 () Int)
(declare-fun ~st3~0_4 () Int)
(declare-fun ~r1~0_4 () Int)
(declare-fun ~st1~0_4 () Int)
(declare-fun ~send2~0_4 () Int)
(declare-fun ~id2~0_4 () Int)
(declare-fun ~alive2~0_4 () Int)
(declare-fun |main_#t~nondet16_4| () Int)
(declare-fun |main_#t~nondet15_4| () Int)
(declare-fun ~mode1~0_4 () Int)
(declare-fun ~mode3~0_4 () Int)
(declare-fun |main_#t~nondet14_4| () Int)
(declare-fun |main_#t~nondet13_4| () Int)
(declare-fun |main_#t~nondet19_4| () Int)
(declare-fun ~st2~0_4 () Int)
(declare-fun |main_#t~nondet18_4| () Int)
(declare-fun |main_#t~nondet17_4| () Int)
(declare-fun ~send3~0_4 () Int)
(declare-fun |main_#t~nondet12_4| () Int)
(declare-fun |main_#t~nondet11_4| () Int)
(declare-fun ~send1~0_4 () Int)
(declare-fun |main_#t~nondet10_4| () Int)
(declare-fun v_main_~c1~0_7_fresh_1 () Int)
(declare-fun init_~tmp~0_6 () Int)
(declare-fun init_~tmp~0_7 () Int)
(declare-fun |init_#res_8| () Int)
(declare-fun init_~tmp~0_8 () Int)
(declare-fun |init_#res_9| () Int)
(declare-fun |main_#t~ret20_9| () Int)
(declare-fun main_~i2~0_10 () Int)
(declare-fun |main_#t~ret20_10| () Int)
(declare-fun main_~i2~0_12 () Int)
(declare-fun ~p3_new~0_12 () Int)
(declare-fun ~p2_new~0_12 () Int)
(declare-fun ~p1_new~0_12 () Int)
(declare-fun ~p1_old~0_12 () Int)
(declare-fun ~p3_old~0_12 () Int)
(declare-fun ~p2_old~0_12 () Int)
(declare-fun |old(~mode1~0)_14| () Int)
(declare-fun |old(~r1~0)_14| () Int)
(declare-fun |old(~p1_new~0)_14| () Int)
(declare-fun |old(~st1~0)_14| () Int)
(declare-fun |old(~p3_old~0)_14| () Int)
(declare-fun |old(~send1~0)_14| () Int)
(declare-fun ~mode1~0_14 () Int)
(declare-fun ~r1~0_14 () Int)
(declare-fun ~p1_new~0_14 () Int)
(declare-fun ~st1~0_14 () Int)
(declare-fun ~p3_old~0_14 () Int)
(declare-fun ~send1~0_14 () Int)
(declare-fun v_node1_~m1~0_12_fresh_1 () Int)
(declare-fun ~r1~0_16 () Int)
(declare-fun ~p3_old~0_16 () Int)
(declare-fun node1_~m1~0_16 () Int)
(declare-fun node1_~m1~0_17 () Int)
(declare-fun ~mode1~0_18 () Int)
(declare-fun |old(~mode2~0)_21| () Int)
(declare-fun |old(~p1_old~0)_21| () Int)
(declare-fun |old(~p2_new~0)_21| () Int)
(declare-fun |old(~st2~0)_21| () Int)
(declare-fun |old(~send2~0)_21| () Int)
(declare-fun ~mode2~0_21 () Int)
(declare-fun ~p1_old~0_21 () Int)
(declare-fun ~p2_new~0_21 () Int)
(declare-fun ~st2~0_21 () Int)
(declare-fun ~send2~0_21 () Int)
(declare-fun v_node2_~m2~0_12_fresh_1 () Int)
(declare-fun ~p2_new~0_24 () Int)
(declare-fun ~mode2~0_25 () Int)
(declare-fun |old(~st3~0)_28| () Int)
(declare-fun |old(~mode3~0)_28| () Int)
(declare-fun |old(~p3_new~0)_28| () Int)
(declare-fun |old(~send3~0)_28| () Int)
(declare-fun |old(~p2_old~0)_28| () Int)
(declare-fun ~st3~0_28 () Int)
(declare-fun ~mode3~0_28 () Int)
(declare-fun ~p3_new~0_28 () Int)
(declare-fun ~send3~0_28 () Int)
(declare-fun ~p2_old~0_28 () Int)
(declare-fun v_node3_~m3~0_12_fresh_1 () Int)
(declare-fun ~p3_new~0_31 () Int)
(declare-fun ~mode3~0_32 () Int)
(declare-fun ~p3_new~0_35 () Int)
(declare-fun ~p2_new~0_35 () Int)
(declare-fun ~p1_new~0_35 () Int)
(declare-fun ~p1_old~0_35 () Int)
(declare-fun ~p3_old~0_35 () Int)
(declare-fun ~p2_old~0_35 () Int)
(declare-fun check_~tmp~1_37 () Int)
(declare-fun check_~tmp~1_38 () Int)
(declare-fun |check_#res_39| () Int)
(declare-fun check_~tmp~1_39 () Int)
(declare-fun |main_#t~ret21_40| () Int)
(declare-fun |check_#res_40| () Int)
(declare-fun main_~c1~0_41 () Int)
(declare-fun |main_#t~ret21_41| () Int)
(declare-fun main_~c1~0_42 () Int)
(declare-fun |assert_#in~arg_42| () Int)
(declare-fun assert_~arg_43 () Int)
(declare-fun assert_~arg_44 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |old(~r1~0)_0| ~r1~0_0) (= ~alive1~0_0 |old(~alive1~0)_0|) (= |old(~send1~0)_0| ~send1~0_0) (= |old(~id2~0)_0| ~id2~0_0) (= |old(~alive3~0)_0| ~alive3~0_0) (= ~id1~0_0 |old(~id1~0)_0|) (= |old(~p1_new~0)_0| ~p1_new~0_0) (= ~send3~0_0 |old(~send3~0)_0|) (= ~mode1~0_0 |old(~mode1~0)_0|) (= |old(~st3~0)_0| ~st3~0_0) (= ~alive2~0_0 |old(~alive2~0)_0|) (= |old(~p1~0)_0| ~p1~0_0) (= ~mode2~0_0 |old(~mode2~0)_0|) (= ~nomsg~0_0 |old(~nomsg~0)_0|) (= |old(~p3_new~0)_0| ~p3_new~0_0) (= ~p1_old~0_0 |old(~p1_old~0)_0|) (= |old(~p2~0)_0| ~p2~0_0) (= |old(~p3~0)_0| ~p3~0_0) (= ~p2_new~0_0 |old(~p2_new~0)_0|) (= ~p3_old~0_0 |old(~p3_old~0)_0|) (= |old(~id3~0)_0| ~id3~0_0) (= |old(~p2_old~0)_0| ~p2_old~0_0) (= |old(~mode3~0)_0| ~mode3~0_0) (= ~send2~0_0 |old(~send2~0)_0|) (= |old(~st1~0)_0| ~st1~0_0) (= |old(~st2~0)_0| ~st2~0_0)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= ~st2~0_-1 |old(~st2~0)_0|) (= ~r1~0_-1 |old(~r1~0)_0|) (= ~id2~0_-1 |old(~id2~0)_0|) (= ~id3~0_-1 |old(~id3~0)_0|) (= |old(~alive1~0)_0| ~alive1~0_-1) (= |old(~alive2~0)_0| ~alive2~0_-1) (= ~id1~0_-1 |old(~id1~0)_0|) (= |old(~nomsg~0)_0| ~nomsg~0_-1) (= ~st1~0_-1 |old(~st1~0)_0|) (= |old(~send2~0)_0| ~send2~0_-1) (= ~p3_old~0_-1 |old(~p3_old~0)_0|) (= ~p1~0_-1 |old(~p1~0)_0|) (= |old(~p1_new~0)_0| ~p1_new~0_-1) (= |old(~mode1~0)_0| ~mode1~0_-1) (= |old(~send3~0)_0| ~send3~0_-1) (= ~p1_old~0_-1 |old(~p1_old~0)_0|) (= |old(~mode2~0)_0| ~mode2~0_-1) (= ~p3~0_-1 |old(~p3~0)_0|) (= |old(~p3_new~0)_0| ~p3_new~0_-1) (= ~p2_old~0_-1 |old(~p2_old~0)_0|) (= ~alive3~0_-1 |old(~alive3~0)_0|) (= |old(~mode3~0)_0| ~mode3~0_-1) (= ~send1~0_-1 |old(~send1~0)_0|) (= |old(~p2~0)_0| ~p2~0_-1) (= |old(~st3~0)_0| ~st3~0_-1) (= |old(~p2_new~0)_0| ~p2_new~0_-1)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= ~st3~0_1 0) (= ~p3~0_1 0) (= ~id1~0_1 0) (= (+ ~nomsg~0_1 1) 0) (= ~send2~0_1 0) (= ~p2_old~0_1 0) (= ~mode2~0_1 0) (< 0 |#StackHeapBarrier_-1|) (= ~p2_new~0_1 0) (= ~p1~0_1 0) (= 12 (select |#length_-1| 3)) (= ~st1~0_1 0) (= ~p3_new~0_1 0) (= ~alive3~0_1 0) (= ~id3~0_1 0) (= ~mode3~0_1 0) (= ~alive2~0_1 0) (= ~send3~0_1 0) (= ~p2~0_1 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~alive1~0_1 0) (= ~p1_new~0_1 0) (= ~st2~0_1 0) (= (select |#valid_-1| 1) 1) (= ~p1_old~0_1 0) (= ~send1~0_1 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~id2~0_1 0) (= (select |#length_-1| 1) 2) (= 47 (select |#length_-1| 2)) (= ~p3_old~0_1 0) (= ~r1~0_1 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~mode1~0_1 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(~r1~0)_3| ~r1~0_3) (= ~alive1~0_3 |old(~alive1~0)_3|) (= |old(~send1~0)_3| ~send1~0_3) (= |old(~id2~0)_3| ~id2~0_3) (= |old(~alive3~0)_3| ~alive3~0_3) (= ~id1~0_3 |old(~id1~0)_3|) (= |old(~p1_new~0)_3| ~p1_new~0_3) (= ~send3~0_3 |old(~send3~0)_3|) (= ~mode1~0_3 |old(~mode1~0)_3|) (= |old(~st3~0)_3| ~st3~0_3) (= ~alive2~0_3 |old(~alive2~0)_3|) (= ~mode2~0_3 |old(~mode2~0)_3|) (= |old(~p3_new~0)_3| ~p3_new~0_3) (= ~p1_old~0_3 |old(~p1_old~0)_3|) (= ~p2_new~0_3 |old(~p2_new~0)_3|) (= ~p3_old~0_3 |old(~p3_old~0)_3|) (= |old(~id3~0)_3| ~id3~0_3) (= |old(~p2_old~0)_3| ~p2_old~0_3) (= |old(~mode3~0)_3| ~mode3~0_3) (= ~send2~0_3 |old(~send2~0)_3|) (= |old(~st1~0)_3| ~st1~0_3) (= |old(~st2~0)_3| ~st2~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= ~st2~0_1 |old(~st2~0)_3|) (= ~r1~0_1 |old(~r1~0)_3|) (= ~id2~0_1 |old(~id2~0)_3|) (= ~id3~0_1 |old(~id3~0)_3|) (= |old(~alive1~0)_3| ~alive1~0_1) (= |old(~alive2~0)_3| ~alive2~0_1) (= ~id1~0_1 |old(~id1~0)_3|) (= ~st1~0_1 |old(~st1~0)_3|) (= |old(~send2~0)_3| ~send2~0_1) (= ~p3_old~0_1 |old(~p3_old~0)_3|) (= |old(~p1_new~0)_3| ~p1_new~0_1) (= |old(~mode1~0)_3| ~mode1~0_1) (= |old(~send3~0)_3| ~send3~0_1) (= ~p1_old~0_1 |old(~p1_old~0)_3|) (= |old(~mode2~0)_3| ~mode2~0_1) (= |old(~p3_new~0)_3| ~p3_new~0_1) (= ~p2_old~0_1 |old(~p2_old~0)_3|) (= ~alive3~0_1 |old(~alive3~0)_3|) (= |old(~mode3~0)_3| ~mode3~0_1) (= ~send1~0_1 |old(~send1~0)_3|) (= |old(~st3~0)_3| ~st3~0_1) (= |old(~p2_new~0)_3| ~p2_new~0_1)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= ~id2~0_4 127) (<= 0 (+ ~send2~0_4 128)) (<= ~id1~0_4 127) (<= 0 (+ ~send3~0_4 128)) (<= ~send3~0_4 127) (= 0 v_main_~c1~0_7_fresh_1) (<= ~st2~0_4 127) (<= 0 (+ ~id3~0_4 128)) (<= ~r1~0_4 127) (<= ~st1~0_4 127) (<= 0 (+ 128 ~st3~0_4)) (<= 0 (+ 128 ~st2~0_4)) (<= 0 (+ ~r1~0_4 128)) (<= 0 (+ 128 ~st1~0_4)) (<= 0 (+ ~id2~0_4 128)) (<= ~id3~0_4 127) (<= ~st3~0_4 127) (<= 0 (+ ~send1~0_4 128)) (<= 0 (+ ~id1~0_4 128)) (<= ~send1~0_4 127) (<= ~send2~0_4 127)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! true :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! true :named ssa_6))
(assert (! (and (not (= ~r1~0_4 0)) (= init_~tmp~0_7 0)) :named ssa_7))
(assert (! (= |init_#res_8| init_~tmp~0_7) :named ssa_8))
(assert (! (= |init_#res_8| |main_#t~ret20_9|) :named ssa_9_return))
(assert (! (and (<= |main_#t~ret20_9| 2147483647) (<= 0 (+ |main_#t~ret20_9| 2147483648)) (= main_~i2~0_10 |main_#t~ret20_9|)) :named ssa_10))
(assert (! false :named ssa_11))
(assert (! (and (= main_~i2~0_12 0) (= ~nomsg~0_1 ~p1_new~0_12) (= ~p2_new~0_12 ~nomsg~0_1) (= ~nomsg~0_1 ~p3_new~0_12) (= ~p1_old~0_12 ~nomsg~0_1) (= ~p3_old~0_12 ~nomsg~0_1) (= ~nomsg~0_1 ~p2_old~0_12)) :named ssa_12))
(assert (! (< main_~i2~0_12 6) :named ssa_13))
(assert (! (and (= |old(~r1~0)_14| ~r1~0_14) (= |old(~send1~0)_14| ~send1~0_14) (= |old(~p1_new~0)_14| ~p1_new~0_14) (= ~mode1~0_14 |old(~mode1~0)_14|) (= ~p3_old~0_14 |old(~p3_old~0)_14|) (= |old(~st1~0)_14| ~st1~0_14)) :named ssa_14_GlobVarAssigCall))
(assert (! true :named ssa_14_LocVarAssigCall))
(assert (! (and (= ~r1~0_4 |old(~r1~0)_14|) (= ~st1~0_4 |old(~st1~0)_14|) (= ~p3_old~0_12 |old(~p3_old~0)_14|) (= |old(~p1_new~0)_14| ~p1_new~0_12) (= |old(~mode1~0)_14| ~mode1~0_4) (= ~send1~0_4 |old(~send1~0)_14|)) :named ssa_14_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node1_~m1~0_12_fresh_1) :named ssa_15))
(assert (! (and (not (= (mod ~mode1~0_14 256) 0)) (= (ite (<= (mod (+ ~r1~0_14 1) 256) 127) (mod (+ ~r1~0_14 1) 256) (+ (mod (+ ~r1~0_14 1) 256) (- 256))) ~r1~0_16) (= ~p3_old~0_14 node1_~m1~0_16) (= ~p3_old~0_16 ~nomsg~0_1)) :named ssa_16))
(assert (! (= ~nomsg~0_1 node1_~m1~0_16) :named ssa_17))
(assert (! (= ~mode1~0_18 0) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! true :named ssa_20_return))
(assert (! (and (= ~mode2~0_21 |old(~mode2~0)_21|) (= ~p1_old~0_21 |old(~p1_old~0)_21|) (= ~p2_new~0_21 |old(~p2_new~0)_21|) (= ~send2~0_21 |old(~send2~0)_21|) (= |old(~st2~0)_21| ~st2~0_21)) :named ssa_21_GlobVarAssigCall))
(assert (! true :named ssa_21_LocVarAssigCall))
(assert (! (and (= ~st2~0_4 |old(~st2~0)_21|) (= |old(~send2~0)_21| ~send2~0_4) (= ~p1_old~0_12 |old(~p1_old~0)_21|) (= |old(~mode2~0)_21| ~mode2~0_4) (= |old(~p2_new~0)_21| ~p2_new~0_12)) :named ssa_21_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node2_~m2~0_12_fresh_1) :named ssa_22))
(assert (! (= (mod ~mode2~0_21 256) 0) :named ssa_23))
(assert (! (and (= ~p2_new~0_24 (ite (<= (mod (ite (and (not (= ~send2~0_21 ~nomsg~0_1)) (= ~p2_new~0_21 ~nomsg~0_1)) ~send2~0_21 ~p2_new~0_21) 256) 127) (mod (ite (and (not (= ~send2~0_21 ~nomsg~0_1)) (= ~p2_new~0_21 ~nomsg~0_1)) ~send2~0_21 ~p2_new~0_21) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_21 ~nomsg~0_1)) (= ~p2_new~0_21 ~nomsg~0_1)) ~send2~0_21 ~p2_new~0_21) 256)))) (not (= (mod ~alive2~0_4 256) 0))) :named ssa_24))
(assert (! (= ~mode2~0_25 1) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! true :named ssa_27_return))
(assert (! (and (= ~send3~0_28 |old(~send3~0)_28|) (= |old(~st3~0)_28| ~st3~0_28) (= |old(~p3_new~0)_28| ~p3_new~0_28) (= |old(~p2_old~0)_28| ~p2_old~0_28) (= |old(~mode3~0)_28| ~mode3~0_28)) :named ssa_28_GlobVarAssigCall))
(assert (! true :named ssa_28_LocVarAssigCall))
(assert (! (and (= |old(~send3~0)_28| ~send3~0_4) (= |old(~p3_new~0)_28| ~p3_new~0_12) (= ~p2_old~0_12 |old(~p2_old~0)_28|) (= |old(~mode3~0)_28| ~mode3~0_4) (= |old(~st3~0)_28| ~st3~0_4)) :named ssa_28_OldVarAssigCall))
(assert (! (= ~nomsg~0_1 v_node3_~m3~0_12_fresh_1) :named ssa_29))
(assert (! (= (mod ~mode3~0_28 256) 0) :named ssa_30))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_28 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_28)) ~send3~0_28 ~p3_new~0_28) 256) 127) (mod (ite (and (not (= ~send3~0_28 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_28)) ~send3~0_28 ~p3_new~0_28) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_28 ~nomsg~0_1)) (= ~nomsg~0_1 ~p3_new~0_28)) ~send3~0_28 ~p3_new~0_28) 256))) ~p3_new~0_31) (not (= (mod ~alive3~0_4 256) 0))) :named ssa_31))
(assert (! (= ~mode3~0_32 1) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! true :named ssa_34_return))
(assert (! (and (= ~p2_new~0_24 ~p2_old~0_35) (= ~nomsg~0_1 ~p1_new~0_35) (= ~p2_new~0_35 ~nomsg~0_1) (= ~p1_old~0_35 ~p1_new~0_14) (= ~nomsg~0_1 ~p3_new~0_35) (= ~p3_old~0_35 ~p3_new~0_31)) :named ssa_35))
(assert (! true :named ssa_36_GlobVarAssigCall))
(assert (! true :named ssa_36_LocVarAssigCall))
(assert (! true :named ssa_36_OldVarAssigCall))
(assert (! true :named ssa_37))
(assert (! (and (< 1 (+ ~st1~0_14 ~st2~0_21 ~st3~0_28)) (= check_~tmp~1_38 0)) :named ssa_38))
(assert (! (= |check_#res_39| check_~tmp~1_38) :named ssa_39))
(assert (! (= |check_#res_39| |main_#t~ret21_40|) :named ssa_40_return))
(assert (! (and (<= 0 (+ |main_#t~ret21_40| 2147483648)) (= |main_#t~ret21_40| main_~c1~0_41) (<= |main_#t~ret21_40| 2147483647)) :named ssa_41))
(assert (! true :named ssa_42_GlobVarAssigCall))
(assert (! (= (ite (= 0 main_~c1~0_41) 0 1) |assert_#in~arg_42|) :named ssa_42_LocVarAssigCall))
(assert (! true :named ssa_42_OldVarAssigCall))
(assert (! (= assert_~arg_43 |assert_#in~arg_42|) :named ssa_43))
(assert (! (= (mod assert_~arg_43 256) 0) :named ssa_44))
(assert (! true :named ssa_45))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_6 ssa_8 ssa_5_OldVarAssigCall ssa_9_return) ssa_10 ssa_11 ssa_12 ssa_13 (and ssa_14_OldVarAssigCall ssa_16 ssa_14_LocVarAssigCall ssa_14_GlobVarAssigCall ssa_19 ssa_20_return ssa_15 ssa_18 ssa_17) (and ssa_21_LocVarAssigCall ssa_21_OldVarAssigCall ssa_26 ssa_27_return ssa_25 ssa_22 ssa_23 ssa_21_GlobVarAssigCall ssa_24) (and ssa_31 ssa_34_return ssa_32 ssa_28_OldVarAssigCall ssa_29 ssa_30 ssa_28_GlobVarAssigCall ssa_33 ssa_28_LocVarAssigCall) ssa_35 (and ssa_40_return ssa_39 ssa_37 ssa_38 ssa_36_OldVarAssigCall ssa_36_GlobVarAssigCall ssa_36_LocVarAssigCall) ssa_41 (and ssa_42_LocVarAssigCall ssa_42_GlobVarAssigCall ssa_42_OldVarAssigCall) ssa_43 ssa_44 (and ssa_45 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p2~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~nomsg~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~p3~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~p1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p2~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~nomsg~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~p3~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~p1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~id1~0)_-1| () Int)
(declare-fun |old(~alive1~0)_-1| () Int)
(declare-fun |old(~p2~0)_-1| () Int)
(declare-fun |old(~id3~0)_-1| () Int)
(declare-fun |old(~alive3~0)_-1| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun |old(~id2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~nomsg~0)_-1| () Int)
(declare-fun |old(~alive2~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun |old(~p3~0)_-1| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~p1~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun ~id1~0_-1 () Int)
(declare-fun ~alive1~0_-1 () Int)
(declare-fun ~p2~0_-1 () Int)
(declare-fun ~id3~0_-1 () Int)
(declare-fun ~alive3~0_-1 () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~id2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun ~alive2~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~p3~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~p1~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~id1~0_0 () Int)
(declare-fun ~alive1~0_0 () Int)
(declare-fun ~p2~0_0 () Int)
(declare-fun ~id3~0_0 () Int)
(declare-fun ~alive3~0_0 () Int)
(declare-fun ~mode2~0_0 () Int)
(declare-fun ~st3~0_0 () Int)
(declare-fun ~r1~0_0 () Int)
(declare-fun ~st1~0_0 () Int)
(declare-fun ~send2~0_0 () Int)
(declare-fun ~id2~0_0 () Int)
(declare-fun ~p1_old~0_0 () Int)
(declare-fun ~nomsg~0_0 () Int)
(declare-fun ~alive2~0_0 () Int)
(declare-fun ~p3_old~0_0 () Int)
(declare-fun ~p3~0_0 () Int)
(declare-fun ~p2_old~0_0 () Int)
(declare-fun ~mode1~0_0 () Int)
(declare-fun ~mode3~0_0 () Int)
(declare-fun ~p3_new~0_0 () Int)
(declare-fun ~p2_new~0_0 () Int)
(declare-fun ~p1_new~0_0 () Int)
(declare-fun ~st2~0_0 () Int)
(declare-fun ~p1~0_0 () Int)
(declare-fun ~send3~0_0 () Int)
(declare-fun ~send1~0_0 () Int)
(assert (! (and (= ~p1_old~0_-1 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-1) (= |old(~p2_old~0)_-1| ~p2_old~0_-1) (= ~p3~0_-1 |old(~p3~0)_-1|) (= ~nomsg~0_-1 |old(~nomsg~0)_-1|) (= |old(~alive2~0)_-1| ~alive2~0_-1) (= |old(~p1_new~0)_-1| ~p1_new~0_-1) (= |old(~alive1~0)_-1| ~alive1~0_-1) (= |old(~id2~0)_-1| ~id2~0_-1) (= ~r1~0_-1 |old(~r1~0)_-1|) (= ~p2~0_-1 |old(~p2~0)_-1|) (= |old(~alive3~0)_-1| ~alive3~0_-1) (= |old(~id3~0)_-1| ~id3~0_-1) (= ~send2~0_-1 |old(~send2~0)_-1|) (= |old(~p2_new~0)_-1| ~p2_new~0_-1) (= ~send1~0_-1 |old(~send1~0)_-1|) (= |old(~id1~0)_-1| ~id1~0_-1) (= ~p3_new~0_-1 |old(~p3_new~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-1) (= |old(~st1~0)_-1| ~st1~0_-1) (= |old(~mode1~0)_-1| ~mode1~0_-1) (= ~send3~0_-1 |old(~send3~0)_-1|) (= ~p3_old~0_-1 |old(~p3_old~0)_-1|) (= |old(~st2~0)_-1| ~st2~0_-1) (= |old(~st3~0)_-1| ~st3~0_-1) (= ~p1~0_-1 |old(~p1~0)_-1|)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ~st3~0_0 0) (= ~p3~0_0 0) (= ~id1~0_0 0) (= (+ ~nomsg~0_0 1) 0) (= ~send2~0_0 0) (= ~p2_old~0_0 0) (= ~mode2~0_0 0) (< 0 |#StackHeapBarrier_-1|) (= ~p2_new~0_0 0) (= ~p1~0_0 0) (= 12 (select |#length_-1| 3)) (= ~st1~0_0 0) (= ~p3_new~0_0 0) (= ~alive3~0_0 0) (= ~id3~0_0 0) (= ~mode3~0_0 0) (= ~alive2~0_0 0) (= ~send3~0_0 0) (= ~p2~0_0 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~alive1~0_0 0) (= ~p1_new~0_0 0) (= ~st2~0_0 0) (= (select |#valid_-1| 1) 1) (= ~p1_old~0_0 0) (= ~send1~0_0 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~id2~0_0 0) (= (select |#length_-1| 1) 2) (= 47 (select |#length_-1| 2)) (= ~p3_old~0_0 0) (= ~r1~0_0 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~mode1~0_0 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~st2~0_-2 |old(~st2~0)_-1|) (= ~r1~0_-2 |old(~r1~0)_-1|) (= ~id2~0_-2 |old(~id2~0)_-1|) (= ~id3~0_-2 |old(~id3~0)_-1|) (= |old(~alive1~0)_-1| ~alive1~0_-2) (= |old(~alive2~0)_-1| ~alive2~0_-2) (= ~id1~0_-2 |old(~id1~0)_-1|) (= |old(~nomsg~0)_-1| ~nomsg~0_-2) (= ~st1~0_-2 |old(~st1~0)_-1|) (= |old(~send2~0)_-1| ~send2~0_-2) (= ~p3_old~0_-2 |old(~p3_old~0)_-1|) (= ~p1~0_-2 |old(~p1~0)_-1|) (= |old(~p1_new~0)_-1| ~p1_new~0_-2) (= |old(~mode1~0)_-1| ~mode1~0_-2) (= |old(~send3~0)_-1| ~send3~0_-2) (= ~p1_old~0_-2 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-2) (= ~p3~0_-2 |old(~p3~0)_-1|) (= |old(~p3_new~0)_-1| ~p3_new~0_-2) (= ~p2_old~0_-2 |old(~p2_old~0)_-1|) (= ~alive3~0_-2 |old(~alive3~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-2) (= ~send1~0_-2 |old(~send1~0)_-1|) (= |old(~p2~0)_-1| ~p2~0_-2) (= |old(~st3~0)_-1| ~st3~0_-2) (= |old(~p2_new~0)_-1| ~p2_new~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun init_~tmp~0_0 () Int)
(declare-fun init_~tmp~0_1 () Int)
(declare-fun |init_#res_2| () Int)
(declare-fun init_~tmp~0_2 () Int)
(declare-fun |init_#res_3| () Int)
(declare-fun |main_#t~ret20_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (not (= ~r1~0_-2 0)) (= init_~tmp~0_1 0)) :named ssa_1))
(assert (! (= |init_#res_2| init_~tmp~0_1) :named ssa_2))
(assert (! (= |init_#res_2| |main_#t~ret20_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-1| () Int)
(declare-fun |old(~r1~0)_-1| () Int)
(declare-fun |old(~p1_new~0)_-1| () Int)
(declare-fun |old(~st1~0)_-1| () Int)
(declare-fun |old(~p3_old~0)_-1| () Int)
(declare-fun |old(~send1~0)_-1| () Int)
(declare-fun ~mode1~0_-1 () Int)
(declare-fun ~r1~0_-1 () Int)
(declare-fun ~p1_new~0_-1 () Int)
(declare-fun ~st1~0_-1 () Int)
(declare-fun ~p3_old~0_-1 () Int)
(declare-fun ~send1~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node1_~m1~0_13_fresh_1 () Int)
(declare-fun ~r1~0_1 () Int)
(declare-fun ~p3_old~0_1 () Int)
(declare-fun node1_~m1~0_1 () Int)
(declare-fun node1_~m1~0_2 () Int)
(declare-fun ~mode1~0_3 () Int)
(assert (! (and (= |old(~p1_new~0)_-1| ~p1_new~0_-1) (= ~r1~0_-1 |old(~r1~0)_-1|) (= ~send1~0_-1 |old(~send1~0)_-1|) (= |old(~st1~0)_-1| ~st1~0_-1) (= |old(~mode1~0)_-1| ~mode1~0_-1) (= ~p3_old~0_-1 |old(~p3_old~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node1_~m1~0_13_fresh_1) :named ssa_0))
(assert (! (and (not (= (mod ~mode1~0_-1 256) 0)) (= (ite (<= (mod (+ ~r1~0_-1 1) 256) 127) (mod (+ ~r1~0_-1 1) 256) (+ (mod (+ ~r1~0_-1 1) 256) (- 256))) ~r1~0_1) (= ~p3_old~0_-1 node1_~m1~0_1) (= ~p3_old~0_1 ~nomsg~0_-1)) :named ssa_1))
(assert (! (= ~nomsg~0_-1 node1_~m1~0_1) :named ssa_2))
(assert (! (= ~mode1~0_3 0) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~r1~0_-2 |old(~r1~0)_-1|) (= ~st1~0_-2 |old(~st1~0)_-1|) (= ~p3_old~0_-2 |old(~p3_old~0)_-1|) (= |old(~p1_new~0)_-1| ~p1_new~0_-2) (= |old(~mode1~0)_-1| ~mode1~0_-2) (= ~send1~0_-2 |old(~send1~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-1| () Int)
(declare-fun |old(~p1_old~0)_-1| () Int)
(declare-fun |old(~p2_new~0)_-1| () Int)
(declare-fun |old(~st2~0)_-1| () Int)
(declare-fun |old(~send2~0)_-1| () Int)
(declare-fun ~mode2~0_-1 () Int)
(declare-fun ~p1_old~0_-1 () Int)
(declare-fun ~p2_new~0_-1 () Int)
(declare-fun ~st2~0_-1 () Int)
(declare-fun ~send2~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node2_~m2~0_13_fresh_1 () Int)
(declare-fun ~p2_new~0_2 () Int)
(declare-fun ~mode2~0_3 () Int)
(assert (! (and (= ~p1_old~0_-1 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-1) (= ~send2~0_-1 |old(~send2~0)_-1|) (= |old(~p2_new~0)_-1| ~p2_new~0_-1) (= |old(~st2~0)_-1| ~st2~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node2_~m2~0_13_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode2~0_-1 256) 0) :named ssa_1))
(assert (! (and (= ~p2_new~0_2 (ite (<= (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) 127) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send2~0_-1 ~nomsg~0_-1)) (= ~p2_new~0_-1 ~nomsg~0_-1)) ~send2~0_-1 ~p2_new~0_-1) 256)))) (not (= (mod ~alive2~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode2~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~st2~0_-2 |old(~st2~0)_-1|) (= |old(~send2~0)_-1| ~send2~0_-2) (= ~p1_old~0_-2 |old(~p1_old~0)_-1|) (= |old(~mode2~0)_-1| ~mode2~0_-2) (= |old(~p2_new~0)_-1| ~p2_new~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun |old(~st3~0)_-1| () Int)
(declare-fun |old(~mode3~0)_-1| () Int)
(declare-fun |old(~p3_new~0)_-1| () Int)
(declare-fun |old(~send3~0)_-1| () Int)
(declare-fun |old(~p2_old~0)_-1| () Int)
(declare-fun ~st3~0_-1 () Int)
(declare-fun ~mode3~0_-1 () Int)
(declare-fun ~p3_new~0_-1 () Int)
(declare-fun ~send3~0_-1 () Int)
(declare-fun ~p2_old~0_-1 () Int)
(declare-fun ~nomsg~0_-1 () Int)
(declare-fun v_node3_~m3~0_13_fresh_1 () Int)
(declare-fun ~p3_new~0_2 () Int)
(declare-fun ~mode3~0_3 () Int)
(assert (! (and (= |old(~p2_old~0)_-1| ~p2_old~0_-1) (= ~p3_new~0_-1 |old(~p3_new~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-1) (= ~send3~0_-1 |old(~send3~0)_-1|) (= |old(~st3~0)_-1| ~st3~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= ~nomsg~0_-1 v_node3_~m3~0_13_fresh_1) :named ssa_0))
(assert (! (= (mod ~mode3~0_-1 256) 0) :named ssa_1))
(assert (! (and (= (ite (<= (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) 127) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256) (+ (- 256) (mod (ite (and (not (= ~send3~0_-1 ~nomsg~0_-1)) (= ~nomsg~0_-1 ~p3_new~0_-1)) ~send3~0_-1 ~p3_new~0_-1) 256))) ~p3_new~0_2) (not (= (mod ~alive3~0_-2 256) 0))) :named ssa_2))
(assert (! (= ~mode3~0_3 1) :named ssa_3))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~send3~0)_-1| ~send3~0_-2) (= |old(~p3_new~0)_-1| ~p3_new~0_-2) (= ~p2_old~0_-2 |old(~p2_old~0)_-1|) (= |old(~mode3~0)_-1| ~mode3~0_-2) (= |old(~st3~0)_-1| ~st3~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 (and ssa_5_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~id1~0_-2 () Int)
(declare-fun ~id2~0_-2 () Int)
(declare-fun ~p1_old~0_-2 () Int)
(declare-fun ~alive2~0_-2 () Int)
(declare-fun ~alive1~0_-2 () Int)
(declare-fun ~p3_old~0_-2 () Int)
(declare-fun ~p2_old~0_-2 () Int)
(declare-fun ~id3~0_-2 () Int)
(declare-fun ~alive3~0_-2 () Int)
(declare-fun ~mode2~0_-2 () Int)
(declare-fun ~st3~0_-2 () Int)
(declare-fun ~mode1~0_-2 () Int)
(declare-fun ~mode3~0_-2 () Int)
(declare-fun ~r1~0_-2 () Int)
(declare-fun ~p1_new~0_-2 () Int)
(declare-fun ~p2_new~0_-2 () Int)
(declare-fun ~p3_new~0_-2 () Int)
(declare-fun ~st1~0_-2 () Int)
(declare-fun ~st2~0_-2 () Int)
(declare-fun ~send3~0_-2 () Int)
(declare-fun ~send2~0_-2 () Int)
(declare-fun ~send1~0_-2 () Int)
(declare-fun |old(~id1~0)_-2| () Int)
(declare-fun |old(~id2~0)_-2| () Int)
(declare-fun |old(~p1_old~0)_-2| () Int)
(declare-fun |old(~alive2~0)_-2| () Int)
(declare-fun |old(~alive1~0)_-2| () Int)
(declare-fun |old(~p3_old~0)_-2| () Int)
(declare-fun |old(~p2_old~0)_-2| () Int)
(declare-fun |old(~id3~0)_-2| () Int)
(declare-fun |old(~alive3~0)_-2| () Int)
(declare-fun |old(~mode2~0)_-2| () Int)
(declare-fun |old(~st3~0)_-2| () Int)
(declare-fun |old(~mode1~0)_-2| () Int)
(declare-fun |old(~mode3~0)_-2| () Int)
(declare-fun |old(~r1~0)_-2| () Int)
(declare-fun |old(~p1_new~0)_-2| () Int)
(declare-fun |old(~p2_new~0)_-2| () Int)
(declare-fun |old(~p3_new~0)_-2| () Int)
(declare-fun |old(~st1~0)_-2| () Int)
(declare-fun |old(~st2~0)_-2| () Int)
(declare-fun |old(~send3~0)_-2| () Int)
(declare-fun |old(~send2~0)_-2| () Int)
(declare-fun |old(~send1~0)_-2| () Int)
(declare-fun check_~tmp~1_0 () Int)
(declare-fun check_~tmp~1_1 () Int)
(declare-fun |check_#res_2| () Int)
(declare-fun check_~tmp~1_2 () Int)
(declare-fun |main_#t~ret21_3| () Int)
(declare-fun |check_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (< 1 (+ ~st1~0_-2 ~st2~0_-2 ~st3~0_-2)) (= check_~tmp~1_1 0)) :named ssa_1))
(assert (! (= |check_#res_2| check_~tmp~1_1) :named ssa_2))
(assert (! (= |check_#res_2| |main_#t~ret21_3|) :named ssa_3_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
