(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:18:36+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id prefixsum_iter.c_AllErrorsAtOnce_Iteration12)
(define-fun ~initToZeroAtPointerBaseAddress~int ((in0 (Array Int (Array Int Int))) (in1 Int)) (Array Int (Array Int Int)) (store in0 in1 ((as const (Array Int Int)) 0)))
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet13| () Int)
(declare-fun |c_main_#t~nondet13_primed| () Int)
(declare-fun |c_main_#t~ret14| () Int)
(declare-fun |c_main_#t~ret14_primed| () Int)
(declare-fun |c_main_#t~malloc15.base| () Int)
(declare-fun |c_main_#t~malloc15.base_primed| () Int)
(declare-fun |c_main_#t~malloc15.offset| () Int)
(declare-fun |c_main_#t~malloc15.offset_primed| () Int)
(declare-fun |c_main_#t~malloc16.base| () Int)
(declare-fun |c_main_#t~malloc16.base_primed| () Int)
(declare-fun |c_main_#t~malloc16.offset| () Int)
(declare-fun |c_main_#t~malloc16.offset_primed| () Int)
(declare-fun |c_main_#t~mem17| () Int)
(declare-fun |c_main_#t~mem17_primed| () Int)
(declare-fun |c_main_#t~post18| () Int)
(declare-fun |c_main_#t~post18_primed| () Int)
(declare-fun |c_main_#t~ret19| () Int)
(declare-fun |c_main_#t~ret19_primed| () Int)
(declare-fun c_main_~n~0 () Int)
(declare-fun c_main_~n~0_primed () Int)
(declare-fun c_main_~a~0.base () Int)
(declare-fun c_main_~a~0.base_primed () Int)
(declare-fun c_main_~a~0.offset () Int)
(declare-fun c_main_~a~0.offset_primed () Int)
(declare-fun c_main_~a0~0.base () Int)
(declare-fun c_main_~a0~0.base_primed () Int)
(declare-fun c_main_~a0~0.offset () Int)
(declare-fun c_main_~a0~0.offset_primed () Int)
(declare-fun c_main_~i~1 () Int)
(declare-fun c_main_~i~1_primed () Int)
(declare-fun c_main_~space~1 () Int)
(declare-fun c_main_~space~1_primed () Int)
(declare-fun |c_calloc_#in~nmemb| () Int)
(declare-fun |c_calloc_#in~nmemb_primed| () Int)
(declare-fun |c_calloc_#in~size| () Int)
(declare-fun |c_calloc_#in~size_primed| () Int)
(declare-fun |c_calloc_#res.base| () Int)
(declare-fun |c_calloc_#res.base_primed| () Int)
(declare-fun |c_calloc_#res.offset| () Int)
(declare-fun |c_calloc_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_upsweep_#in~a.base| () Int)
(declare-fun |c_upsweep_#in~a.base_primed| () Int)
(declare-fun |c_upsweep_#in~a.offset| () Int)
(declare-fun |c_upsweep_#in~a.offset_primed| () Int)
(declare-fun |c_upsweep_#in~n| () Int)
(declare-fun |c_upsweep_#in~n_primed| () Int)
(declare-fun |c_upsweep_#res| () Int)
(declare-fun |c_upsweep_#res_primed| () Int)
(declare-fun |c_upsweep_#t~mem5| () Int)
(declare-fun |c_upsweep_#t~mem5_primed| () Int)
(declare-fun |c_upsweep_#t~mem6| () Int)
(declare-fun |c_upsweep_#t~mem6_primed| () Int)
(declare-fun c_upsweep_~right~0 () Int)
(declare-fun c_upsweep_~right~0_primed () Int)
(declare-fun c_upsweep_~left~0 () Int)
(declare-fun c_upsweep_~left~0_primed () Int)
(declare-fun c_upsweep_~a.base () Int)
(declare-fun c_upsweep_~a.base_primed () Int)
(declare-fun c_upsweep_~a.offset () Int)
(declare-fun c_upsweep_~a.offset_primed () Int)
(declare-fun c_upsweep_~n () Int)
(declare-fun c_upsweep_~n_primed () Int)
(declare-fun c_upsweep_~space~0 () Int)
(declare-fun c_upsweep_~space~0_primed () Int)
(declare-fun |c_is_pow2_#in~x| () Int)
(declare-fun |c_is_pow2_#in~x_primed| () Int)
(declare-fun |c_is_pow2_#res| () Int)
(declare-fun |c_is_pow2_#res_primed| () Int)
(declare-fun c_is_pow2_~x () Int)
(declare-fun c_is_pow2_~x_primed () Int)
(declare-fun |c_#Ultimate.meminit_#ptr.base| () Int)
(declare-fun |c_#Ultimate.meminit_#ptr.base_primed| () Int)
(declare-fun |c_#Ultimate.meminit_#ptr.offset| () Int)
(declare-fun |c_#Ultimate.meminit_#ptr.offset_primed| () Int)
(declare-fun |c_#Ultimate.meminit_#amountOfFields| () Int)
(declare-fun |c_#Ultimate.meminit_#amountOfFields_primed| () Int)
(declare-fun |c_#Ultimate.meminit_#sizeOfFields| () Int)
(declare-fun |c_#Ultimate.meminit_#sizeOfFields_primed| () Int)
(declare-fun |c_#Ultimate.meminit_#product| () Int)
(declare-fun |c_#Ultimate.meminit_#product_primed| () Int)
(declare-fun |c_free_#in~0.base| () Int)
(declare-fun |c_free_#in~0.base_primed| () Int)
(declare-fun |c_free_#in~0.offset| () Int)
(declare-fun |c_free_#in~0.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_check_#in~a0.base| () Int)
(declare-fun |c_check_#in~a0.base_primed| () Int)
(declare-fun |c_check_#in~a0.offset| () Int)
(declare-fun |c_check_#in~a0.offset_primed| () Int)
(declare-fun |c_check_#in~a.base| () Int)
(declare-fun |c_check_#in~a.base_primed| () Int)
(declare-fun |c_check_#in~a.offset| () Int)
(declare-fun |c_check_#in~a.offset_primed| () Int)
(declare-fun |c_check_#in~n| () Int)
(declare-fun |c_check_#in~n_primed| () Int)
(declare-fun |c_check_#t~mem10| () Int)
(declare-fun |c_check_#t~mem10_primed| () Int)
(declare-fun |c_check_#t~mem11| () Int)
(declare-fun |c_check_#t~mem11_primed| () Int)
(declare-fun |c_check_#t~post12| () Int)
(declare-fun |c_check_#t~post12_primed| () Int)
(declare-fun c_check_~a0.base () Int)
(declare-fun c_check_~a0.base_primed () Int)
(declare-fun c_check_~a0.offset () Int)
(declare-fun c_check_~a0.offset_primed () Int)
(declare-fun c_check_~a.base () Int)
(declare-fun c_check_~a.base_primed () Int)
(declare-fun c_check_~a.offset () Int)
(declare-fun c_check_~a.offset_primed () Int)
(declare-fun c_check_~n () Int)
(declare-fun c_check_~n_primed () Int)
(declare-fun c_check_~i~0 () Int)
(declare-fun c_check_~i~0_primed () Int)
(declare-fun c_check_~sum~0 () Int)
(declare-fun c_check_~sum~0_primed () Int)
(declare-fun |c_downsweep_#in~a.base| () Int)
(declare-fun |c_downsweep_#in~a.base_primed| () Int)
(declare-fun |c_downsweep_#in~a.offset| () Int)
(declare-fun |c_downsweep_#in~a.offset_primed| () Int)
(declare-fun |c_downsweep_#in~n| () Int)
(declare-fun |c_downsweep_#in~n_primed| () Int)
(declare-fun |c_downsweep_#in~space| () Int)
(declare-fun |c_downsweep_#in~space_primed| () Int)
(declare-fun |c_downsweep_#t~mem7| () Int)
(declare-fun |c_downsweep_#t~mem7_primed| () Int)
(declare-fun |c_downsweep_#t~mem8| () Int)
(declare-fun |c_downsweep_#t~mem8_primed| () Int)
(declare-fun |c_downsweep_#t~mem9| () Int)
(declare-fun |c_downsweep_#t~mem9_primed| () Int)
(declare-fun c_downsweep_~left~1 () Int)
(declare-fun c_downsweep_~left~1_primed () Int)
(declare-fun c_downsweep_~temp~0 () Int)
(declare-fun c_downsweep_~temp~0_primed () Int)
(declare-fun c_downsweep_~right~1 () Int)
(declare-fun c_downsweep_~right~1_primed () Int)
(declare-fun c_downsweep_~a.base () Int)
(declare-fun c_downsweep_~a.base_primed () Int)
(declare-fun c_downsweep_~a.offset () Int)
(declare-fun c_downsweep_~a.offset_primed () Int)
(declare-fun c_downsweep_~n () Int)
(declare-fun c_downsweep_~n_primed () Int)
(declare-fun c_downsweep_~space () Int)
(declare-fun c_downsweep_~space_primed () Int)
(declare-fun |c_#Ultimate.allocOnHeap_~size| () Int)
(declare-fun |c_#Ultimate.allocOnHeap_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnHeap_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnHeap_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnHeap_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnHeap_#res.offset_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret20| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret20_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2.base| () Int)
(declare-fun |c___assert_fail_#in~2.base_primed| () Int)
(declare-fun |c___assert_fail_#in~2.offset| () Int)
(declare-fun |c___assert_fail_#in~2.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~3| () Int)
(declare-fun |c___assert_fail_#in~3_primed| () Int)
(declare-fun |c___assert_fail_#in~4.base| () Int)
(declare-fun |c___assert_fail_#in~4.base_primed| () Int)
(declare-fun |c___assert_fail_#in~4.offset| () Int)
(declare-fun |c___assert_fail_#in~4.offset_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~mem17_2| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_3| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_3| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_3| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_3| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_4| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_4| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_4| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_4| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret20_3| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_5| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_5| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_5| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_5| () Int)
(declare-fun c_aux_v_ArrVal_3 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_6| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_6| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_6| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_6| () Int)
(declare-fun c_aux_v_ArrVal_6 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_8 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun c_aux_v_ArrVal_9 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_10 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_12 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_11 () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_14 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_7| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_7| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_7| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_7| () Int)
(declare-fun c_aux_v_ArrVal_15 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_17 () Int)
(declare-fun c_aux_v_ArrVal_16 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_8| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_8| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_8| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_8| () Int)
(declare-fun c_aux_v_ArrVal_18 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_19 () Int)
(declare-fun c_aux_v_ArrVal_20 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_21 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_22 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_24 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_23 () Int)
(declare-fun c_aux_v_ArrVal_25 () Int)
(declare-fun c_aux_v_ArrVal_26 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_9| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_9| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_9| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_9| () Int)
(declare-fun c_aux_v_ArrVal_27 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_28 () Int)
(declare-fun c_aux_v_ArrVal_29 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_10| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_10| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_10| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_10| () Int)
(declare-fun c_aux_v_ArrVal_30 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_32 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_31 () Int)
(declare-fun c_aux_v_ArrVal_34 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_33 () Int)
(declare-fun c_aux_v_ArrVal_35 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_36 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_37 () Int)
(declare-fun c_aux_v_ArrVal_38 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_39 () Int)
(declare-fun c_aux_v_ArrVal_40 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_11| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_11| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_11| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_11| () Int)
(declare-fun c_aux_v_ArrVal_41 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_42 () Int)
(declare-fun c_aux_v_ArrVal_43 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_12| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_12| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_12| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_12| () Int)
(declare-fun c_aux_v_ArrVal_44 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_46 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_45 () Int)
(declare-fun c_aux_v_ArrVal_48 () Int)
(declare-fun c_aux_v_ArrVal_47 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_50 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_49 () Int)
(declare-fun c_aux_v_ArrVal_51 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_52 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_53 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_54 () Int)
(declare-fun c_aux_v_ArrVal_56 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_55 () Int)
(declare-fun c_aux_v_ArrVal_57 () Int)
(declare-fun c_aux_v_ArrVal_58 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_13| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_13| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_13| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_13| () Int)
(declare-fun c_aux_v_ArrVal_59 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_60 () Int)
(declare-fun c_aux_v_ArrVal_61 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_14| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_14| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_14| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_14| () Int)
(declare-fun c_aux_v_ArrVal_62 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_64 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_63 () Int)
(declare-fun c_aux_v_ArrVal_66 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_65 () Int)
(declare-fun c_aux_v_ArrVal_67 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_68 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_69 () Int)
(declare-fun c_aux_v_ArrVal_70 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_71 () Int)
(declare-fun c_aux_v_ArrVal_72 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_15| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_15| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_15| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_15| () Int)
(declare-fun c_aux_v_ArrVal_73 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_75 () Int)
(declare-fun c_aux_v_ArrVal_74 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_16| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_16| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_16| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_16| () Int)
(declare-fun c_aux_v_ArrVal_76 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_78 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_77 () Int)
(declare-fun c_aux_v_ArrVal_80 () Int)
(declare-fun c_aux_v_ArrVal_79 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_82 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_81 () Int)
(declare-fun c_aux_v_ArrVal_83 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_84 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_85 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_86 () Int)
(declare-fun c_aux_v_ArrVal_88 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_87 () Int)
(declare-fun c_aux_v_ArrVal_90 () Int)
(declare-fun c_aux_v_ArrVal_89 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_17| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_17| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_17| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_17| () Int)
(declare-fun c_aux_v_ArrVal_91 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_92 () Int)
(declare-fun c_aux_v_ArrVal_93 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_18| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_18| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_18| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_18| () Int)
(declare-fun c_aux_v_ArrVal_94 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_96 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_95 () Int)
(declare-fun c_aux_v_ArrVal_98 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_97 () Int)
(declare-fun c_aux_v_ArrVal_99 () Int)
(declare-fun c_aux_v_ArrVal_100 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_101 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_102 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_103 () Int)
(declare-fun c_aux_v_ArrVal_104 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_106 () Int)
(declare-fun c_aux_v_ArrVal_105 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_19| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_19| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_19| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_19| () Int)
(declare-fun c_aux_v_ArrVal_107 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_109 () Int)
(declare-fun c_aux_v_ArrVal_108 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_20| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_20| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_20| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_20| () Int)
(declare-fun c_aux_v_ArrVal_110 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_111 () Int)
(declare-fun c_aux_v_ArrVal_112 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_113 () Int)
(declare-fun c_aux_v_ArrVal_114 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_115 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_116 () Int)
(declare-fun c_aux_v_ArrVal_118 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_117 () Int)
(declare-fun c_aux_v_ArrVal_119 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_120 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_122 () Int)
(declare-fun c_aux_v_ArrVal_121 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_123 () Int)
(declare-fun c_aux_v_ArrVal_124 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_126 () Int)
(declare-fun c_aux_v_ArrVal_125 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_21| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_21| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_21| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_21| () Int)
(declare-fun c_aux_v_ArrVal_127 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_129 () Int)
(declare-fun c_aux_v_ArrVal_128 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_22| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_22| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_22| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_22| () Int)
(declare-fun c_aux_v_ArrVal_130 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_131 () Int)
(declare-fun c_aux_v_ArrVal_132 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_133 () Int)
(declare-fun c_aux_v_ArrVal_134 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_136 () Int)
(declare-fun c_aux_v_ArrVal_135 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_137 () Int)
(declare-fun c_aux_v_ArrVal_138 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_139 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_141 () Int)
(declare-fun c_aux_v_ArrVal_140 () Int)
(declare-fun c_aux_v_ArrVal_142 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_143 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_145 () Int)
(declare-fun c_aux_v_ArrVal_144 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_146 () Int)
(declare-fun c_aux_v_ArrVal_147 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_150 () Int)
(declare-fun c_aux_v_ArrVal_148 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_149 () Int)
(declare-fun c_aux_v_ArrVal_152 () Int)
(declare-fun c_aux_v_ArrVal_151 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_23| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_23| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_23| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_23| () Int)
(declare-fun c_aux_v_ArrVal_153 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_155 () Int)
(declare-fun c_aux_v_ArrVal_154 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_24| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_24| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_24| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_24| () Int)
(declare-fun c_aux_v_ArrVal_156 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_157 () Int)
(declare-fun c_aux_v_ArrVal_158 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_159 () Int)
(declare-fun c_aux_v_ArrVal_160 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_161 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_162 () Int)
(declare-fun c_aux_v_ArrVal_163 () Int)
(declare-fun c_aux_v_ArrVal_164 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_167 () Int)
(declare-fun c_aux_v_ArrVal_166 () Int)
(declare-fun c_aux_v_ArrVal_165 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_169 () Int)
(declare-fun c_aux_v_ArrVal_170 () Int)
(declare-fun c_aux_v_ArrVal_168 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_171 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_172 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_173 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_174 () Int)
(declare-fun c_aux_v_ArrVal_175 () Int)
(declare-fun c_aux_v_ArrVal_176 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_179 () Int)
(declare-fun c_aux_v_ArrVal_178 () Int)
(declare-fun c_aux_v_ArrVal_177 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_180 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_182 () Int)
(declare-fun c_aux_v_ArrVal_181 () Int)
(declare-fun c_aux_v_ArrVal_184 () Int)
(declare-fun c_aux_v_ArrVal_183 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_25| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_25| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_25| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_25| () Int)
(declare-fun c_aux_v_ArrVal_185 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_187 () Int)
(declare-fun c_aux_v_ArrVal_186 () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#amountOfFieldsInParam_26| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#ptr.offsetInParam_26| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#productInParam_26| () Int)
(declare-fun |c_aux_v_#Ultimate.meminit_#sizeOfFieldsInParam_26| () Int)
(declare-fun c_aux_v_ArrVal_188 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_189 () Int)
(declare-fun c_aux_v_ArrVal_190 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_192 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_191 () Int)
(declare-fun c_aux_v_ArrVal_194 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_193 () Int)
(declare-fun c_aux_v_ArrVal_195 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_196 () Int)
(declare-fun c_aux_v_ArrVal_197 () Int)
(declare-fun c_aux_v_ArrVal_198 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_201 () Int)
(declare-fun c_aux_v_ArrVal_200 () Int)
(declare-fun c_aux_v_ArrVal_199 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_202 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_203 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_204 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_205 () Int)
(declare-fun c_aux_v_ArrVal_207 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_206 () Int)
(declare-fun c_aux_v_ArrVal_210 () Int)
(declare-fun c_aux_v_ArrVal_208 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_209 () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_#t~nondet13_4| () Int)
(declare-fun main_~n~0_4 () Int)
(declare-fun main_~n~0_5 () Int)
(declare-fun |assume_abort_if_not_#in~cond_5| () Int)
(declare-fun assume_abort_if_not_~cond_6 () Int)
(declare-fun assume_abort_if_not_~cond_7 () Int)
(declare-fun |is_pow2_#in~x_10| () Int)
(declare-fun main_~n~0_10 () Int)
(declare-fun is_pow2_~x_11 () Int)
(declare-fun is_pow2_~x_13 () Int)
(declare-fun |is_pow2_#res_13| () Int)
(declare-fun |main_#t~ret14_14| () Int)
(declare-fun |is_pow2_#res_14| () Int)
(declare-fun |main_#t~ret14_16| () Int)
(declare-fun |assume_abort_if_not_#in~cond_16| () Int)
(declare-fun assume_abort_if_not_~cond_17 () Int)
(declare-fun assume_abort_if_not_~cond_18 () Int)
(declare-fun |main_#t~malloc15.offset_21| () Int)
(declare-fun |main_#t~ret14_21| () Int)
(declare-fun |#valid_21| () (Array Int Int))
(declare-fun |#length_21| () (Array Int Int))
(declare-fun |main_#t~malloc15.base_21| () Int)
(declare-fun v_ArrVal_212_fresh_1 () Int)
(declare-fun v_ArrVal_211_fresh_1 () Int)
(declare-fun |old(#memory_int#1)_22| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_22| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc15.offset_22| () Int)
(declare-fun main_~n~0_22 () Int)
(declare-fun |#Ultimate.meminit_#ptr.base_22| () Int)
(declare-fun |main_#t~malloc15.base_22| () Int)
(declare-fun |v_#Ultimate.meminit_#amountOfFieldsInParam_27_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#productInParam_27_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#ptr.offsetInParam_27_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#sizeOfFieldsInParam_27_fresh_1| () Int)
(declare-fun |#memory_int#1_23| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_213_fresh_1 () (Array Int Int))
(declare-fun |main_#t~malloc15.offset_25| () Int)
(declare-fun |#valid_25| () (Array Int Int))
(declare-fun main_~a~0.base_25 () Int)
(declare-fun |main_#t~malloc16.offset_25| () Int)
(declare-fun |#length_25| () (Array Int Int))
(declare-fun |main_#t~malloc15.base_25| () Int)
(declare-fun main_~a~0.offset_25 () Int)
(declare-fun |main_#t~malloc16.base_25| () Int)
(declare-fun v_ArrVal_214_fresh_1 () Int)
(declare-fun v_ArrVal_215_fresh_1 () Int)
(declare-fun |old(#memory_int#1)_26| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_26| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc16.offset_26| () Int)
(declare-fun main_~n~0_26 () Int)
(declare-fun |#Ultimate.meminit_#ptr.base_26| () Int)
(declare-fun |main_#t~malloc16.base_26| () Int)
(declare-fun |v_#Ultimate.meminit_#amountOfFieldsInParam_28_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#sizeOfFieldsInParam_28_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#ptr.offsetInParam_28_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#productInParam_28_fresh_1| () Int)
(declare-fun |#memory_int#1_27| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_216_fresh_1 () (Array Int Int))
(declare-fun main_~a0~0.offset_29 () Int)
(declare-fun main_~i~1_29 () Int)
(declare-fun |main_#t~malloc16.offset_29| () Int)
(declare-fun main_~a0~0.base_29 () Int)
(declare-fun |main_#t~malloc16.base_29| () Int)
(declare-fun main_~i~1_30 () Int)
(declare-fun |main_#t~post18_30| () Int)
(declare-fun |#memory_int#1_30| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_218_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_217_fresh_1 () Int)
(declare-fun main_~i~1_31 () Int)
(declare-fun |main_#t~post18_31| () Int)
(declare-fun |#memory_int#1_31| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_219_fresh_1 () Int)
(declare-fun v_ArrVal_220_fresh_1 () (Array Int Int))
(declare-fun main_~i~1_32 () Int)
(declare-fun |main_#t~post18_32| () Int)
(declare-fun |#memory_int#1_32| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_221_fresh_1 () Int)
(declare-fun v_ArrVal_222_fresh_1 () (Array Int Int))
(declare-fun main_~i~1_33 () Int)
(declare-fun |old(#memory_int#1)_34| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_34| () (Array Int (Array Int Int)))
(declare-fun |upsweep_#in~n_34| () Int)
(declare-fun main_~a~0.base_34 () Int)
(declare-fun |upsweep_#in~a.offset_34| () Int)
(declare-fun main_~n~0_34 () Int)
(declare-fun main_~a~0.offset_34 () Int)
(declare-fun |upsweep_#in~a.base_34| () Int)
(declare-fun upsweep_~space~0_35 () Int)
(declare-fun upsweep_~n_35 () Int)
(declare-fun upsweep_~a.base_35 () Int)
(declare-fun upsweep_~a.offset_35 () Int)
(declare-fun upsweep_~left~0_36 () Int)
(declare-fun upsweep_~left~0_37 () Int)
(declare-fun |upsweep_#t~mem6_37| () Int)
(declare-fun |upsweep_#t~mem5_37| () Int)
(declare-fun upsweep_~right~0_37 () Int)
(declare-fun |#memory_int#1_37| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_224_fresh_1 () Int)
(declare-fun v_ArrVal_223_fresh_1 () (Array Int Int))
(declare-fun upsweep_~left~0_38 () Int)
(declare-fun |upsweep_#t~mem6_38| () Int)
(declare-fun |upsweep_#t~mem5_38| () Int)
(declare-fun upsweep_~right~0_38 () Int)
(declare-fun |#memory_int#1_38| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_225_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_226_fresh_1 () Int)
(declare-fun upsweep_~left~0_39 () Int)
(declare-fun upsweep_~left~0_40 () Int)
(declare-fun upsweep_~space~0_40 () Int)
(declare-fun upsweep_~n_41 () Int)
(declare-fun upsweep_~space~0_42 () Int)
(declare-fun |upsweep_#res_42| () Int)
(declare-fun |main_#t~ret19_43| () Int)
(declare-fun |upsweep_#res_43| () Int)
(declare-fun |main_#t~ret19_44| () Int)
(declare-fun main_~space~1_44 () Int)
(declare-fun |old(#memory_int#1)_45| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_45| () (Array Int (Array Int Int)))
(declare-fun |downsweep_#in~a.offset_45| () Int)
(declare-fun |downsweep_#in~space_45| () Int)
(declare-fun main_~a~0.base_45 () Int)
(declare-fun |downsweep_#in~n_45| () Int)
(declare-fun |downsweep_#in~a.base_45| () Int)
(declare-fun main_~n~0_45 () Int)
(declare-fun main_~a~0.offset_45 () Int)
(declare-fun main_~space~1_45 () Int)
(declare-fun downsweep_~n_46 () Int)
(declare-fun downsweep_~space_46 () Int)
(declare-fun downsweep_~a.offset_46 () Int)
(declare-fun downsweep_~a.base_46 () Int)
(declare-fun |#memory_int#1_46| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_228_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_227_fresh_1 () Int)
(declare-fun downsweep_~right~1_47 () Int)
(declare-fun downsweep_~right~1_48 () Int)
(declare-fun |downsweep_#t~mem8_48| () Int)
(declare-fun |downsweep_#t~mem9_48| () Int)
(declare-fun |#memory_int#1_48| () (Array Int (Array Int Int)))
(declare-fun downsweep_~temp~0_48 () Int)
(declare-fun downsweep_~left~1_48 () Int)
(declare-fun |downsweep_#t~mem7_48| () Int)
(declare-fun v_ArrVal_229_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_231_fresh_1 () Int)
(declare-fun v_ArrVal_230_fresh_1 () Int)
(declare-fun downsweep_~right~1_49 () Int)
(declare-fun downsweep_~right~1_50 () Int)
(declare-fun downsweep_~space_50 () Int)
(declare-fun downsweep_~space_51 () Int)
(declare-fun |check_#in~a.offset_54| () Int)
(declare-fun main_~a0~0.offset_54 () Int)
(declare-fun |check_#in~a.base_54| () Int)
(declare-fun main_~a~0.base_54 () Int)
(declare-fun main_~n~0_54 () Int)
(declare-fun main_~a~0.offset_54 () Int)
(declare-fun |check_#in~a0.base_54| () Int)
(declare-fun |check_#in~n_54| () Int)
(declare-fun main_~a0~0.base_54 () Int)
(declare-fun |check_#in~a0.offset_54| () Int)
(declare-fun check_~a0.base_55 () Int)
(declare-fun check_~a.base_55 () Int)
(declare-fun check_~a.offset_55 () Int)
(declare-fun check_~i~0_55 () Int)
(declare-fun check_~sum~0_55 () Int)
(declare-fun check_~a0.offset_55 () Int)
(declare-fun check_~n_55 () Int)
(declare-fun |check_#t~mem10_56| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_57| () Int)
(declare-fun |check_#t~mem10_57| () Int)
(declare-fun check_~sum~0_57 () Int)
(declare-fun __VERIFIER_assert_~cond_58 () Int)
(declare-fun __VERIFIER_assert_~cond_59 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#length_-1| 2) 17) (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-1| 3) 12) (= (select |#valid_-1| 0) 0) (= (select |#valid_-1| 3) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#length_-1| 1) 2)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= main_~n~0_4 2147483647) (<= 0 (+ main_~n~0_4 2147483648))) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_5| (ite (and (< main_~n~0_4 1073741824) (<= 0 main_~n~0_4)) 1 0)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_5| assume_abort_if_not_~cond_6) :named ssa_6))
(assert (! (not (= assume_abort_if_not_~cond_6 0)) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! true :named ssa_10_GlobVarAssigCall))
(assert (! (= |is_pow2_#in~x_10| main_~n~0_4) :named ssa_10_LocVarAssigCall))
(assert (! true :named ssa_10_OldVarAssigCall))
(assert (! (= |is_pow2_#in~x_10| is_pow2_~x_11) :named ssa_11))
(assert (! (or (<= (mod is_pow2_~x_11 4294967296) 1) (not (= (mod is_pow2_~x_11 2) 0))) :named ssa_12))
(assert (! (= (ite (= (mod is_pow2_~x_11 4294967296) 1) 1 0) |is_pow2_#res_13|) :named ssa_13))
(assert (! (= |is_pow2_#res_13| |main_#t~ret14_14|) :named ssa_14_return))
(assert (! (and (<= |main_#t~ret14_14| 2147483647) (<= 0 (+ |main_#t~ret14_14| 2147483648))) :named ssa_15))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_16| |main_#t~ret14_14|) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_16| assume_abort_if_not_~cond_17) :named ssa_17))
(assert (! (not (= assume_abort_if_not_~cond_17 0)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! true :named ssa_20_return))
(assert (! (and (not (= |main_#t~malloc15.base_21| 0)) (= v_ArrVal_211_fresh_1 1) (< |main_#t~malloc15.base_21| |#StackHeapBarrier_-1|) (= |main_#t~malloc15.offset_21| 0) (= (store |#length_3| |main_#t~malloc15.base_21| v_ArrVal_212_fresh_1) |#length_21|) (= v_ArrVal_212_fresh_1 (* (mod main_~n~0_4 1073741824) 4)) (= |#valid_21| (store |#valid_3| |main_#t~malloc15.base_21| v_ArrVal_211_fresh_1)) (= (select |#valid_3| |main_#t~malloc15.base_21|) 0)) :named ssa_21))
(assert (! (= |old(#memory_int#1)_22| |#memory_int#1_22|) :named ssa_22_GlobVarAssigCall))
(assert (! (and (= |#Ultimate.meminit_#ptr.base_22| |main_#t~malloc15.base_21|) (= |v_#Ultimate.meminit_#sizeOfFieldsInParam_27_fresh_1| 4) (= (* main_~n~0_4 4) |v_#Ultimate.meminit_#productInParam_27_fresh_1|) (= main_~n~0_4 |v_#Ultimate.meminit_#amountOfFieldsInParam_27_fresh_1|) (= |v_#Ultimate.meminit_#ptr.offsetInParam_27_fresh_1| |main_#t~malloc15.offset_21|)) :named ssa_22_LocVarAssigCall))
(assert (! (= |old(#memory_int#1)_22| |#memory_int#1_3|) :named ssa_22_OldVarAssigCall))
(assert (! (and (= ((as const (Array Int Int)) 0) v_ArrVal_213_fresh_1) (= |#memory_int#1_23| (store |#memory_int#1_22| |#Ultimate.meminit_#ptr.base_22| v_ArrVal_213_fresh_1))) :named ssa_23))
(assert (! true :named ssa_24_return))
(assert (! (and (= (select |#valid_21| |main_#t~malloc16.base_25|) 0) (= v_ArrVal_214_fresh_1 1) (not (= |main_#t~malloc16.base_25| 0)) (= (store |#valid_21| |main_#t~malloc16.base_25| v_ArrVal_214_fresh_1) |#valid_25|) (= (store |#length_21| |main_#t~malloc16.base_25| v_ArrVal_215_fresh_1) |#length_25|) (= |main_#t~malloc16.offset_25| 0) (= main_~a~0.offset_25 |main_#t~malloc15.offset_21|) (= main_~a~0.base_25 |main_#t~malloc15.base_21|) (< |main_#t~malloc16.base_25| |#StackHeapBarrier_-1|) (= v_ArrVal_215_fresh_1 (* (mod main_~n~0_4 1073741824) 4))) :named ssa_25))
(assert (! (= |old(#memory_int#1)_26| |#memory_int#1_26|) :named ssa_26_GlobVarAssigCall))
(assert (! (and (= |v_#Ultimate.meminit_#ptr.offsetInParam_28_fresh_1| |main_#t~malloc16.offset_25|) (= |v_#Ultimate.meminit_#sizeOfFieldsInParam_28_fresh_1| 4) (= (* main_~n~0_4 4) |v_#Ultimate.meminit_#productInParam_28_fresh_1|) (= |#Ultimate.meminit_#ptr.base_26| |main_#t~malloc16.base_25|) (= main_~n~0_4 |v_#Ultimate.meminit_#amountOfFieldsInParam_28_fresh_1|)) :named ssa_26_LocVarAssigCall))
(assert (! (= |old(#memory_int#1)_26| |#memory_int#1_23|) :named ssa_26_OldVarAssigCall))
(assert (! (and (= (store |#memory_int#1_26| |#Ultimate.meminit_#ptr.base_26| v_ArrVal_216_fresh_1) |#memory_int#1_27|) (= ((as const (Array Int Int)) 0) v_ArrVal_216_fresh_1)) :named ssa_27))
(assert (! true :named ssa_28_return))
(assert (! (and (= main_~i~1_29 0) (= main_~a0~0.base_29 |main_#t~malloc16.base_25|) (= main_~a0~0.offset_29 |main_#t~malloc16.offset_25|)) :named ssa_29))
(assert (! (and (< main_~i~1_29 main_~n~0_4) (= v_ArrVal_218_fresh_1 (store (select |#memory_int#1_27| main_~a0~0.base_29) (+ main_~a0~0.offset_29 (* main_~i~1_29 4)) v_ArrVal_217_fresh_1)) (= |#memory_int#1_30| (store |#memory_int#1_27| main_~a0~0.base_29 v_ArrVal_218_fresh_1)) (= v_ArrVal_217_fresh_1 (select (select |#memory_int#1_27| main_~a~0.base_25) (+ main_~a~0.offset_25 (* main_~i~1_29 4)))) (= main_~i~1_30 (+ main_~i~1_29 1))) :named ssa_30))
(assert (! (and (< main_~i~1_30 main_~n~0_4) (= v_ArrVal_220_fresh_1 (store (select |#memory_int#1_30| main_~a0~0.base_29) (+ main_~a0~0.offset_29 (* main_~i~1_30 4)) v_ArrVal_219_fresh_1)) (= v_ArrVal_219_fresh_1 (select (select |#memory_int#1_30| main_~a~0.base_25) (+ main_~a~0.offset_25 (* main_~i~1_30 4)))) (= (store |#memory_int#1_30| main_~a0~0.base_29 v_ArrVal_220_fresh_1) |#memory_int#1_31|) (= main_~i~1_31 (+ main_~i~1_30 1))) :named ssa_31))
(assert (! (and (< main_~i~1_31 main_~n~0_4) (= |#memory_int#1_32| (store |#memory_int#1_31| main_~a0~0.base_29 v_ArrVal_222_fresh_1)) (= (store (select |#memory_int#1_31| main_~a0~0.base_29) (+ main_~a0~0.offset_29 (* main_~i~1_31 4)) v_ArrVal_221_fresh_1) v_ArrVal_222_fresh_1) (= v_ArrVal_221_fresh_1 (select (select |#memory_int#1_31| main_~a~0.base_25) (+ main_~a~0.offset_25 (* main_~i~1_31 4)))) (= main_~i~1_32 (+ main_~i~1_31 1))) :named ssa_32))
(assert (! (<= main_~n~0_4 main_~i~1_32) :named ssa_33))
(assert (! (= |old(#memory_int#1)_34| |#memory_int#1_34|) :named ssa_34_GlobVarAssigCall))
(assert (! (and (= main_~a~0.base_25 |upsweep_#in~a.base_34|) (= |upsweep_#in~a.offset_34| main_~a~0.offset_25) (= main_~n~0_4 |upsweep_#in~n_34|)) :named ssa_34_LocVarAssigCall))
(assert (! (= |old(#memory_int#1)_34| |#memory_int#1_32|) :named ssa_34_OldVarAssigCall))
(assert (! (and (= upsweep_~a.offset_35 |upsweep_#in~a.offset_34|) (= upsweep_~space~0_35 1) (= upsweep_~n_35 |upsweep_#in~n_34|) (= |upsweep_#in~a.base_34| upsweep_~a.base_35)) :named ssa_35))
(assert (! (and (= upsweep_~space~0_35 (+ upsweep_~left~0_36 1)) (< upsweep_~space~0_35 upsweep_~n_35)) :named ssa_36))
(assert (! (and (= |#memory_int#1_37| (store |#memory_int#1_34| upsweep_~a.base_35 v_ArrVal_223_fresh_1)) (= v_ArrVal_224_fresh_1 (+ (select (select |#memory_int#1_34| upsweep_~a.base_35) (+ (* upsweep_~left~0_36 4) upsweep_~a.offset_35)) (select (select |#memory_int#1_34| upsweep_~a.base_35) (+ (* upsweep_~left~0_36 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4))))) (< upsweep_~left~0_36 upsweep_~n_35) (= (store (select |#memory_int#1_34| upsweep_~a.base_35) (+ (* upsweep_~left~0_36 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4)) (+ (select (select |#memory_int#1_34| upsweep_~a.base_35) (+ (* upsweep_~left~0_36 4) upsweep_~a.offset_35)) (select (select |#memory_int#1_34| upsweep_~a.base_35) (+ (* upsweep_~left~0_36 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4))))) v_ArrVal_223_fresh_1) (= (+ (* 2 upsweep_~space~0_35) upsweep_~left~0_36) upsweep_~left~0_37)) :named ssa_37))
(assert (! (and (= (store (select |#memory_int#1_37| upsweep_~a.base_35) (+ (* upsweep_~left~0_37 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4)) (+ (select (select |#memory_int#1_37| upsweep_~a.base_35) (+ (* upsweep_~left~0_37 4) upsweep_~a.offset_35)) (select (select |#memory_int#1_37| upsweep_~a.base_35) (+ (* upsweep_~left~0_37 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4))))) v_ArrVal_225_fresh_1) (= v_ArrVal_226_fresh_1 (+ (select (select |#memory_int#1_37| upsweep_~a.base_35) (+ (* upsweep_~left~0_37 4) upsweep_~a.offset_35)) (select (select |#memory_int#1_37| upsweep_~a.base_35) (+ (* upsweep_~left~0_37 4) upsweep_~a.offset_35 (* upsweep_~space~0_35 4))))) (< upsweep_~left~0_37 upsweep_~n_35) (= (+ (* 2 upsweep_~space~0_35) upsweep_~left~0_37) upsweep_~left~0_38) (= (store |#memory_int#1_37| upsweep_~a.base_35 v_ArrVal_225_fresh_1) |#memory_int#1_38|)) :named ssa_38))
(assert (! (<= upsweep_~n_35 upsweep_~left~0_38) :named ssa_39))
(assert (! (= (* 2 upsweep_~space~0_35) upsweep_~space~0_40) :named ssa_40))
(assert (! (<= upsweep_~n_35 upsweep_~space~0_40) :named ssa_41))
(assert (! (= |upsweep_#res_42| upsweep_~space~0_40) :named ssa_42))
(assert (! (= |main_#t~ret19_43| |upsweep_#res_42|) :named ssa_43_return))
(assert (! (and (<= 0 (+ |main_#t~ret19_43| 2147483648)) (<= |main_#t~ret19_43| 2147483647) (= |main_#t~ret19_43| main_~space~1_44)) :named ssa_44))
(assert (! (= |old(#memory_int#1)_45| |#memory_int#1_45|) :named ssa_45_GlobVarAssigCall))
(assert (! (and (= |downsweep_#in~a.base_45| main_~a~0.base_25) (= main_~n~0_4 |downsweep_#in~n_45|) (= |downsweep_#in~space_45| main_~space~1_44) (= main_~a~0.offset_25 |downsweep_#in~a.offset_45|)) :named ssa_45_LocVarAssigCall))
(assert (! (= |old(#memory_int#1)_45| |#memory_int#1_38|) :named ssa_45_OldVarAssigCall))
(assert (! (and (= |#memory_int#1_46| (store |#memory_int#1_45| downsweep_~a.base_46 v_ArrVal_228_fresh_1)) (= downsweep_~space_46 (ite (and (not (= (mod |downsweep_#in~space_45| 2) 0)) (< |downsweep_#in~space_45| 0)) (+ (div |downsweep_#in~space_45| 2) 1) (div |downsweep_#in~space_45| 2))) (= v_ArrVal_227_fresh_1 0) (= downsweep_~a.base_46 |downsweep_#in~a.base_45|) (= downsweep_~a.offset_46 |downsweep_#in~a.offset_45|) (= v_ArrVal_228_fresh_1 (store (select |#memory_int#1_45| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (- 4) (* downsweep_~n_46 4)) v_ArrVal_227_fresh_1)) (= downsweep_~n_46 |downsweep_#in~n_45|)) :named ssa_46))
(assert (! (and (< 0 downsweep_~space_46) (= (+ downsweep_~right~1_47 1) (* 2 downsweep_~space_46))) :named ssa_47))
(assert (! (and (= v_ArrVal_231_fresh_1 (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4)))) (< downsweep_~right~1_47 downsweep_~n_46) (= v_ArrVal_229_fresh_1 (store (store (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4)) (+ (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4))) (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4) (* downsweep_~space_46 (- 4)))))) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4) (* downsweep_~space_46 (- 4))) (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4))))) (= downsweep_~right~1_48 (+ (* 2 downsweep_~space_46) downsweep_~right~1_47)) (= v_ArrVal_230_fresh_1 (+ (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4))) (select (select |#memory_int#1_46| downsweep_~a.base_46) (+ downsweep_~a.offset_46 (* downsweep_~right~1_47 4) (* downsweep_~space_46 (- 4)))))) (= (store |#memory_int#1_46| downsweep_~a.base_46 v_ArrVal_229_fresh_1) |#memory_int#1_48|)) :named ssa_48))
(assert (! (<= downsweep_~n_46 downsweep_~right~1_48) :named ssa_49))
(assert (! (= downsweep_~space_50 (ite (and (< downsweep_~space_46 0) (not (= (mod downsweep_~space_46 2) 0))) (+ (div downsweep_~space_46 2) 1) (div downsweep_~space_46 2))) :named ssa_50))
(assert (! (<= downsweep_~space_50 0) :named ssa_51))
(assert (! true :named ssa_52))
(assert (! true :named ssa_53_return))
(assert (! true :named ssa_54_GlobVarAssigCall))
(assert (! (and (= main_~a0~0.offset_29 |check_#in~a0.offset_54|) (= main_~a0~0.base_29 |check_#in~a0.base_54|) (= |check_#in~a.offset_54| main_~a~0.offset_25) (= main_~n~0_4 |check_#in~n_54|) (= |check_#in~a.base_54| main_~a~0.base_25)) :named ssa_54_LocVarAssigCall))
(assert (! true :named ssa_54_OldVarAssigCall))
(assert (! (and (= |check_#in~a.offset_54| check_~a.offset_55) (= |check_#in~a0.offset_54| check_~a0.offset_55) (= check_~a.base_55 |check_#in~a.base_54|) (= check_~i~0_55 0) (= check_~a0.base_55 |check_#in~a0.base_54|) (= check_~sum~0_55 0) (= check_~n_55 |check_#in~n_54|)) :named ssa_55))
(assert (! (and (= |check_#t~mem10_56| (select (select |#memory_int#1_48| check_~a.base_55) (+ (* check_~i~0_55 4) check_~a.offset_55))) (< check_~i~0_55 check_~n_55)) :named ssa_56))
(assert (! true :named ssa_57_GlobVarAssigCall))
(assert (! (= (ite (= check_~sum~0_55 |check_#t~mem10_56|) 1 0) |__VERIFIER_assert_#in~cond_57|) :named ssa_57_LocVarAssigCall))
(assert (! true :named ssa_57_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_58 |__VERIFIER_assert_#in~cond_57|) :named ssa_58))
(assert (! (= __VERIFIER_assert_~cond_58 0) :named ssa_59))
(assert (! true :named ssa_60))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_6 ssa_8 ssa_5_OldVarAssigCall ssa_9_return) (and ssa_13 ssa_10_GlobVarAssigCall ssa_10_OldVarAssigCall ssa_12 ssa_11 ssa_10_LocVarAssigCall ssa_14_return) ssa_15 (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) ssa_21 (and ssa_22_OldVarAssigCall ssa_22_LocVarAssigCall ssa_24_return ssa_22_GlobVarAssigCall ssa_23) ssa_25 (and ssa_27 ssa_26_GlobVarAssigCall ssa_26_LocVarAssigCall ssa_28_return ssa_26_OldVarAssigCall) ssa_29 ssa_30 ssa_31 ssa_32 ssa_33 (and ssa_40 ssa_34_GlobVarAssigCall ssa_34_LocVarAssigCall ssa_34_OldVarAssigCall ssa_39 ssa_37 ssa_43_return ssa_38 ssa_36 ssa_35 ssa_41 ssa_42) ssa_44 (and ssa_46 ssa_47 ssa_53_return ssa_50 ssa_48 ssa_51 ssa_49 ssa_45_OldVarAssigCall ssa_45_LocVarAssigCall ssa_52 ssa_45_GlobVarAssigCall) (and ssa_54_OldVarAssigCall ssa_54_GlobVarAssigCall ssa_54_LocVarAssigCall) ssa_55 ssa_56 (and ssa_57_OldVarAssigCall ssa_57_LocVarAssigCall ssa_57_GlobVarAssigCall) ssa_58 ssa_59 (and ssa_60 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#length_-2| 2) 17) (= (select |#valid_-2| 1) 1) (= (select |#valid_-2| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-2| 3) 12) (= (select |#valid_-2| 0) 0) (= (select |#valid_-2| 3) 1) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select (select |#memory_int#0_-2| 1) 0) 48) (= (select |#length_-2| 1) 2)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun |assume_abort_if_not_#in~cond_-1| () Int)
(declare-fun assume_abort_if_not_~cond_0 () Int)
(declare-fun assume_abort_if_not_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (= |assume_abort_if_not_#in~cond_-1| assume_abort_if_not_~cond_0) :named ssa_0))
(assert (! (not (= assume_abort_if_not_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (= |assume_abort_if_not_#in~cond_-1| (ite (and (< main_~n~0_-2 1073741824) (<= 0 main_~n~0_-2)) 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~n~0_-2 () Int)
(declare-fun |is_pow2_#in~x_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun is_pow2_~x_0 () Int)
(declare-fun is_pow2_~x_2 () Int)
(declare-fun |is_pow2_#res_2| () Int)
(declare-fun |main_#t~ret14_3| () Int)
(declare-fun |is_pow2_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (= |is_pow2_#in~x_-1| is_pow2_~x_0) :named ssa_0))
(assert (! (or (<= (mod is_pow2_~x_0 4294967296) 1) (not (= (mod is_pow2_~x_0 2) 0))) :named ssa_1))
(assert (! (= (ite (= (mod is_pow2_~x_0 4294967296) 1) 1 0) |is_pow2_#res_2|) :named ssa_2))
(assert (! (= |is_pow2_#res_2| |main_#t~ret14_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (= |is_pow2_#in~x_-1| main_~n~0_-2) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_#t~ret14_-2| () Int)
(declare-fun |main_#t~ret14_-1| () Int)
(declare-fun |assume_abort_if_not_#in~cond_-1| () Int)
(declare-fun assume_abort_if_not_~cond_0 () Int)
(declare-fun assume_abort_if_not_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (= |assume_abort_if_not_#in~cond_-1| assume_abort_if_not_~cond_0) :named ssa_0))
(assert (! (not (= assume_abort_if_not_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (= |assume_abort_if_not_#in~cond_-1| |main_#t~ret14_-2|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc15.offset_-2| () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun |main_#t~malloc15.base_-2| () Int)
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc15.offset_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun |#Ultimate.meminit_#ptr.base_-1| () Int)
(declare-fun |main_#t~malloc15.base_-1| () Int)
(declare-fun |v_#Ultimate.meminit_#productInParam_3_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#ptr.offsetInParam_3_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#sizeOfFieldsInParam_3_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#amountOfFieldsInParam_3_fresh_1| () Int)
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_0| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_232_fresh_1 () (Array Int Int))
(assert (! (= |#memory_int#1_-1| |old(#memory_int#1)_-1|) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (store |#memory_int#1_-1| |#Ultimate.meminit_#ptr.base_-1| v_ArrVal_232_fresh_1) |#memory_int#1_0|) (= ((as const (Array Int Int)) 0) v_ArrVal_232_fresh_1)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= |#Ultimate.meminit_#ptr.base_-1| |main_#t~malloc15.base_-2|) (= |v_#Ultimate.meminit_#productInParam_3_fresh_1| (* main_~n~0_-2 4)) (= |v_#Ultimate.meminit_#sizeOfFieldsInParam_3_fresh_1| 4) (= |v_#Ultimate.meminit_#ptr.offsetInParam_3_fresh_1| |main_#t~malloc15.offset_-2|) (= main_~n~0_-2 |v_#Ultimate.meminit_#amountOfFieldsInParam_3_fresh_1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(#memory_int#1)_-1| |#memory_int#1_-2|) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc16.offset_-2| () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun |main_#t~malloc16.base_-2| () Int)
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |main_#t~malloc16.offset_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun |#Ultimate.meminit_#ptr.base_-1| () Int)
(declare-fun |main_#t~malloc16.base_-1| () Int)
(declare-fun |v_#Ultimate.meminit_#ptr.offsetInParam_4_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#productInParam_4_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#sizeOfFieldsInParam_4_fresh_1| () Int)
(declare-fun |v_#Ultimate.meminit_#amountOfFieldsInParam_4_fresh_1| () Int)
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_0| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_233_fresh_1 () (Array Int Int))
(assert (! (= |#memory_int#1_-1| |old(#memory_int#1)_-1|) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (store |#memory_int#1_-1| |#Ultimate.meminit_#ptr.base_-1| v_ArrVal_233_fresh_1) |#memory_int#1_0|) (= ((as const (Array Int Int)) 0) v_ArrVal_233_fresh_1)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= |v_#Ultimate.meminit_#sizeOfFieldsInParam_4_fresh_1| 4) (= |main_#t~malloc16.offset_-2| |v_#Ultimate.meminit_#ptr.offsetInParam_4_fresh_1|) (= |v_#Ultimate.meminit_#productInParam_4_fresh_1| (* main_~n~0_-2 4)) (= main_~n~0_-2 |v_#Ultimate.meminit_#amountOfFieldsInParam_4_fresh_1|) (= |#Ultimate.meminit_#ptr.base_-1| |main_#t~malloc16.base_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(#memory_int#1)_-1| |#memory_int#1_-2|) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~a~0.base_-2 () Int)
(declare-fun main_~a~0.offset_-2 () Int)
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |upsweep_#in~n_-1| () Int)
(declare-fun main_~a~0.base_-1 () Int)
(declare-fun |upsweep_#in~a.offset_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun main_~a~0.offset_-1 () Int)
(declare-fun |upsweep_#in~a.base_-1| () Int)
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun upsweep_~space~0_0 () Int)
(declare-fun upsweep_~n_0 () Int)
(declare-fun upsweep_~a.base_0 () Int)
(declare-fun upsweep_~a.offset_0 () Int)
(declare-fun upsweep_~left~0_1 () Int)
(declare-fun upsweep_~left~0_2 () Int)
(declare-fun |upsweep_#t~mem6_2| () Int)
(declare-fun |upsweep_#t~mem5_2| () Int)
(declare-fun upsweep_~right~0_2 () Int)
(declare-fun |#memory_int#1_2| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_235_fresh_1 () Int)
(declare-fun v_ArrVal_234_fresh_1 () (Array Int Int))
(declare-fun upsweep_~left~0_3 () Int)
(declare-fun |upsweep_#t~mem6_3| () Int)
(declare-fun |upsweep_#t~mem5_3| () Int)
(declare-fun upsweep_~right~0_3 () Int)
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_236_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_237_fresh_1 () Int)
(declare-fun upsweep_~left~0_4 () Int)
(declare-fun upsweep_~left~0_5 () Int)
(declare-fun upsweep_~space~0_5 () Int)
(declare-fun upsweep_~n_6 () Int)
(declare-fun upsweep_~space~0_7 () Int)
(declare-fun |upsweep_#res_7| () Int)
(declare-fun |main_#t~ret19_8| () Int)
(declare-fun |upsweep_#res_8| () Int)
(assert (! (= |#memory_int#1_-1| |old(#memory_int#1)_-1|) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= upsweep_~a.offset_0 |upsweep_#in~a.offset_-1|) (= upsweep_~space~0_0 1) (= upsweep_~n_0 |upsweep_#in~n_-1|) (= |upsweep_#in~a.base_-1| upsweep_~a.base_0)) :named ssa_0))
(assert (! (and (= upsweep_~space~0_0 (+ upsweep_~left~0_1 1)) (< upsweep_~space~0_0 upsweep_~n_0)) :named ssa_1))
(assert (! (and (< upsweep_~left~0_1 upsweep_~n_0) (= v_ArrVal_235_fresh_1 (+ (select (select |#memory_int#1_-1| upsweep_~a.base_0) (+ (* upsweep_~left~0_1 4) upsweep_~a.offset_0)) (select (select |#memory_int#1_-1| upsweep_~a.base_0) (+ (* upsweep_~left~0_1 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4))))) (= (store (select |#memory_int#1_-1| upsweep_~a.base_0) (+ (* upsweep_~left~0_1 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4)) (+ (select (select |#memory_int#1_-1| upsweep_~a.base_0) (+ (* upsweep_~left~0_1 4) upsweep_~a.offset_0)) (select (select |#memory_int#1_-1| upsweep_~a.base_0) (+ (* upsweep_~left~0_1 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4))))) v_ArrVal_234_fresh_1) (= (store |#memory_int#1_-1| upsweep_~a.base_0 v_ArrVal_234_fresh_1) |#memory_int#1_2|) (= (+ (* 2 upsweep_~space~0_0) upsweep_~left~0_1) upsweep_~left~0_2)) :named ssa_2))
(assert (! (and (= (store (select |#memory_int#1_2| upsweep_~a.base_0) (+ (* upsweep_~left~0_2 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4)) (+ (select (select |#memory_int#1_2| upsweep_~a.base_0) (+ (* upsweep_~left~0_2 4) upsweep_~a.offset_0)) (select (select |#memory_int#1_2| upsweep_~a.base_0) (+ (* upsweep_~left~0_2 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4))))) v_ArrVal_236_fresh_1) (= v_ArrVal_237_fresh_1 (+ (select (select |#memory_int#1_2| upsweep_~a.base_0) (+ (* upsweep_~left~0_2 4) upsweep_~a.offset_0)) (select (select |#memory_int#1_2| upsweep_~a.base_0) (+ (* upsweep_~left~0_2 4) upsweep_~a.offset_0 (* upsweep_~space~0_0 4))))) (< upsweep_~left~0_2 upsweep_~n_0) (= (+ (* 2 upsweep_~space~0_0) upsweep_~left~0_2) upsweep_~left~0_3) (= (store |#memory_int#1_2| upsweep_~a.base_0 v_ArrVal_236_fresh_1) |#memory_int#1_3|)) :named ssa_3))
(assert (! (<= upsweep_~n_0 upsweep_~left~0_3) :named ssa_4))
(assert (! (= (* 2 upsweep_~space~0_0) upsweep_~space~0_5) :named ssa_5))
(assert (! (<= upsweep_~n_0 upsweep_~space~0_5) :named ssa_6))
(assert (! (= |upsweep_#res_7| upsweep_~space~0_5) :named ssa_7))
(assert (! (= |main_#t~ret19_8| |upsweep_#res_7|) :named ssa_8_return))
(assert (! (<= 3 main_~n~0_-2) :named ssa_-2_PendingContext))
(assert (! (and (= main_~a~0.base_-2 |upsweep_#in~a.base_-1|) (= |upsweep_#in~a.offset_-1| main_~a~0.offset_-2) (= main_~n~0_-2 |upsweep_#in~n_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(#memory_int#1)_-1| |#memory_int#1_-2|) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 (and ssa_8_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~a~0.base_-2 () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~a~0.offset_-2 () Int)
(declare-fun main_~space~1_-2 () Int)
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |downsweep_#in~a.offset_-1| () Int)
(declare-fun |downsweep_#in~space_-1| () Int)
(declare-fun main_~a~0.base_-1 () Int)
(declare-fun |downsweep_#in~n_-1| () Int)
(declare-fun |downsweep_#in~a.base_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun main_~a~0.offset_-1 () Int)
(declare-fun main_~space~1_-1 () Int)
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun downsweep_~n_0 () Int)
(declare-fun downsweep_~space_0 () Int)
(declare-fun downsweep_~a.offset_0 () Int)
(declare-fun downsweep_~a.base_0 () Int)
(declare-fun |#memory_int#1_0| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_239_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_238_fresh_1 () Int)
(declare-fun downsweep_~right~1_1 () Int)
(declare-fun downsweep_~right~1_2 () Int)
(declare-fun |downsweep_#t~mem8_2| () Int)
(declare-fun |downsweep_#t~mem9_2| () Int)
(declare-fun |#memory_int#1_2| () (Array Int (Array Int Int)))
(declare-fun downsweep_~temp~0_2 () Int)
(declare-fun downsweep_~left~1_2 () Int)
(declare-fun |downsweep_#t~mem7_2| () Int)
(declare-fun v_ArrVal_242_fresh_1 () Int)
(declare-fun v_ArrVal_241_fresh_1 () Int)
(declare-fun v_ArrVal_240_fresh_1 () (Array Int Int))
(declare-fun downsweep_~right~1_3 () Int)
(declare-fun downsweep_~right~1_4 () Int)
(declare-fun downsweep_~space_4 () Int)
(declare-fun downsweep_~space_5 () Int)
(assert (! (= |#memory_int#1_-1| |old(#memory_int#1)_-1|) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= downsweep_~space_0 (ite (and (not (= (mod |downsweep_#in~space_-1| 2) 0)) (< |downsweep_#in~space_-1| 0)) (+ (div |downsweep_#in~space_-1| 2) 1) (div |downsweep_#in~space_-1| 2))) (= (store |#memory_int#1_-1| downsweep_~a.base_0 v_ArrVal_239_fresh_1) |#memory_int#1_0|) (= downsweep_~a.base_0 |downsweep_#in~a.base_-1|) (= downsweep_~a.offset_0 |downsweep_#in~a.offset_-1|) (= v_ArrVal_238_fresh_1 0) (= v_ArrVal_239_fresh_1 (store (select |#memory_int#1_-1| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (- 4) (* downsweep_~n_0 4)) v_ArrVal_238_fresh_1)) (= downsweep_~n_0 |downsweep_#in~n_-1|)) :named ssa_0))
(assert (! (and (< 0 downsweep_~space_0) (= (+ downsweep_~right~1_1 1) (* 2 downsweep_~space_0))) :named ssa_1))
(assert (! (and (= |#memory_int#1_2| (store |#memory_int#1_0| downsweep_~a.base_0 v_ArrVal_240_fresh_1)) (< downsweep_~right~1_1 downsweep_~n_0) (= v_ArrVal_242_fresh_1 (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4)))) (= downsweep_~right~1_2 (+ (* 2 downsweep_~space_0) downsweep_~right~1_1)) (= v_ArrVal_241_fresh_1 (+ (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4))) (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4) (* downsweep_~space_0 (- 4)))))) (= v_ArrVal_240_fresh_1 (store (store (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4)) (+ (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4))) (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4) (* downsweep_~space_0 (- 4)))))) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4) (* downsweep_~space_0 (- 4))) (select (select |#memory_int#1_0| downsweep_~a.base_0) (+ downsweep_~a.offset_0 (* downsweep_~right~1_1 4)))))) :named ssa_2))
(assert (! (<= downsweep_~n_0 downsweep_~right~1_2) :named ssa_3))
(assert (! (= downsweep_~space_4 (ite (and (< downsweep_~space_0 0) (not (= (mod downsweep_~space_0 2) 0))) (+ (div downsweep_~space_0 2) 1) (div downsweep_~space_0 2))) :named ssa_4))
(assert (! (<= downsweep_~space_4 0) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! true :named ssa_7_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |downsweep_#in~a.base_-1| main_~a~0.base_-2) (= main_~n~0_-2 |downsweep_#in~n_-1|) (= |downsweep_#in~space_-1| main_~space~1_-2) (= main_~a~0.offset_-2 |downsweep_#in~a.offset_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(#memory_int#1)_-1| |#memory_int#1_-2|) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 (and ssa_7_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
