(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:09:51+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id gsv2008.c.i.p+cfa-reducer.c_AllErrorsAtOnce_Iteration4)
(declare-fun |c_old(~__return_main~0)| () Int)
(declare-fun |c_old(~__return_main~0)_primed| () Int)
(declare-fun c_~__return_main~0 () Int)
(declare-fun c_~__return_main~0_primed () Int)
(declare-fun |c_old(~__return_144~0)| () Int)
(declare-fun |c_old(~__return_144~0)_primed| () Int)
(declare-fun c_~__return_144~0 () Int)
(declare-fun c_~__return_144~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun c_main_~main____CPAchecker_TMP_0~0 () Int)
(declare-fun c_main_~main____CPAchecker_TMP_0~0_primed () Int)
(declare-fun c_main_~__tmp_1~0 () Int)
(declare-fun c_main_~__tmp_1~0_primed () Int)
(declare-fun c_main_~__VERIFIER_assert__cond~0 () Int)
(declare-fun c_main_~__VERIFIER_assert__cond~0_primed () Int)
(declare-fun c_main_~main__x~0 () Int)
(declare-fun c_main_~main__x~0_primed () Int)
(declare-fun c_main_~main__y~0 () Int)
(declare-fun c_main_~main__y~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret5| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret5_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~main____CPAchecker_TMP_0~0_2 () Int)
(declare-fun c_aux_v_main_~__tmp_1~0_3 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret5_3| () Int)
(declare-fun c_aux_v_main_~__tmp_1~0_4 () Int)
(declare-fun c_aux_v_main_~main____CPAchecker_TMP_0~0_3 () Int)
(declare-fun c_aux_v_main_~__tmp_1~0_5 () Int)
(declare-fun c_aux_v_main_~main____CPAchecker_TMP_0~0_4 () Int)
(declare-fun c_aux_v_main_~main____CPAchecker_TMP_0~0_5 () Int)
(declare-fun c_aux_v_main_~__tmp_1~0_6 () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~__return_main~0_-1 () Int)
(declare-fun ~__return_144~0_-1 () Int)
(declare-fun |old(~__return_main~0)_-1| () Int)
(declare-fun |old(~__return_144~0)_-1| () Int)
(declare-fun |old(~__return_main~0)_0| () Int)
(declare-fun |old(~__return_144~0)_0| () Int)
(declare-fun ~__return_main~0_0 () Int)
(declare-fun ~__return_144~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~__return_main~0_1 () Int)
(declare-fun ~__return_144~0_1 () Int)
(declare-fun |old(~__return_144~0)_3| () Int)
(declare-fun ~__return_144~0_3 () Int)
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun main_~main__x~0_4 () Int)
(declare-fun main_~main__y~0_4 () Int)
(declare-fun main_~main__x~0_7 () Int)
(declare-fun main_~main__y~0_7 () Int)
(declare-fun v_main_~main____CPAchecker_TMP_0~0_6_fresh_1 () Int)
(declare-fun main_~main__x~0_8 () Int)
(declare-fun main_~main__y~0_8 () Int)
(declare-fun v_main_~main____CPAchecker_TMP_0~0_7_fresh_1 () Int)
(declare-fun main_~main__x~0_9 () Int)
(declare-fun main_~main__y~0_9 () Int)
(declare-fun v_main_~main____CPAchecker_TMP_0~0_8_fresh_1 () Int)
(declare-fun main_~__VERIFIER_assert__cond~0_10 () Int)
(declare-fun main_~main__x~0_10 () Int)
(declare-fun main_~main__y~0_10 () Int)
(declare-fun v_main_~__tmp_1~0_7_fresh_1 () Int)
(declare-fun main_~__VERIFIER_assert__cond~0_11 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~__return_main~0_0 |old(~__return_main~0)_0|) (= |old(~__return_144~0)_0| ~__return_144~0_0)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= ~__return_main~0_-1 |old(~__return_main~0)_0|) (= |old(~__return_144~0)_0| ~__return_144~0_-1)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#length_-1| 2) 28) (< 0 |#StackHeapBarrier_-1|) (= 0 ~__return_main~0_1) (= 12 (select |#length_-1| 3)) (= ~__return_144~0_1 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (= |old(~__return_144~0)_3| ~__return_144~0_3) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (= |old(~__return_144~0)_3| ~__return_144~0_1) :named ssa_3_OldVarAssigCall))
(assert (! (and (= (+ main_~main__x~0_4 50) 0) (<= 0 (+ 2147483648 main_~main__y~0_4)) (<= main_~main__y~0_4 2147483647)) :named ssa_4))
(assert (! (< 0 (+ 1000 main_~main__y~0_4)) :named ssa_5))
(assert (! (< main_~main__y~0_4 1000000) :named ssa_6))
(assert (! (and (= (+ main_~main__y~0_4 1) main_~main__y~0_7) (= v_main_~main____CPAchecker_TMP_0~0_6_fresh_1 main_~main__y~0_4) (< main_~main__x~0_4 0) (= (+ main_~main__x~0_4 main_~main__y~0_4) main_~main__x~0_7)) :named ssa_7))
(assert (! (and (= (+ main_~main__y~0_7 1) main_~main__y~0_8) (= v_main_~main____CPAchecker_TMP_0~0_7_fresh_1 main_~main__y~0_7) (< main_~main__x~0_7 0) (= (+ main_~main__x~0_7 main_~main__y~0_7) main_~main__x~0_8)) :named ssa_8))
(assert (! (and (= (+ main_~main__y~0_8 1) main_~main__y~0_9) (< main_~main__x~0_8 0) (= (+ main_~main__x~0_8 main_~main__y~0_8) main_~main__x~0_9) (= v_main_~main____CPAchecker_TMP_0~0_8_fresh_1 main_~main__y~0_8)) :named ssa_9))
(assert (! (and (<= 0 main_~main__x~0_9) (= v_main_~__tmp_1~0_7_fresh_1 main_~__VERIFIER_assert__cond~0_10) (= (ite (< 0 main_~main__y~0_9) 1 0) v_main_~__tmp_1~0_7_fresh_1)) :named ssa_10))
(assert (! (= main_~__VERIFIER_assert__cond~0_10 0) :named ssa_11))
(assert (! true :named ssa_12))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 (and ssa_12 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~__return_main~0_-2 () Int)
(declare-fun ~__return_144~0_-2 () Int)
(declare-fun |old(~__return_main~0)_-2| () Int)
(declare-fun |old(~__return_144~0)_-2| () Int)
(declare-fun |old(~__return_main~0)_-1| () Int)
(declare-fun |old(~__return_144~0)_-1| () Int)
(declare-fun ~__return_main~0_-1 () Int)
(declare-fun ~__return_144~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~__return_main~0_0 () Int)
(declare-fun ~__return_144~0_0 () Int)
(assert (! (and (= ~__return_main~0_-1 |old(~__return_main~0)_-1|) (= |old(~__return_144~0)_-1| ~__return_144~0_-1)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#length_-1| 2) 28) (< 0 |#StackHeapBarrier_-1|) (= 0 ~__return_main~0_0) (= 12 (select |#length_-1| 3)) (= ~__return_144~0_0 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~__return_main~0_-2 |old(~__return_main~0)_-1|) (= |old(~__return_144~0)_-1| ~__return_144~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
