(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:11:43+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id string-1.i_AllErrorsAtOnce_Iteration4)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.base| () Int)
(declare-fun |c_reach_error_#t~nondet0.base_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet1| () Int)
(declare-fun |c_main_#t~nondet1_primed| () Int)
(declare-fun |c_main_#t~post2| () Int)
(declare-fun |c_main_#t~post2_primed| () Int)
(declare-fun |c_main_#t~mem3| () Int)
(declare-fun |c_main_#t~mem3_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~post5| () Int)
(declare-fun |c_main_#t~post5_primed| () Int)
(declare-fun |c_main_#t~mem6| () Int)
(declare-fun |c_main_#t~mem6_primed| () Int)
(declare-fun |c_main_#t~mem7| () Int)
(declare-fun |c_main_#t~mem7_primed| () Int)
(declare-fun |c_main_#t~post8| () Int)
(declare-fun |c_main_#t~post8_primed| () Int)
(declare-fun |c_main_#t~mem9| () Int)
(declare-fun |c_main_#t~mem9_primed| () Int)
(declare-fun |c_main_#t~post10| () Int)
(declare-fun |c_main_#t~post10_primed| () Int)
(declare-fun |c_main_#t~mem11| () Int)
(declare-fun |c_main_#t~mem11_primed| () Int)
(declare-fun |c_main_#t~mem12| () Int)
(declare-fun |c_main_#t~mem12_primed| () Int)
(declare-fun |c_main_#t~post13| () Int)
(declare-fun |c_main_#t~post13_primed| () Int)
(declare-fun |c_main_#t~post14| () Int)
(declare-fun |c_main_#t~post14_primed| () Int)
(declare-fun |c_main_~#string_A~0.base| () Int)
(declare-fun |c_main_~#string_A~0.base_primed| () Int)
(declare-fun |c_main_~#string_A~0.offset| () Int)
(declare-fun |c_main_~#string_A~0.offset_primed| () Int)
(declare-fun |c_main_~#string_B~0.base| () Int)
(declare-fun |c_main_~#string_B~0.base_primed| () Int)
(declare-fun |c_main_~#string_B~0.offset| () Int)
(declare-fun |c_main_~#string_B~0.offset_primed| () Int)
(declare-fun c_main_~i~0 () Int)
(declare-fun c_main_~i~0_primed () Int)
(declare-fun c_main_~j~0 () Int)
(declare-fun c_main_~j~0_primed () Int)
(declare-fun c_main_~nc_A~0 () Int)
(declare-fun c_main_~nc_A~0_primed () Int)
(declare-fun c_main_~nc_B~0 () Int)
(declare-fun c_main_~nc_B~0_primed () Int)
(declare-fun c_main_~found~0 () Int)
(declare-fun c_main_~found~0_primed () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_#in~__assertion.base| () Int)
(declare-fun |c___assert_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_#in~__assertion.offset| () Int)
(declare-fun |c___assert_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_#in~__file.base| () Int)
(declare-fun |c___assert_#in~__file.base_primed| () Int)
(declare-fun |c___assert_#in~__file.offset| () Int)
(declare-fun |c___assert_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_#in~__line| () Int)
(declare-fun |c___assert_#in~__line_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.base| () Int)
(declare-fun |c___assert_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__line| () Int)
(declare-fun |c___assert_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.base| () Int)
(declare-fun |c___assert_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_fail_#in~__function.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__line| () Int)
(declare-fun |c___assert_perror_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~post10_2| () Int)
(declare-fun c_aux_v_main_~found~0_5 () Int)
(declare-fun |c_aux_v_main_#t~nondet1_2| () Int)
(declare-fun |c_aux_v_main_#t~nondet4_2| () Int)
(declare-fun |c_aux_v_main_#t~post8_2| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret15_3| () Int)
(declare-fun |c_aux_v_main_#t~nondet4_3| () Int)
(declare-fun |c_aux_v_main_#t~nondet4_4| () Int)
(declare-fun |c_aux_v_main_#t~nondet1_3| () Int)
(declare-fun |c_aux_v_main_#t~nondet1_4| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun c_aux_v_ArrVal_3 () Int)
(declare-fun c_aux_v_main_~found~0_6 () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun c_aux_v_ArrVal_8 () Int)
(declare-fun c_aux_v_ArrVal_6 () Int)
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun c_aux_v_main_~found~0_7 () Int)
(declare-fun c_aux_v_ArrVal_10 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_9 () Int)
(declare-fun |c_aux_v_main_#t~nondet1_5| () Int)
(declare-fun c_aux_v_ArrVal_11 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet4_5| () Int)
(declare-fun c_aux_v_ArrVal_12 () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_14 () Int)
(declare-fun c_aux_v_ArrVal_15 () Int)
(declare-fun c_aux_v_ArrVal_16 () Int)
(declare-fun c_aux_v_main_~found~0_8 () Int)
(declare-fun c_aux_v_ArrVal_18 () Int)
(declare-fun |c_aux_v_main_#t~nondet1_6| () Int)
(declare-fun c_aux_v_ArrVal_17 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_19 () Int)
(declare-fun c_aux_v_ArrVal_20 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet1_7| () Int)
(declare-fun c_aux_v_ArrVal_21 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_22 () Int)
(declare-fun |c_aux_v_main_#t~nondet4_6| () Int)
(declare-fun |c_aux_v_main_#t~nondet4_7| () Int)
(declare-fun c_aux_v_ArrVal_24 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_23 () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#2)_3| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#2_3| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_~#string_B~0.base_4| () Int)
(declare-fun |main_~#string_A~0.offset_4| () Int)
(declare-fun |main_~#string_B~0.offset_4| () Int)
(declare-fun |main_~#string_A~0.base_4| () Int)
(declare-fun main_~j~0_4 () Int)
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun main_~i~0_4 () Int)
(declare-fun |#length_4| () (Array Int Int))
(declare-fun main_~nc_A~0_4 () Int)
(declare-fun main_~nc_B~0_4 () Int)
(declare-fun v_ArrVal_28_fresh_1 () Int)
(declare-fun v_ArrVal_25_fresh_1 () Int)
(declare-fun v_ArrVal_26_fresh_1 () Int)
(declare-fun v_ArrVal_27_fresh_1 () Int)
(declare-fun v_main_~found~0_9_fresh_1 () Int)
(declare-fun main_~i~0_5 () Int)
(declare-fun |main_#t~post2_5| () Int)
(declare-fun |#memory_int#2_5| () (Array Int (Array Int Int)))
(declare-fun |v_main_#t~nondet1_8_fresh_1| () Int)
(declare-fun v_ArrVal_29_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_30_fresh_1 () Int)
(declare-fun main_~i~0_6 () Int)
(declare-fun |main_#t~post2_6| () Int)
(declare-fun |#memory_int#2_6| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_32_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_31_fresh_1 () Int)
(declare-fun |v_main_#t~nondet1_9_fresh_1| () Int)
(declare-fun main_~i~0_7 () Int)
(declare-fun |main_#t~post2_7| () Int)
(declare-fun |#memory_int#2_7| () (Array Int (Array Int Int)))
(declare-fun |v_main_#t~nondet1_10_fresh_1| () Int)
(declare-fun v_ArrVal_34_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_33_fresh_1 () Int)
(declare-fun main_~i~0_8 () Int)
(declare-fun |main_#t~mem3_9| () Int)
(declare-fun |main_#t~mem3_10| () Int)
(declare-fun main_~i~0_10 () Int)
(declare-fun main_~i~0_11 () Int)
(declare-fun |main_#t~post5_11| () Int)
(declare-fun |#memory_int#1_11| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_35_fresh_1 () Int)
(declare-fun |v_main_#t~nondet4_8_fresh_1| () Int)
(declare-fun v_ArrVal_36_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_12 () Int)
(declare-fun |main_#t~post5_12| () Int)
(declare-fun |#memory_int#1_12| () (Array Int (Array Int Int)))
(declare-fun |v_main_#t~nondet4_9_fresh_1| () Int)
(declare-fun v_ArrVal_37_fresh_1 () Int)
(declare-fun v_ArrVal_38_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_13 () Int)
(declare-fun |main_#t~post5_13| () Int)
(declare-fun |#memory_int#1_13| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_39_fresh_1 () Int)
(declare-fun v_ArrVal_40_fresh_1 () (Array Int Int))
(declare-fun |v_main_#t~nondet4_10_fresh_1| () Int)
(declare-fun main_~i~0_14 () Int)
(declare-fun |main_#t~mem6_15| () Int)
(declare-fun |main_#t~mem6_16| () Int)
(declare-fun main_~nc_A~0_16 () Int)
(declare-fun |main_#t~mem7_17| () Int)
(declare-fun |main_#t~mem7_18| () Int)
(declare-fun main_~nc_B~0_19 () Int)
(declare-fun |main_#t~mem9_20| () Int)
(declare-fun |main_#t~mem9_21| () Int)
(declare-fun main_~j~0_22 () Int)
(declare-fun main_~i~0_22 () Int)
(declare-fun main_~i~0_23 () Int)
(declare-fun main_~nc_A~0_23 () Int)
(declare-fun main_~found~0_24 () Int)
(declare-fun main_~j~0_24 () Int)
(declare-fun main_~nc_B~0_24 () Int)
(declare-fun main_~found~0_25 () Int)
(declare-fun |__VERIFIER_assert_#in~cond_25| () Int)
(declare-fun __VERIFIER_assert_~cond_26 () Int)
(declare-fun __VERIFIER_assert_~cond_27 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#valid_-1| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-1| 2) 11) (= (select |#valid_-1| 0) 0) (= 2 (select |#length_-1| 1)) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 0) 48)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |old(#memory_int#2)_3| |#memory_int#2_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#2)_3| |#memory_int#2_-1|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (< |#StackHeapBarrier_-1| |main_~#string_A~0.base_4|) (= 5 v_ArrVal_26_fresh_1) (= v_main_~found~0_9_fresh_1 0) (= main_~i~0_4 0) (= |#valid_4| (store (store |#valid_3| |main_~#string_A~0.base_4| v_ArrVal_28_fresh_1) |main_~#string_B~0.base_4| v_ArrVal_25_fresh_1)) (= (select |#valid_3| |main_~#string_A~0.base_4|) 0) (= |main_~#string_A~0.offset_4| 0) (not (= |main_~#string_B~0.base_4| 0)) (= v_ArrVal_28_fresh_1 1) (= |main_~#string_B~0.offset_4| 0) (= (select (store |#valid_3| |main_~#string_A~0.base_4| v_ArrVal_28_fresh_1) |main_~#string_B~0.base_4|) 0) (= v_ArrVal_25_fresh_1 1) (not (= |main_~#string_A~0.base_4| 0)) (= 5 v_ArrVal_27_fresh_1) (< |#StackHeapBarrier_-1| |main_~#string_B~0.base_4|) (= (store (store |#length_3| |main_~#string_A~0.base_4| v_ArrVal_27_fresh_1) |main_~#string_B~0.base_4| v_ArrVal_26_fresh_1) |#length_4|)) :named ssa_4))
(assert (! (and (= (store |#memory_int#2_3| |main_~#string_A~0.base_4| v_ArrVal_29_fresh_1) |#memory_int#2_5|) (= (store (select |#memory_int#2_3| |main_~#string_A~0.base_4|) (+ main_~i~0_4 |main_~#string_A~0.offset_4|) |v_main_#t~nondet1_8_fresh_1|) v_ArrVal_29_fresh_1) (= |v_main_#t~nondet1_8_fresh_1| v_ArrVal_30_fresh_1) (= main_~i~0_5 (+ main_~i~0_4 1)) (<= 0 (+ |v_main_#t~nondet1_8_fresh_1| 128)) (<= |v_main_#t~nondet1_8_fresh_1| 127) (< main_~i~0_4 5)) :named ssa_5))
(assert (! (and (= |v_main_#t~nondet1_9_fresh_1| v_ArrVal_31_fresh_1) (= main_~i~0_6 (+ main_~i~0_5 1)) (<= |v_main_#t~nondet1_9_fresh_1| 127) (<= 0 (+ |v_main_#t~nondet1_9_fresh_1| 128)) (= (store |#memory_int#2_5| |main_~#string_A~0.base_4| v_ArrVal_32_fresh_1) |#memory_int#2_6|) (< main_~i~0_5 5) (= (store (select |#memory_int#2_5| |main_~#string_A~0.base_4|) (+ main_~i~0_5 |main_~#string_A~0.offset_4|) v_ArrVal_31_fresh_1) v_ArrVal_32_fresh_1)) :named ssa_6))
(assert (! (and (<= 0 (+ |v_main_#t~nondet1_10_fresh_1| 128)) (= (store |#memory_int#2_6| |main_~#string_A~0.base_4| v_ArrVal_34_fresh_1) |#memory_int#2_7|) (= |v_main_#t~nondet1_10_fresh_1| v_ArrVal_33_fresh_1) (= main_~i~0_7 (+ main_~i~0_6 1)) (= (store (select |#memory_int#2_6| |main_~#string_A~0.base_4|) (+ main_~i~0_6 |main_~#string_A~0.offset_4|) v_ArrVal_33_fresh_1) v_ArrVal_34_fresh_1) (<= |v_main_#t~nondet1_10_fresh_1| 127) (< main_~i~0_6 5)) :named ssa_7))
(assert (! (<= 5 main_~i~0_7) :named ssa_8))
(assert (! (= (select (select |#memory_int#2_7| |main_~#string_A~0.base_4|) (+ |main_~#string_A~0.offset_4| 4)) |main_#t~mem3_9|) :named ssa_9))
(assert (! (and (= main_~i~0_10 0) (= |main_#t~mem3_9| 0)) :named ssa_10))
(assert (! (and (= (store |#memory_int#1_3| |main_~#string_B~0.base_4| v_ArrVal_36_fresh_1) |#memory_int#1_11|) (= (store (select |#memory_int#1_3| |main_~#string_B~0.base_4|) (+ main_~i~0_10 |main_~#string_B~0.offset_4|) v_ArrVal_35_fresh_1) v_ArrVal_36_fresh_1) (= main_~i~0_11 (+ main_~i~0_10 1)) (= |v_main_#t~nondet4_8_fresh_1| v_ArrVal_35_fresh_1) (<= 0 (+ |v_main_#t~nondet4_8_fresh_1| 128)) (< main_~i~0_10 5) (<= |v_main_#t~nondet4_8_fresh_1| 127)) :named ssa_11))
(assert (! (and (<= |v_main_#t~nondet4_9_fresh_1| 127) (= (store (select |#memory_int#1_11| |main_~#string_B~0.base_4|) (+ main_~i~0_11 |main_~#string_B~0.offset_4|) v_ArrVal_37_fresh_1) v_ArrVal_38_fresh_1) (= |v_main_#t~nondet4_9_fresh_1| v_ArrVal_37_fresh_1) (= main_~i~0_12 (+ main_~i~0_11 1)) (= (store |#memory_int#1_11| |main_~#string_B~0.base_4| v_ArrVal_38_fresh_1) |#memory_int#1_12|) (< main_~i~0_11 5) (<= 0 (+ |v_main_#t~nondet4_9_fresh_1| 128))) :named ssa_12))
(assert (! (and (= main_~i~0_13 (+ main_~i~0_12 1)) (= |#memory_int#1_13| (store |#memory_int#1_12| |main_~#string_B~0.base_4| v_ArrVal_40_fresh_1)) (= v_ArrVal_40_fresh_1 (store (select |#memory_int#1_12| |main_~#string_B~0.base_4|) (+ main_~i~0_12 |main_~#string_B~0.offset_4|) v_ArrVal_39_fresh_1)) (< main_~i~0_12 5) (= |v_main_#t~nondet4_10_fresh_1| v_ArrVal_39_fresh_1) (<= 0 (+ |v_main_#t~nondet4_10_fresh_1| 128)) (<= |v_main_#t~nondet4_10_fresh_1| 127)) :named ssa_13))
(assert (! (<= 5 main_~i~0_13) :named ssa_14))
(assert (! (= |main_#t~mem6_15| (select (select |#memory_int#1_13| |main_~#string_B~0.base_4|) (+ |main_~#string_B~0.offset_4| 4))) :named ssa_15))
(assert (! (and (= main_~nc_A~0_16 0) (= |main_#t~mem6_15| 0)) :named ssa_16))
(assert (! (= (select (select |#memory_int#2_7| |main_~#string_A~0.base_4|) (+ |main_~#string_A~0.offset_4| main_~nc_A~0_16)) |main_#t~mem7_17|) :named ssa_17))
(assert (! (= |main_#t~mem7_17| 0) :named ssa_18))
(assert (! (= main_~nc_B~0_19 0) :named ssa_19))
(assert (! (= |main_#t~mem9_20| (select (select |#memory_int#1_13| |main_~#string_B~0.base_4|) (+ |main_~#string_B~0.offset_4| main_~nc_B~0_19))) :named ssa_20))
(assert (! (= |main_#t~mem9_20| 0) :named ssa_21))
(assert (! (and (= main_~j~0_22 0) (<= main_~nc_A~0_16 main_~nc_B~0_19) (= main_~i~0_22 main_~j~0_22)) :named ssa_22))
(assert (! (or (<= main_~nc_B~0_19 main_~j~0_22) (<= main_~nc_A~0_16 main_~i~0_22)) :named ssa_23))
(assert (! (= main_~found~0_24 (ite (< main_~nc_B~0_19 (+ main_~j~0_22 1)) 1 0)) :named ssa_24))
(assert (! true :named ssa_25_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_25| (ite (or (= main_~found~0_24 0) (= main_~found~0_24 1)) 1 0)) :named ssa_25_LocVarAssigCall))
(assert (! true :named ssa_25_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_26 |__VERIFIER_assert_#in~cond_25|) :named ssa_26))
(assert (! (= __VERIFIER_assert_~cond_26 0) :named ssa_27))
(assert (! true :named ssa_28))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 ssa_19 ssa_20 ssa_21 ssa_22 ssa_23 ssa_24 (and ssa_25_GlobVarAssigCall ssa_25_OldVarAssigCall ssa_25_LocVarAssigCall) ssa_26 ssa_27 (and ssa_28 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#valid_-2| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-2| 2) 11) (= (select |#valid_-2| 0) 0) (= 2 (select |#length_-2| 1)) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select |#valid_-2| 1) 1) (= (select (select |#memory_int#0_-2| 1) 0) 48)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
