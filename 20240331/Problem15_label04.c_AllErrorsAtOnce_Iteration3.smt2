(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:56:41+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id Problem15_label04.c_AllErrorsAtOnce_Iteration3)
(declare-fun |c_old(~inputD~0)| () Int)
(declare-fun |c_old(~inputD~0)_primed| () Int)
(declare-fun c_~inputD~0 () Int)
(declare-fun c_~inputD~0_primed () Int)
(declare-fun |c_old(~inputB~0)| () Int)
(declare-fun |c_old(~inputB~0)_primed| () Int)
(declare-fun c_~inputB~0 () Int)
(declare-fun c_~inputB~0_primed () Int)
(declare-fun |c_old(~inputE~0)| () Int)
(declare-fun |c_old(~inputE~0)_primed| () Int)
(declare-fun c_~inputE~0 () Int)
(declare-fun c_~inputE~0_primed () Int)
(declare-fun |c_old(~inputA~0)| () Int)
(declare-fun |c_old(~inputA~0)_primed| () Int)
(declare-fun c_~inputA~0 () Int)
(declare-fun c_~inputA~0_primed () Int)
(declare-fun |c_old(~inputF~0)| () Int)
(declare-fun |c_old(~inputF~0)_primed| () Int)
(declare-fun c_~inputF~0 () Int)
(declare-fun c_~inputF~0_primed () Int)
(declare-fun |c_old(~inputC~0)| () Int)
(declare-fun |c_old(~inputC~0)_primed| () Int)
(declare-fun c_~inputC~0 () Int)
(declare-fun c_~inputC~0_primed () Int)
(declare-fun |c_old(~a4~0)| () Int)
(declare-fun |c_old(~a4~0)_primed| () Int)
(declare-fun c_~a4~0 () Int)
(declare-fun c_~a4~0_primed () Int)
(declare-fun |c_old(~a29~0)| () Int)
(declare-fun |c_old(~a29~0)_primed| () Int)
(declare-fun c_~a29~0 () Int)
(declare-fun c_~a29~0_primed () Int)
(declare-fun |c_old(~a2~0)| () Int)
(declare-fun |c_old(~a2~0)_primed| () Int)
(declare-fun c_~a2~0 () Int)
(declare-fun c_~a2~0_primed () Int)
(declare-fun |c_old(~a0~0)| () Int)
(declare-fun |c_old(~a0~0)_primed| () Int)
(declare-fun c_~a0~0 () Int)
(declare-fun c_~a0~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet8| () Int)
(declare-fun |c_main_#t~nondet8_primed| () Int)
(declare-fun |c_main_#t~ret9| () Int)
(declare-fun |c_main_#t~ret9_primed| () Int)
(declare-fun c_main_~input~0 () Int)
(declare-fun c_main_~input~0_primed () Int)
(declare-fun c_main_~output~0 () Int)
(declare-fun c_main_~output~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_exit_#in~6| () Int)
(declare-fun |c_exit_#in~6_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_calculate_output2_#in~input| () Int)
(declare-fun |c_calculate_output2_#in~input_primed| () Int)
(declare-fun |c_calculate_output2_#res| () Int)
(declare-fun |c_calculate_output2_#res_primed| () Int)
(declare-fun c_calculate_output2_~input () Int)
(declare-fun c_calculate_output2_~input_primed () Int)
(declare-fun |c_calculate_output_#in~input| () Int)
(declare-fun |c_calculate_output_#in~input_primed| () Int)
(declare-fun |c_calculate_output_#res| () Int)
(declare-fun |c_calculate_output_#res_primed| () Int)
(declare-fun |c_calculate_output_#t~ret7| () Int)
(declare-fun |c_calculate_output_#t~ret7_primed| () Int)
(declare-fun c_calculate_output_~input () Int)
(declare-fun c_calculate_output_~input_primed () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10_primed| () Int)
(declare-fun |c___assert_fail_#in~2.base| () Int)
(declare-fun |c___assert_fail_#in~2.base_primed| () Int)
(declare-fun |c___assert_fail_#in~2.offset| () Int)
(declare-fun |c___assert_fail_#in~2.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~4| () Int)
(declare-fun |c___assert_fail_#in~4_primed| () Int)
(declare-fun |c___assert_fail_#in~5.base| () Int)
(declare-fun |c___assert_fail_#in~5.base_primed| () Int)
(declare-fun |c___assert_fail_#in~5.offset| () Int)
(declare-fun |c___assert_fail_#in~5.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~output~0_3 () Int)
(declare-fun c_aux_v_main_~output~0_4 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret10_3| () Int)
(declare-fun c_aux_v_main_~output~0_5 () Int)
(declare-fun c_aux_v_main_~output~0_6 () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~inputA~0_-1 () Int)
(declare-fun ~inputB~0_-1 () Int)
(declare-fun ~a2~0_-1 () Int)
(declare-fun ~a0~0_-1 () Int)
(declare-fun ~inputC~0_-1 () Int)
(declare-fun ~a29~0_-1 () Int)
(declare-fun ~inputF~0_-1 () Int)
(declare-fun ~inputD~0_-1 () Int)
(declare-fun ~inputE~0_-1 () Int)
(declare-fun ~a4~0_-1 () Int)
(declare-fun |old(~inputA~0)_-1| () Int)
(declare-fun |old(~inputB~0)_-1| () Int)
(declare-fun |old(~a2~0)_-1| () Int)
(declare-fun |old(~a0~0)_-1| () Int)
(declare-fun |old(~inputC~0)_-1| () Int)
(declare-fun |old(~a29~0)_-1| () Int)
(declare-fun |old(~inputF~0)_-1| () Int)
(declare-fun |old(~inputD~0)_-1| () Int)
(declare-fun |old(~inputE~0)_-1| () Int)
(declare-fun |old(~a4~0)_-1| () Int)
(declare-fun |old(~inputA~0)_0| () Int)
(declare-fun |old(~inputB~0)_0| () Int)
(declare-fun |old(~a2~0)_0| () Int)
(declare-fun |old(~a0~0)_0| () Int)
(declare-fun |old(~inputC~0)_0| () Int)
(declare-fun |old(~a29~0)_0| () Int)
(declare-fun |old(~inputF~0)_0| () Int)
(declare-fun |old(~inputD~0)_0| () Int)
(declare-fun |old(~inputE~0)_0| () Int)
(declare-fun |old(~a4~0)_0| () Int)
(declare-fun ~inputA~0_0 () Int)
(declare-fun ~inputB~0_0 () Int)
(declare-fun ~a2~0_0 () Int)
(declare-fun ~a0~0_0 () Int)
(declare-fun ~inputC~0_0 () Int)
(declare-fun ~a29~0_0 () Int)
(declare-fun ~inputF~0_0 () Int)
(declare-fun ~inputD~0_0 () Int)
(declare-fun ~inputE~0_0 () Int)
(declare-fun ~a4~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~inputA~0_1 () Int)
(declare-fun ~inputB~0_1 () Int)
(declare-fun ~a2~0_1 () Int)
(declare-fun ~a0~0_1 () Int)
(declare-fun ~inputC~0_1 () Int)
(declare-fun ~a29~0_1 () Int)
(declare-fun ~inputF~0_1 () Int)
(declare-fun ~inputE~0_1 () Int)
(declare-fun ~inputD~0_1 () Int)
(declare-fun ~a4~0_1 () Int)
(declare-fun |old(~a2~0)_3| () Int)
(declare-fun |old(~a0~0)_3| () Int)
(declare-fun |old(~a29~0)_3| () Int)
(declare-fun |old(~a4~0)_3| () Int)
(declare-fun ~a2~0_3 () Int)
(declare-fun ~a0~0_3 () Int)
(declare-fun ~a29~0_3 () Int)
(declare-fun ~a4~0_3 () Int)
(declare-fun v_main_~output~0_7_fresh_1 () Int)
(declare-fun main_~input~0_5 () Int)
(declare-fun |main_#t~nondet8_5| () Int)
(declare-fun |old(~a2~0)_7| () Int)
(declare-fun |old(~a0~0)_7| () Int)
(declare-fun |old(~a29~0)_7| () Int)
(declare-fun |old(~a4~0)_7| () Int)
(declare-fun ~a2~0_7 () Int)
(declare-fun ~a0~0_7 () Int)
(declare-fun ~a29~0_7 () Int)
(declare-fun ~a4~0_7 () Int)
(declare-fun main_~input~0_7 () Int)
(declare-fun |calculate_output_#in~input_7| () Int)
(declare-fun calculate_output_~input_8 () Int)
(declare-fun |calculate_output_#res_70| () Int)
(declare-fun ~a2~0_70 () Int)
(declare-fun ~a0~0_70 () Int)
(declare-fun ~a29~0_70 () Int)
(declare-fun calculate_output_~input_70 () Int)
(declare-fun |calculate_output_#res_72| () Int)
(declare-fun |main_#t~ret9_72| () Int)
(declare-fun main_~input~0_73 () Int)
(declare-fun |main_#t~ret9_73| () Int)
(declare-fun v_main_~output~0_8_fresh_1 () Int)
(declare-fun main_~input~0_74 () Int)
(declare-fun |main_#t~nondet8_74| () Int)
(declare-fun |old(~a2~0)_76| () Int)
(declare-fun |old(~a0~0)_76| () Int)
(declare-fun |old(~a29~0)_76| () Int)
(declare-fun |old(~a4~0)_76| () Int)
(declare-fun ~a2~0_76 () Int)
(declare-fun ~a0~0_76 () Int)
(declare-fun ~a29~0_76 () Int)
(declare-fun ~a4~0_76 () Int)
(declare-fun main_~input~0_76 () Int)
(declare-fun |calculate_output_#in~input_76| () Int)
(declare-fun calculate_output_~input_77 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |old(~a29~0)_0| ~a29~0_0) (= ~inputA~0_0 |old(~inputA~0)_0|) (= |old(~inputE~0)_0| ~inputE~0_0) (= ~inputC~0_0 |old(~inputC~0)_0|) (= ~inputF~0_0 |old(~inputF~0)_0|) (= |old(~a4~0)_0| ~a4~0_0) (= |old(~a2~0)_0| ~a2~0_0) (= |old(~a0~0)_0| ~a0~0_0) (= |old(~inputD~0)_0| ~inputD~0_0) (= ~inputB~0_0 |old(~inputB~0)_0|)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= ~a2~0_-1 |old(~a2~0)_0|) (= ~a4~0_-1 |old(~a4~0)_0|) (= ~inputE~0_-1 |old(~inputE~0)_0|) (= |old(~a29~0)_0| ~a29~0_-1) (= ~inputB~0_-1 |old(~inputB~0)_0|) (= ~inputD~0_-1 |old(~inputD~0)_0|) (= ~inputF~0_-1 |old(~inputF~0)_0|) (= ~inputA~0_-1 |old(~inputA~0)_0|) (= ~a0~0_-1 |old(~a0~0)_0|) (= ~inputC~0_-1 |old(~inputC~0)_0|)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= 6 ~inputF~0_1) (< 0 |#StackHeapBarrier_-1|) (= (+ 89 ~a4~0_1) 0) (= 3 ~inputC~0_1) (= 12 (select |#length_-1| 3)) (= 20 (select |#length_-1| 2)) (= ~inputA~0_1 1) (= (+ 44 ~a0~0_1) 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (+ ~a29~0_1 127) 0) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 4 ~inputD~0_1) (= ~a2~0_1 1) (= 2 ~inputB~0_1) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= 5 ~inputE~0_1)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(~a29~0)_3| ~a29~0_3) (= |old(~a4~0)_3| ~a4~0_3) (= |old(~a2~0)_3| ~a2~0_3) (= |old(~a0~0)_3| ~a0~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= ~a2~0_1 |old(~a2~0)_3|) (= ~a4~0_1 |old(~a4~0)_3|) (= |old(~a29~0)_3| ~a29~0_1) (= ~a0~0_1 |old(~a0~0)_3|)) :named ssa_3_OldVarAssigCall))
(assert (! (= (+ v_main_~output~0_7_fresh_1 1) 0) :named ssa_4))
(assert (! (and (<= main_~input~0_5 2147483647) (<= 0 (+ main_~input~0_5 2147483648))) :named ssa_5))
(assert (! (or (= main_~input~0_5 6) (= main_~input~0_5 1) (= main_~input~0_5 3) (= main_~input~0_5 4) (= main_~input~0_5 2) (= main_~input~0_5 5)) :named ssa_6))
(assert (! (and (= |old(~a29~0)_7| ~a29~0_7) (= |old(~a4~0)_7| ~a4~0_7) (= |old(~a2~0)_7| ~a2~0_7) (= |old(~a0~0)_7| ~a0~0_7)) :named ssa_7_GlobVarAssigCall))
(assert (! (= main_~input~0_5 |calculate_output_#in~input_7|) :named ssa_7_LocVarAssigCall))
(assert (! (and (= ~a2~0_3 |old(~a2~0)_7|) (= ~a4~0_3 |old(~a4~0)_7|) (= |old(~a29~0)_7| ~a29~0_3) (= ~a0~0_3 |old(~a0~0)_7|)) :named ssa_7_OldVarAssigCall))
(assert (! (= calculate_output_~input_8 |calculate_output_#in~input_7|) :named ssa_8))
(assert (! (or (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 1)) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 144 ~a29~0_7) 0)) :named ssa_9))
(assert (! (or (<= (+ 16 ~a29~0_7) 0) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 3)) (< 43 ~a29~0_7)) :named ssa_10))
(assert (! (or (not (= ~a2~0_7 5)) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= ~a29~0_7 43)) :named ssa_11))
(assert (! (or (not (= ~a2~0_7 3)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86))) :named ssa_12))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ 147 ~a0~0_7)) (not (= ~a2~0_7 3))) :named ssa_13))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a0~0_7 61)) (< 0 (+ 144 ~a29~0_7)) (not (= ~a2~0_7 1))) :named ssa_14))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (< 0 (+ ~a4~0_7 86)) (<= (+ 98 ~a0~0_7) 0) (not (= ~a2~0_7 3)) (<= ~a29~0_7 43)) :named ssa_15))
(assert (! (or (< 0 (+ 98 ~a0~0_7)) (<= ~a29~0_7 43) (<= (+ 147 ~a0~0_7) 0) (not (= ~a2~0_7 4)) (< 0 (+ ~a4~0_7 86))) :named ssa_16))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= ~a29~0_7 43) (not (= ~a2~0_7 3)) (<= (+ 147 ~a0~0_7) 0)) :named ssa_17))
(assert (! (or (<= ~a29~0_7 43) (not (= ~a2~0_7 4)) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86))) :named ssa_18))
(assert (! (or (not (= ~a2~0_7 4)) (< 0 (+ ~a0~0_7 61)) (< 0 (+ ~a4~0_7 86)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ 144 ~a29~0_7))) :named ssa_19))
(assert (! (or (< 0 (+ 98 ~a0~0_7)) (< 0 (+ 144 ~a29~0_7)) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 2))) :named ssa_20))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= ~a29~0_7 43) (<= (+ 147 ~a0~0_7) 0) (not (= ~a2~0_7 1))) :named ssa_21))
(assert (! (or (< 0 (+ 147 ~a0~0_7)) (not (= ~a2~0_7 5)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ ~a4~0_7 86))) :named ssa_22))
(assert (! (or (<= (+ 16 ~a29~0_7) 0) (< 0 (+ 98 ~a0~0_7)) (not (= ~a2~0_7 5)) (<= (+ 147 ~a0~0_7) 0) (< 43 ~a29~0_7) (< 0 (+ ~a4~0_7 86))) :named ssa_23))
(assert (! (or (not (= ~a2~0_7 3)) (< 0 (+ ~a4~0_7 86)) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 98 ~a0~0_7)) (< 43 ~a29~0_7) (<= (+ 16 ~a29~0_7) 0)) :named ssa_24))
(assert (! (or (<= (+ 16 ~a29~0_7) 0) (<= (+ 147 ~a0~0_7) 0) (< 43 ~a29~0_7) (< 0 (+ 98 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 4))) :named ssa_25))
(assert (! (or (< 0 (+ 144 ~a29~0_7)) (not (= ~a2~0_7 2)) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86))) :named ssa_26))
(assert (! (or (< 43 ~a29~0_7) (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (not (= ~a2~0_7 2)) (< 0 (+ 98 ~a0~0_7)) (<= (+ 147 ~a0~0_7) 0)) :named ssa_27))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 1)) (< 43 ~a29~0_7) (< 0 (+ ~a0~0_7 61)) (<= (+ 16 ~a29~0_7) 0) (<= (+ 98 ~a0~0_7) 0)) :named ssa_28))
(assert (! (or (<= (+ 144 ~a29~0_7) 0) (< 0 (+ ~a0~0_7 61)) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 1)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ 16 ~a29~0_7))) :named ssa_29))
(assert (! (or (not (= ~a2~0_7 3)) (<= (+ 144 ~a29~0_7) 0) (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 16 ~a29~0_7))) :named ssa_30))
(assert (! (or (not (= ~a2~0_7 1)) (< 0 (+ 147 ~a0~0_7)) (<= ~a29~0_7 43) (< 0 (+ ~a4~0_7 86))) :named ssa_31))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (< 0 (+ ~a0~0_7 61)) (< 43 ~a29~0_7) (<= (+ 98 ~a0~0_7) 0) (not (= ~a2~0_7 2))) :named ssa_32))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= (+ 147 ~a0~0_7) 0) (not (= ~a2~0_7 5)) (<= ~a29~0_7 43)) :named ssa_33))
(assert (! (or (<= (+ 144 ~a29~0_7) 0) (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 2)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 147 ~a0~0_7))) :named ssa_34))
(assert (! (or (< 0 (+ 98 ~a0~0_7)) (not (= ~a2~0_7 3)) (< 0 (+ 16 ~a29~0_7)) (<= (+ 144 ~a29~0_7) 0) (< 0 (+ ~a4~0_7 86)) (<= (+ 147 ~a0~0_7) 0)) :named ssa_35))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (<= (+ 144 ~a29~0_7) 0) (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 5)) (< 0 (+ ~a4~0_7 86))) :named ssa_36))
(assert (! (or (not (= ~a2~0_7 3)) (< 0 (+ 147 ~a0~0_7)) (<= ~a29~0_7 43) (< 0 (+ ~a4~0_7 86))) :named ssa_37))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ 147 ~a0~0_7)) (not (= ~a2~0_7 1))) :named ssa_38))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= (+ 147 ~a0~0_7) 0) (not (= ~a2~0_7 5)) (< 0 (+ 144 ~a29~0_7))) :named ssa_39))
(assert (! (or (not (= ~a2~0_7 3)) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ 98 ~a0~0_7))) :named ssa_40))
(assert (! (or (<= (+ 144 ~a29~0_7) 0) (not (= ~a2~0_7 2)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 16 ~a29~0_7)) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 98 ~a0~0_7))) :named ssa_41))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (<= (+ 144 ~a29~0_7) 0) (<= (+ 98 ~a0~0_7) 0) (not (= ~a2~0_7 4)) (< 0 (+ 16 ~a29~0_7)) (< 0 (+ ~a4~0_7 86))) :named ssa_42))
(assert (! (or (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 4)) (<= ~a29~0_7 43) (< 0 (+ ~a0~0_7 61))) :named ssa_43))
(assert (! (or (not (= ~a2~0_7 5)) (<= (+ 98 ~a0~0_7) 0) (< 43 ~a29~0_7) (<= (+ 16 ~a29~0_7) 0) (< 0 (+ ~a4~0_7 86)) (< 0 (+ ~a0~0_7 61))) :named ssa_44))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= (+ 144 ~a29~0_7) 0) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 1))) :named ssa_45))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (<= ~a29~0_7 43) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 2))) :named ssa_46))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 1)) (<= (+ 16 ~a29~0_7) 0) (< 43 ~a29~0_7) (< 0 (+ 147 ~a0~0_7))) :named ssa_47))
(assert (! (or (<= (+ 147 ~a0~0_7) 0) (not (= ~a2~0_7 1)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ 98 ~a0~0_7))) :named ssa_48))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (not (= ~a2~0_7 1)) (< 0 (+ ~a4~0_7 86)) (<= ~a29~0_7 43)) :named ssa_49))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 4)) (< 43 ~a29~0_7) (<= (+ 16 ~a29~0_7) 0) (<= (+ 98 ~a0~0_7) 0)) :named ssa_50))
(assert (! (or (<= (+ 16 ~a29~0_7) 0) (< 0 (+ 147 ~a0~0_7)) (< 43 ~a29~0_7) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 4))) :named ssa_51))
(assert (! (or (not (= ~a2~0_7 4)) (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 98 ~a0~0_7)) (< 0 (+ 16 ~a29~0_7)) (<= (+ 144 ~a29~0_7) 0) (< 0 (+ ~a4~0_7 86))) :named ssa_52))
(assert (! (or (not (= ~a2~0_7 5)) (<= ~a29~0_7 43) (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86))) :named ssa_53))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 147 ~a0~0_7)) (<= (+ 144 ~a29~0_7) 0) (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 3))) :named ssa_54))
(assert (! (or (< 0 (+ ~a0~0_7 61)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (not (= ~a2~0_7 3)) (< 43 ~a29~0_7)) :named ssa_55))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (< 0 (+ 98 ~a0~0_7)) (<= (+ 147 ~a0~0_7) 0) (<= ~a29~0_7 43) (not (= ~a2~0_7 2))) :named ssa_56))
(assert (! (or (<= (+ ~a0~0_7 61) 0) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 144 ~a29~0_7)) (not (= ~a2~0_7 1))) :named ssa_57))
(assert (! (or (not (= ~a2~0_7 4)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 147 ~a0~0_7))) :named ssa_58))
(assert (! (or (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= ~a29~0_7 43) (not (= ~a2~0_7 2))) :named ssa_59))
(assert (! (or (not (= ~a2~0_7 5)) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a0~0_7 61))) :named ssa_60))
(assert (! (or (<= (+ 98 ~a0~0_7) 0) (< 0 (+ 144 ~a29~0_7)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ ~a0~0_7 61)) (not (= ~a2~0_7 2))) :named ssa_61))
(assert (! (or (<= (+ 144 ~a29~0_7) 0) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (< 0 (+ 16 ~a29~0_7)) (not (= ~a2~0_7 4))) :named ssa_62))
(assert (! (or (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 98 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (< 43 ~a29~0_7) (not (= ~a2~0_7 1))) :named ssa_63))
(assert (! (or (<= (+ 147 ~a0~0_7) 0) (< 0 (+ 98 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 144 ~a29~0_7) 0) (not (= ~a2~0_7 5)) (< 0 (+ 16 ~a29~0_7))) :named ssa_64))
(assert (! (or (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 144 ~a29~0_7) 0) (not (= ~a2~0_7 5)) (< 0 (+ 16 ~a29~0_7))) :named ssa_65))
(assert (! (or (not (= ~a2~0_7 5)) (< 0 (+ 147 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (< 43 ~a29~0_7)) :named ssa_66))
(assert (! (or (< 0 (+ ~a4~0_7 86)) (<= (+ 16 ~a29~0_7) 0) (< 0 (+ 147 ~a0~0_7)) (not (= ~a2~0_7 2)) (< 43 ~a29~0_7)) :named ssa_67))
(assert (! (or (< 0 (+ 144 ~a29~0_7)) (not (= ~a2~0_7 4)) (< 0 (+ 98 ~a0~0_7)) (< 0 (+ ~a4~0_7 86)) (<= (+ 147 ~a0~0_7) 0)) :named ssa_68))
(assert (! (or (<= (+ 98 ~a0~0_7) 0) (< 0 (+ ~a0~0_7 61)) (< 0 (+ ~a4~0_7 86)) (not (= ~a2~0_7 2)) (< 0 (+ 16 ~a29~0_7)) (<= (+ 144 ~a29~0_7) 0)) :named ssa_69))
(assert (! (and (= calculate_output_~input_8 1) (= ~a29~0_70 (ite (and (not (= 0 (mod (+ (ite (and (not (= (mod ~a29~0_7 5) 0)) (< ~a29~0_7 0)) (+ (div ~a29~0_7 5) 1) (div ~a29~0_7 5)) 1) 5))) (< (ite (and (not (= (mod ~a29~0_7 5) 0)) (< ~a29~0_7 0)) (+ (div ~a29~0_7 5) 1) (div ~a29~0_7 5)) 403019)) (+ (div (+ (ite (and (not (= (mod ~a29~0_7 5) 0)) (< ~a29~0_7 0)) (+ (div ~a29~0_7 5) 1) (div ~a29~0_7 5)) (- 403019)) 5) 1) (div (+ (ite (and (not (= (mod ~a29~0_7 5) 0)) (< ~a29~0_7 0)) (+ (div ~a29~0_7 5) 1) (div ~a29~0_7 5)) (- 403019)) 5))) (<= (+ ~a4~0_7 86) 0) (= ~a2~0_70 1) (= (+ |calculate_output_#res_70| 1) 0) (or (and (<= (+ 144 ~a29~0_7) 0) (= ~a2~0_7 3)) (and (= ~a2~0_7 2) (< 43 ~a29~0_7)) (and (= ~a2~0_7 2) (< 0 (+ 16 ~a29~0_7)) (<= ~a29~0_7 43))) (< 0 (+ ~a0~0_7 61)) (= (+ 2 ~a0~0_70) (* 5 (ite (and (< (ite (and (not (= (mod ~a0~0_7 299926) 0)) (< ~a0~0_7 0)) (+ (mod ~a0~0_7 299926) (- 299926)) (mod ~a0~0_7 299926)) 300072) (not (= (mod (+ (ite (and (not (= (mod ~a0~0_7 299926) 0)) (< ~a0~0_7 0)) (+ (mod ~a0~0_7 299926) (- 299926)) (mod ~a0~0_7 299926)) 3) 5) 0))) (+ (div (+ (- 300072) (ite (and (not (= (mod ~a0~0_7 299926) 0)) (< ~a0~0_7 0)) (+ (mod ~a0~0_7 299926) (- 299926)) (mod ~a0~0_7 299926))) 5) 1) (div (+ (- 300072) (ite (and (not (= (mod ~a0~0_7 299926) 0)) (< ~a0~0_7 0)) (+ (mod ~a0~0_7 299926) (- 299926)) (mod ~a0~0_7 299926))) 5))))) :named ssa_70))
(assert (! true :named ssa_71))
(assert (! (= |main_#t~ret9_72| |calculate_output_#res_70|) :named ssa_72_return))
(assert (! (and (= v_main_~output~0_8_fresh_1 |main_#t~ret9_72|) (<= 0 (+ |main_#t~ret9_72| 2147483648)) (<= |main_#t~ret9_72| 2147483647)) :named ssa_73))
(assert (! (and (<= main_~input~0_74 2147483647) (<= 0 (+ main_~input~0_74 2147483648))) :named ssa_74))
(assert (! (or (= main_~input~0_74 6) (= main_~input~0_74 1) (= main_~input~0_74 3) (= main_~input~0_74 4) (= main_~input~0_74 2) (= main_~input~0_74 5)) :named ssa_75))
(assert (! (and (= |old(~a29~0)_76| ~a29~0_76) (= |old(~a4~0)_76| ~a4~0_76) (= |old(~a2~0)_76| ~a2~0_76) (= |old(~a0~0)_76| ~a0~0_76)) :named ssa_76_GlobVarAssigCall))
(assert (! (= main_~input~0_74 |calculate_output_#in~input_76|) :named ssa_76_LocVarAssigCall))
(assert (! (and (= ~a2~0_70 |old(~a2~0)_76|) (= ~a4~0_7 |old(~a4~0)_76|) (= |old(~a29~0)_76| ~a29~0_70) (= ~a0~0_70 |old(~a0~0)_76|)) :named ssa_76_OldVarAssigCall))
(assert (! (= calculate_output_~input_77 |calculate_output_#in~input_76|) :named ssa_77))
(assert (! (or (< 0 (+ 16 ~a29~0_76)) (not (= ~a2~0_76 1)) (< 0 (+ 147 ~a0~0_76)) (< 0 (+ ~a4~0_76 86)) (<= (+ 144 ~a29~0_76) 0)) :named ssa_78))
(assert (! (or (<= (+ 16 ~a29~0_76) 0) (< 0 (+ 147 ~a0~0_76)) (< 0 (+ ~a4~0_76 86)) (not (= ~a2~0_76 3)) (< 43 ~a29~0_76)) :named ssa_79))
(assert (! (or (not (= ~a2~0_76 5)) (< 0 (+ 147 ~a0~0_76)) (< 0 (+ ~a4~0_76 86)) (<= ~a29~0_76 43)) :named ssa_80))
(assert (! (or (not (= ~a2~0_76 3)) (< 0 (+ 144 ~a29~0_76)) (< 0 (+ ~a0~0_76 61)) (<= (+ 98 ~a0~0_76) 0) (< 0 (+ ~a4~0_76 86))) :named ssa_81))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (< 0 (+ 144 ~a29~0_76)) (< 0 (+ 147 ~a0~0_76)) (not (= ~a2~0_76 3))) :named ssa_82))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (<= (+ 98 ~a0~0_76) 0) (< 0 (+ ~a0~0_76 61)) (< 0 (+ 144 ~a29~0_76)) (not (= ~a2~0_76 1))) :named ssa_83))
(assert (! (or (< 0 (+ ~a0~0_76 61)) (< 0 (+ ~a4~0_76 86)) (<= (+ 98 ~a0~0_76) 0) (not (= ~a2~0_76 3)) (<= ~a29~0_76 43)) :named ssa_84))
(assert (! (or (< 0 (+ 98 ~a0~0_76)) (<= ~a29~0_76 43) (<= (+ 147 ~a0~0_76) 0) (not (= ~a2~0_76 4)) (< 0 (+ ~a4~0_76 86))) :named ssa_85))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (< 0 (+ 98 ~a0~0_76)) (<= ~a29~0_76 43) (not (= ~a2~0_76 3)) (<= (+ 147 ~a0~0_76) 0)) :named ssa_86))
(assert (! (or (<= ~a29~0_76 43) (not (= ~a2~0_76 4)) (< 0 (+ 147 ~a0~0_76)) (< 0 (+ ~a4~0_76 86))) :named ssa_87))
(assert (! (or (not (= ~a2~0_76 4)) (< 0 (+ ~a0~0_76 61)) (< 0 (+ ~a4~0_76 86)) (<= (+ 98 ~a0~0_76) 0) (< 0 (+ 144 ~a29~0_76))) :named ssa_88))
(assert (! (or (< 0 (+ 98 ~a0~0_76)) (< 0 (+ 144 ~a29~0_76)) (<= (+ 147 ~a0~0_76) 0) (< 0 (+ ~a4~0_76 86)) (not (= ~a2~0_76 2))) :named ssa_89))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (< 0 (+ 98 ~a0~0_76)) (<= ~a29~0_76 43) (<= (+ 147 ~a0~0_76) 0) (not (= ~a2~0_76 1))) :named ssa_90))
(assert (! (or (< 0 (+ 147 ~a0~0_76)) (not (= ~a2~0_76 5)) (< 0 (+ 144 ~a29~0_76)) (< 0 (+ ~a4~0_76 86))) :named ssa_91))
(assert (! (or (<= (+ 16 ~a29~0_76) 0) (< 0 (+ 98 ~a0~0_76)) (not (= ~a2~0_76 5)) (<= (+ 147 ~a0~0_76) 0) (< 43 ~a29~0_76) (< 0 (+ ~a4~0_76 86))) :named ssa_92))
(assert (! (or (not (= ~a2~0_76 3)) (< 0 (+ ~a4~0_76 86)) (<= (+ 147 ~a0~0_76) 0) (< 0 (+ 98 ~a0~0_76)) (< 43 ~a29~0_76) (<= (+ 16 ~a29~0_76) 0)) :named ssa_93))
(assert (! (or (<= (+ 16 ~a29~0_76) 0) (<= (+ 147 ~a0~0_76) 0) (< 43 ~a29~0_76) (< 0 (+ 98 ~a0~0_76)) (< 0 (+ ~a4~0_76 86)) (not (= ~a2~0_76 4))) :named ssa_94))
(assert (! (or (< 0 (+ 144 ~a29~0_76)) (not (= ~a2~0_76 2)) (< 0 (+ 147 ~a0~0_76)) (< 0 (+ ~a4~0_76 86))) :named ssa_95))
(assert (! (or (< 43 ~a29~0_76) (< 0 (+ ~a4~0_76 86)) (<= (+ 16 ~a29~0_76) 0) (not (= ~a2~0_76 2)) (< 0 (+ 98 ~a0~0_76)) (<= (+ 147 ~a0~0_76) 0)) :named ssa_96))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (not (= ~a2~0_76 1)) (< 43 ~a29~0_76) (< 0 (+ ~a0~0_76 61)) (<= (+ 16 ~a29~0_76) 0) (<= (+ 98 ~a0~0_76) 0)) :named ssa_97))
(assert (! (or (<= (+ 144 ~a29~0_76) 0) (< 0 (+ ~a0~0_76 61)) (< 0 (+ ~a4~0_76 86)) (not (= ~a2~0_76 1)) (<= (+ 98 ~a0~0_76) 0) (< 0 (+ 16 ~a29~0_76))) :named ssa_98))
(assert (! (or (not (= ~a2~0_76 3)) (<= (+ 144 ~a29~0_76) 0) (< 0 (+ ~a0~0_76 61)) (<= (+ 98 ~a0~0_76) 0) (< 0 (+ ~a4~0_76 86)) (< 0 (+ 16 ~a29~0_76))) :named ssa_99))
(assert (! (or (not (= ~a2~0_76 1)) (< 0 (+ 147 ~a0~0_76)) (<= ~a29~0_76 43) (< 0 (+ ~a4~0_76 86))) :named ssa_100))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (<= (+ 16 ~a29~0_76) 0) (< 0 (+ ~a0~0_76 61)) (< 43 ~a29~0_76) (<= (+ 98 ~a0~0_76) 0) (not (= ~a2~0_76 2))) :named ssa_101))
(assert (! (or (< 0 (+ ~a4~0_76 86)) (< 0 (+ 98 ~a0~0_76)) (<= (+ 147 ~a0~0_76) 0) (not (= ~a2~0_76 5)) (<= ~a29~0_76 43)) :named ssa_102))
(assert (! (and (= ~a2~0_76 2) (<= (+ 147 ~a0~0_76) 0) (< 0 (+ 144 ~a29~0_76)) (<= (+ 16 ~a29~0_76) 0) (<= (+ ~a4~0_76 86) 0)) :named ssa_103))
(assert (! true :named ssa_104))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_13 ssa_27 ssa_20 ssa_64 ssa_31 ssa_60 ssa_68 ssa_44 ssa_16 ssa_57 ssa_26 ssa_55 ssa_67 ssa_34 ssa_7_LocVarAssigCall ssa_40 ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_46 ssa_47 ssa_25 ssa_53 ssa_58 ssa_7_OldVarAssigCall ssa_19 ssa_61 ssa_59 ssa_39 ssa_62 ssa_43 ssa_37 ssa_38 ssa_12 ssa_32 ssa_50 ssa_65 ssa_72_return ssa_11 ssa_48 ssa_28 ssa_54 ssa_22 ssa_51 ssa_36 ssa_15 ssa_49 ssa_29 ssa_63 ssa_21 ssa_52 ssa_18 ssa_23 ssa_30 ssa_70 ssa_66 ssa_69 ssa_17 ssa_56 ssa_33 ssa_7_GlobVarAssigCall ssa_35 ssa_41 ssa_42 ssa_71 ssa_24) ssa_73 ssa_74 ssa_75 (and ssa_76_GlobVarAssigCall ssa_76_OldVarAssigCall ssa_76_LocVarAssigCall) ssa_77 ssa_78 ssa_79 ssa_80 ssa_81 ssa_82 ssa_83 ssa_84 ssa_85 ssa_86 ssa_87 ssa_88 ssa_89 ssa_90 ssa_91 ssa_92 ssa_93 ssa_94 ssa_95 ssa_96 ssa_97 ssa_98 ssa_99 ssa_100 ssa_101 ssa_102 ssa_103 (and ssa_104 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~inputA~0_-2 () Int)
(declare-fun ~inputB~0_-2 () Int)
(declare-fun ~a2~0_-2 () Int)
(declare-fun ~a0~0_-2 () Int)
(declare-fun ~inputC~0_-2 () Int)
(declare-fun ~a29~0_-2 () Int)
(declare-fun ~inputF~0_-2 () Int)
(declare-fun ~inputD~0_-2 () Int)
(declare-fun ~inputE~0_-2 () Int)
(declare-fun ~a4~0_-2 () Int)
(declare-fun |old(~inputA~0)_-2| () Int)
(declare-fun |old(~inputB~0)_-2| () Int)
(declare-fun |old(~a2~0)_-2| () Int)
(declare-fun |old(~a0~0)_-2| () Int)
(declare-fun |old(~inputC~0)_-2| () Int)
(declare-fun |old(~a29~0)_-2| () Int)
(declare-fun |old(~inputF~0)_-2| () Int)
(declare-fun |old(~inputD~0)_-2| () Int)
(declare-fun |old(~inputE~0)_-2| () Int)
(declare-fun |old(~a4~0)_-2| () Int)
(declare-fun |old(~inputA~0)_-1| () Int)
(declare-fun |old(~inputB~0)_-1| () Int)
(declare-fun |old(~a2~0)_-1| () Int)
(declare-fun |old(~a0~0)_-1| () Int)
(declare-fun |old(~inputC~0)_-1| () Int)
(declare-fun |old(~a29~0)_-1| () Int)
(declare-fun |old(~inputF~0)_-1| () Int)
(declare-fun |old(~inputD~0)_-1| () Int)
(declare-fun |old(~inputE~0)_-1| () Int)
(declare-fun |old(~a4~0)_-1| () Int)
(declare-fun ~inputA~0_-1 () Int)
(declare-fun ~inputB~0_-1 () Int)
(declare-fun ~a2~0_-1 () Int)
(declare-fun ~a0~0_-1 () Int)
(declare-fun ~inputC~0_-1 () Int)
(declare-fun ~a29~0_-1 () Int)
(declare-fun ~inputF~0_-1 () Int)
(declare-fun ~inputD~0_-1 () Int)
(declare-fun ~inputE~0_-1 () Int)
(declare-fun ~a4~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~inputA~0_0 () Int)
(declare-fun ~inputB~0_0 () Int)
(declare-fun ~a2~0_0 () Int)
(declare-fun ~a0~0_0 () Int)
(declare-fun ~inputC~0_0 () Int)
(declare-fun ~a29~0_0 () Int)
(declare-fun ~inputF~0_0 () Int)
(declare-fun ~inputE~0_0 () Int)
(declare-fun ~inputD~0_0 () Int)
(declare-fun ~a4~0_0 () Int)
(assert (! (and (= ~a2~0_-1 |old(~a2~0)_-1|) (= ~a0~0_-1 |old(~a0~0)_-1|) (= ~inputE~0_-1 |old(~inputE~0)_-1|) (= ~inputA~0_-1 |old(~inputA~0)_-1|) (= ~a29~0_-1 |old(~a29~0)_-1|) (= ~inputB~0_-1 |old(~inputB~0)_-1|) (= ~inputC~0_-1 |old(~inputC~0)_-1|) (= ~inputD~0_-1 |old(~inputD~0)_-1|) (= ~a4~0_-1 |old(~a4~0)_-1|) (= ~inputF~0_-1 |old(~inputF~0)_-1|)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= 6 ~inputF~0_0) (< 0 |#StackHeapBarrier_-1|) (= (+ 89 ~a4~0_0) 0) (= 3 ~inputC~0_0) (= 12 (select |#length_-1| 3)) (= 20 (select |#length_-1| 2)) (= ~inputA~0_0 1) (= (+ 44 ~a0~0_0) 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (+ ~a29~0_0 127) 0) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 4 ~inputD~0_0) (= ~a2~0_0 1) (= 2 ~inputB~0_0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= 5 ~inputE~0_0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~a2~0_-2 |old(~a2~0)_-1|) (= ~a4~0_-2 |old(~a4~0)_-1|) (= ~inputE~0_-2 |old(~inputE~0)_-1|) (= |old(~a29~0)_-1| ~a29~0_-2) (= ~inputB~0_-2 |old(~inputB~0)_-1|) (= ~inputD~0_-2 |old(~inputD~0)_-1|) (= ~inputF~0_-2 |old(~inputF~0)_-1|) (= ~inputA~0_-2 |old(~inputA~0)_-1|) (= ~a0~0_-2 |old(~a0~0)_-1|) (= ~inputC~0_-2 |old(~inputC~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~a2~0_-2 () Int)
(declare-fun ~a0~0_-2 () Int)
(declare-fun ~a29~0_-2 () Int)
(declare-fun ~a4~0_-2 () Int)
(declare-fun |old(~a2~0)_-2| () Int)
(declare-fun |old(~a0~0)_-2| () Int)
(declare-fun |old(~a29~0)_-2| () Int)
(declare-fun |old(~a4~0)_-2| () Int)
(declare-fun main_~input~0_-2 () Int)
(declare-fun |old(~a2~0)_-1| () Int)
(declare-fun |old(~a0~0)_-1| () Int)
(declare-fun |old(~a29~0)_-1| () Int)
(declare-fun |old(~a4~0)_-1| () Int)
(declare-fun main_~input~0_-1 () Int)
(declare-fun |calculate_output_#in~input_-1| () Int)
(declare-fun ~a2~0_-1 () Int)
(declare-fun ~a0~0_-1 () Int)
(declare-fun ~a29~0_-1 () Int)
(declare-fun ~a4~0_-1 () Int)
(declare-fun calculate_output_~input_0 () Int)
(declare-fun |calculate_output_#res_62| () Int)
(declare-fun ~a2~0_62 () Int)
(declare-fun ~a0~0_62 () Int)
(declare-fun ~a29~0_62 () Int)
(declare-fun calculate_output_~input_62 () Int)
(declare-fun |calculate_output_#res_64| () Int)
(declare-fun |main_#t~ret9_64| () Int)
(assert (! (and (= ~a2~0_-1 |old(~a2~0)_-1|) (= ~a0~0_-1 |old(~a0~0)_-1|) (= ~a29~0_-1 |old(~a29~0)_-1|) (= ~a4~0_-1 |old(~a4~0)_-1|)) :named ssa_precond))
(assert (! (not (= ~a2~0_62 1)) :named ssa_postcond))
(assert (! (= calculate_output_~input_0 |calculate_output_#in~input_-1|) :named ssa_0))
(assert (! (or (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 1)) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 144 ~a29~0_-1) 0)) :named ssa_1))
(assert (! (or (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 3)) (< 43 ~a29~0_-1)) :named ssa_2))
(assert (! (or (not (= ~a2~0_-1 5)) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= ~a29~0_-1 43)) :named ssa_3))
(assert (! (or (not (= ~a2~0_-1 3)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86))) :named ssa_4))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ 147 ~a0~0_-1)) (not (= ~a2~0_-1 3))) :named ssa_5))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a0~0_-1 61)) (< 0 (+ 144 ~a29~0_-1)) (not (= ~a2~0_-1 1))) :named ssa_6))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 98 ~a0~0_-1) 0) (not (= ~a2~0_-1 3)) (<= ~a29~0_-1 43)) :named ssa_7))
(assert (! (or (< 0 (+ 98 ~a0~0_-1)) (<= ~a29~0_-1 43) (<= (+ 147 ~a0~0_-1) 0) (not (= ~a2~0_-1 4)) (< 0 (+ ~a4~0_-1 86))) :named ssa_8))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= ~a29~0_-1 43) (not (= ~a2~0_-1 3)) (<= (+ 147 ~a0~0_-1) 0)) :named ssa_9))
(assert (! (or (<= ~a29~0_-1 43) (not (= ~a2~0_-1 4)) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86))) :named ssa_10))
(assert (! (or (not (= ~a2~0_-1 4)) (< 0 (+ ~a0~0_-1 61)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ 144 ~a29~0_-1))) :named ssa_11))
(assert (! (or (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ 144 ~a29~0_-1)) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 2))) :named ssa_12))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= ~a29~0_-1 43) (<= (+ 147 ~a0~0_-1) 0) (not (= ~a2~0_-1 1))) :named ssa_13))
(assert (! (or (< 0 (+ 147 ~a0~0_-1)) (not (= ~a2~0_-1 5)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ ~a4~0_-1 86))) :named ssa_14))
(assert (! (or (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ 98 ~a0~0_-1)) (not (= ~a2~0_-1 5)) (<= (+ 147 ~a0~0_-1) 0) (< 43 ~a29~0_-1) (< 0 (+ ~a4~0_-1 86))) :named ssa_15))
(assert (! (or (not (= ~a2~0_-1 3)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 98 ~a0~0_-1)) (< 43 ~a29~0_-1) (<= (+ 16 ~a29~0_-1) 0)) :named ssa_16))
(assert (! (or (<= (+ 16 ~a29~0_-1) 0) (<= (+ 147 ~a0~0_-1) 0) (< 43 ~a29~0_-1) (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 4))) :named ssa_17))
(assert (! (or (< 0 (+ 144 ~a29~0_-1)) (not (= ~a2~0_-1 2)) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86))) :named ssa_18))
(assert (! (or (< 43 ~a29~0_-1) (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (not (= ~a2~0_-1 2)) (< 0 (+ 98 ~a0~0_-1)) (<= (+ 147 ~a0~0_-1) 0)) :named ssa_19))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 1)) (< 43 ~a29~0_-1) (< 0 (+ ~a0~0_-1 61)) (<= (+ 16 ~a29~0_-1) 0) (<= (+ 98 ~a0~0_-1) 0)) :named ssa_20))
(assert (! (or (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ ~a0~0_-1 61)) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 1)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ 16 ~a29~0_-1))) :named ssa_21))
(assert (! (or (not (= ~a2~0_-1 3)) (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 16 ~a29~0_-1))) :named ssa_22))
(assert (! (or (not (= ~a2~0_-1 1)) (< 0 (+ 147 ~a0~0_-1)) (<= ~a29~0_-1 43) (< 0 (+ ~a4~0_-1 86))) :named ssa_23))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ ~a0~0_-1 61)) (< 43 ~a29~0_-1) (<= (+ 98 ~a0~0_-1) 0) (not (= ~a2~0_-1 2))) :named ssa_24))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= (+ 147 ~a0~0_-1) 0) (not (= ~a2~0_-1 5)) (<= ~a29~0_-1 43)) :named ssa_25))
(assert (! (or (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 2)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 147 ~a0~0_-1))) :named ssa_26))
(assert (! (or (< 0 (+ 98 ~a0~0_-1)) (not (= ~a2~0_-1 3)) (< 0 (+ 16 ~a29~0_-1)) (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (<= (+ 147 ~a0~0_-1) 0)) :named ssa_27))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 5)) (< 0 (+ ~a4~0_-1 86))) :named ssa_28))
(assert (! (or (not (= ~a2~0_-1 3)) (< 0 (+ 147 ~a0~0_-1)) (<= ~a29~0_-1 43) (< 0 (+ ~a4~0_-1 86))) :named ssa_29))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ 147 ~a0~0_-1)) (not (= ~a2~0_-1 1))) :named ssa_30))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= (+ 147 ~a0~0_-1) 0) (not (= ~a2~0_-1 5)) (< 0 (+ 144 ~a29~0_-1))) :named ssa_31))
(assert (! (or (not (= ~a2~0_-1 3)) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ 98 ~a0~0_-1))) :named ssa_32))
(assert (! (or (<= (+ 144 ~a29~0_-1) 0) (not (= ~a2~0_-1 2)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 16 ~a29~0_-1)) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 98 ~a0~0_-1))) :named ssa_33))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (<= (+ 144 ~a29~0_-1) 0) (<= (+ 98 ~a0~0_-1) 0) (not (= ~a2~0_-1 4)) (< 0 (+ 16 ~a29~0_-1)) (< 0 (+ ~a4~0_-1 86))) :named ssa_34))
(assert (! (or (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 4)) (<= ~a29~0_-1 43) (< 0 (+ ~a0~0_-1 61))) :named ssa_35))
(assert (! (or (not (= ~a2~0_-1 5)) (<= (+ 98 ~a0~0_-1) 0) (< 43 ~a29~0_-1) (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ ~a0~0_-1 61))) :named ssa_36))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= (+ 144 ~a29~0_-1) 0) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 1))) :named ssa_37))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (<= ~a29~0_-1 43) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 2))) :named ssa_38))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 1)) (<= (+ 16 ~a29~0_-1) 0) (< 43 ~a29~0_-1) (< 0 (+ 147 ~a0~0_-1))) :named ssa_39))
(assert (! (or (<= (+ 147 ~a0~0_-1) 0) (not (= ~a2~0_-1 1)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ 98 ~a0~0_-1))) :named ssa_40))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (not (= ~a2~0_-1 1)) (< 0 (+ ~a4~0_-1 86)) (<= ~a29~0_-1 43)) :named ssa_41))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 4)) (< 43 ~a29~0_-1) (<= (+ 16 ~a29~0_-1) 0) (<= (+ 98 ~a0~0_-1) 0)) :named ssa_42))
(assert (! (or (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ 147 ~a0~0_-1)) (< 43 ~a29~0_-1) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 4))) :named ssa_43))
(assert (! (or (not (= ~a2~0_-1 4)) (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ 16 ~a29~0_-1)) (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ ~a4~0_-1 86))) :named ssa_44))
(assert (! (or (not (= ~a2~0_-1 5)) (<= ~a29~0_-1 43) (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86))) :named ssa_45))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 147 ~a0~0_-1)) (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 3))) :named ssa_46))
(assert (! (or (< 0 (+ ~a0~0_-1 61)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (not (= ~a2~0_-1 3)) (< 43 ~a29~0_-1)) :named ssa_47))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 98 ~a0~0_-1)) (<= (+ 147 ~a0~0_-1) 0) (<= ~a29~0_-1 43) (not (= ~a2~0_-1 2))) :named ssa_48))
(assert (! (or (<= (+ ~a0~0_-1 61) 0) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 144 ~a29~0_-1)) (not (= ~a2~0_-1 1))) :named ssa_49))
(assert (! (or (not (= ~a2~0_-1 4)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 147 ~a0~0_-1))) :named ssa_50))
(assert (! (or (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= ~a29~0_-1 43) (not (= ~a2~0_-1 2))) :named ssa_51))
(assert (! (or (not (= ~a2~0_-1 5)) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a0~0_-1 61))) :named ssa_52))
(assert (! (or (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ 144 ~a29~0_-1)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ ~a0~0_-1 61)) (not (= ~a2~0_-1 2))) :named ssa_53))
(assert (! (or (<= (+ 144 ~a29~0_-1) 0) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (< 0 (+ 16 ~a29~0_-1)) (not (= ~a2~0_-1 4))) :named ssa_54))
(assert (! (or (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (< 43 ~a29~0_-1) (not (= ~a2~0_-1 1))) :named ssa_55))
(assert (! (or (<= (+ 147 ~a0~0_-1) 0) (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 144 ~a29~0_-1) 0) (not (= ~a2~0_-1 5)) (< 0 (+ 16 ~a29~0_-1))) :named ssa_56))
(assert (! (or (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 144 ~a29~0_-1) 0) (not (= ~a2~0_-1 5)) (< 0 (+ 16 ~a29~0_-1))) :named ssa_57))
(assert (! (or (not (= ~a2~0_-1 5)) (< 0 (+ 147 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (< 43 ~a29~0_-1)) :named ssa_58))
(assert (! (or (< 0 (+ ~a4~0_-1 86)) (<= (+ 16 ~a29~0_-1) 0) (< 0 (+ 147 ~a0~0_-1)) (not (= ~a2~0_-1 2)) (< 43 ~a29~0_-1)) :named ssa_59))
(assert (! (or (< 0 (+ 144 ~a29~0_-1)) (not (= ~a2~0_-1 4)) (< 0 (+ 98 ~a0~0_-1)) (< 0 (+ ~a4~0_-1 86)) (<= (+ 147 ~a0~0_-1) 0)) :named ssa_60))
(assert (! (or (<= (+ 98 ~a0~0_-1) 0) (< 0 (+ ~a0~0_-1 61)) (< 0 (+ ~a4~0_-1 86)) (not (= ~a2~0_-1 2)) (< 0 (+ 16 ~a29~0_-1)) (<= (+ 144 ~a29~0_-1) 0)) :named ssa_61))
(assert (! (and (= calculate_output_~input_0 1) (= ~a29~0_62 (ite (and (not (= 0 (mod (+ (ite (and (not (= (mod ~a29~0_-1 5) 0)) (< ~a29~0_-1 0)) (+ (div ~a29~0_-1 5) 1) (div ~a29~0_-1 5)) 1) 5))) (< (ite (and (not (= (mod ~a29~0_-1 5) 0)) (< ~a29~0_-1 0)) (+ (div ~a29~0_-1 5) 1) (div ~a29~0_-1 5)) 403019)) (+ (div (+ (ite (and (not (= (mod ~a29~0_-1 5) 0)) (< ~a29~0_-1 0)) (+ (div ~a29~0_-1 5) 1) (div ~a29~0_-1 5)) (- 403019)) 5) 1) (div (+ (ite (and (not (= (mod ~a29~0_-1 5) 0)) (< ~a29~0_-1 0)) (+ (div ~a29~0_-1 5) 1) (div ~a29~0_-1 5)) (- 403019)) 5))) (<= (+ ~a4~0_-1 86) 0) (= ~a2~0_62 1) (= (+ |calculate_output_#res_62| 1) 0) (or (and (<= (+ 144 ~a29~0_-1) 0) (= ~a2~0_-1 3)) (and (= ~a2~0_-1 2) (< 43 ~a29~0_-1)) (and (= ~a2~0_-1 2) (< 0 (+ 16 ~a29~0_-1)) (<= ~a29~0_-1 43))) (< 0 (+ ~a0~0_-1 61)) (= (+ 2 ~a0~0_62) (* 5 (ite (and (< (ite (and (not (= (mod ~a0~0_-1 299926) 0)) (< ~a0~0_-1 0)) (+ (mod ~a0~0_-1 299926) (- 299926)) (mod ~a0~0_-1 299926)) 300072) (not (= (mod (+ (ite (and (not (= (mod ~a0~0_-1 299926) 0)) (< ~a0~0_-1 0)) (+ (mod ~a0~0_-1 299926) (- 299926)) (mod ~a0~0_-1 299926)) 3) 5) 0))) (+ (div (+ (- 300072) (ite (and (not (= (mod ~a0~0_-1 299926) 0)) (< ~a0~0_-1 0)) (+ (mod ~a0~0_-1 299926) (- 299926)) (mod ~a0~0_-1 299926))) 5) 1) (div (+ (- 300072) (ite (and (not (= (mod ~a0~0_-1 299926) 0)) (< ~a0~0_-1 0)) (+ (mod ~a0~0_-1 299926) (- 299926)) (mod ~a0~0_-1 299926))) 5))))) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! (= |main_#t~ret9_64| |calculate_output_#res_62|) :named ssa_64_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (= main_~input~0_-2 |calculate_output_#in~input_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~a2~0_-2 |old(~a2~0)_-1|) (= ~a4~0_-2 |old(~a4~0)_-1|) (= |old(~a29~0)_-1| ~a29~0_-2) (= ~a0~0_-2 |old(~a0~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 ssa_19 ssa_20 ssa_21 ssa_22 ssa_23 ssa_24 ssa_25 ssa_26 ssa_27 ssa_28 ssa_29 ssa_30 ssa_31 ssa_32 ssa_33 ssa_34 ssa_35 ssa_36 ssa_37 ssa_38 ssa_39 ssa_40 ssa_41 ssa_42 ssa_43 ssa_44 ssa_45 ssa_46 ssa_47 ssa_48 ssa_49 ssa_50 ssa_51 ssa_52 ssa_53 ssa_54 ssa_55 ssa_56 ssa_57 ssa_58 ssa_59 ssa_60 ssa_61 ssa_62 ssa_63 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_64_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
