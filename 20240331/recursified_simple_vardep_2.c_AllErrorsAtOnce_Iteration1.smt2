(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:13:33+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id recursified_simple_vardep_2.c_AllErrorsAtOnce_Iteration1)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#3)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#3)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#3| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#3_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_write~init~int#3_#value| () Int)
(declare-fun |c_write~init~int#3_#value_primed| () Int)
(declare-fun |c_write~init~int#3_#ptr.base| () Int)
(declare-fun |c_write~init~int#3_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#3_#ptr.offset| () Int)
(declare-fun |c_write~init~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#3_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#3_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_read~int#3_#ptr.base| () Int)
(declare-fun |c_read~int#3_#ptr.base_primed| () Int)
(declare-fun |c_read~int#3_#ptr.offset| () Int)
(declare-fun |c_read~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#3_#sizeOfReadType| () Int)
(declare-fun |c_read~int#3_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#3_#value| () Int)
(declare-fun |c_read~int#3_#value_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_~#i~0.base| () Int)
(declare-fun |c_main_~#i~0.base_primed| () Int)
(declare-fun |c_main_~#i~0.offset| () Int)
(declare-fun |c_main_~#i~0.offset_primed| () Int)
(declare-fun |c_main_~#j~0.base| () Int)
(declare-fun |c_main_~#j~0.base_primed| () Int)
(declare-fun |c_main_~#j~0.offset| () Int)
(declare-fun |c_main_~#j~0.offset_primed| () Int)
(declare-fun |c_main_~#k~0.base| () Int)
(declare-fun |c_main_~#k~0.base_primed| () Int)
(declare-fun |c_main_~#k~0.offset| () Int)
(declare-fun |c_main_~#k~0.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#3_#value| () Int)
(declare-fun |c_write~int#3_#value_primed| () Int)
(declare-fun |c_write~int#3_#ptr.base| () Int)
(declare-fun |c_write~int#3_#ptr.base_primed| () Int)
(declare-fun |c_write~int#3_#ptr.offset| () Int)
(declare-fun |c_write~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#3_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#3_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret13| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret13_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~i.base| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~i.base_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~i.offset| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~i.offset_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~k.base| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~k.base_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~k.offset| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~k.offset_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~j.base| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~j.base_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~j.offset| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#in~j.offset_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem4| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem4_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem5| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem5_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem6| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem6_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem7| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem7_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem9| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem9_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem8| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem8_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem11| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem11_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem10| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~mem10_primed| () Int)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~short12| () Bool)
(declare-fun |c_func_to_recursive_line_20_to_24_0_#t~short12_primed| () Bool)
(declare-fun c_func_to_recursive_line_20_to_24_0_~i.base () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~i.base_primed () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~i.offset () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~i.offset_primed () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~k.base () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~k.base_primed () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~k.offset () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~k.offset_primed () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~j.base () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~j.base_primed () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~j.offset () Int)
(declare-fun c_func_to_recursive_line_20_to_24_0_~j.offset_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret13_3| () Int)
(declare-fun |c_aux_v_func_to_recursive_line_20_to_24_0_#t~mem8_3| () Int)
(declare-fun |c_aux_v_func_to_recursive_line_20_to_24_0_#t~mem9_3| () Int)
(declare-fun |c_aux_v_func_to_recursive_line_20_to_24_0_#t~mem10_3| () Int)
(declare-fun |c_aux_v_func_to_recursive_line_20_to_24_0_#t~mem11_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#2)_3| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#2_3| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_3| () (Array Int (Array Int Int)))
(declare-fun |main_~#k~0.offset_4| () Int)
(declare-fun |main_~#j~0.base_4| () Int)
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun |main_~#i~0.base_4| () Int)
(declare-fun |main_~#j~0.offset_4| () Int)
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |main_~#i~0.offset_4| () Int)
(declare-fun |main_~#k~0.base_4| () Int)
(declare-fun v_ArrVal_1_fresh_1 () Int)
(declare-fun v_ArrVal_4_fresh_1 () Int)
(declare-fun v_ArrVal_5_fresh_1 () Int)
(declare-fun v_ArrVal_2_fresh_1 () Int)
(declare-fun v_ArrVal_3_fresh_1 () Int)
(declare-fun v_ArrVal_6_fresh_1 () Int)
(declare-fun |old(#memory_int#2)_5| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_5| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_5| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#2_5| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_5| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_5| () (Array Int (Array Int Int)))
(declare-fun |func_to_recursive_line_20_to_24_0_#in~i.offset_5| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#in~k.offset_5| () Int)
(declare-fun |main_~#k~0.offset_5| () Int)
(declare-fun |main_~#j~0.base_5| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#in~i.base_5| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#in~k.base_5| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#in~j.base_5| () Int)
(declare-fun |main_~#i~0.base_5| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#in~j.offset_5| () Int)
(declare-fun |main_~#j~0.offset_5| () Int)
(declare-fun |main_~#i~0.offset_5| () Int)
(declare-fun |main_~#k~0.base_5| () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~k.base_6 () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~mem4_6| () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~i.offset_6 () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~i.base_6 () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~k.offset_6 () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~j.base_6 () Int)
(declare-fun func_to_recursive_line_20_to_24_0_~j.offset_6 () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~mem7_7| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~mem6_7| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~mem5_7| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~mem4_7| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~short12_7| () Bool)
(declare-fun |#memory_int#2_7| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_7| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_7| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_7_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_12_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_8_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_9_fresh_1 () Int)
(declare-fun v_ArrVal_10_fresh_1 () Int)
(declare-fun v_ArrVal_11_fresh_1 () Int)
(declare-fun |v_func_to_recursive_line_20_to_24_0_#t~mem9_4_fresh_1| () Int)
(declare-fun |v_func_to_recursive_line_20_to_24_0_#t~mem8_4_fresh_1| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~short12_8| () Bool)
(declare-fun |v_func_to_recursive_line_20_to_24_0_#t~mem11_4_fresh_1| () Int)
(declare-fun |v_func_to_recursive_line_20_to_24_0_#t~mem10_4_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_9| () Int)
(declare-fun |func_to_recursive_line_20_to_24_0_#t~short12_9| () Bool)
(declare-fun __VERIFIER_assert_~cond_10 () Int)
(declare-fun __VERIFIER_assert_~cond_11 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#length_-1| 2) 18) (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-1| 3) 12) (= (select |#valid_-1| 0) 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#length_-1| 1) 2)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |old(#memory_int#3)_3| |#memory_int#3_3|) (= |old(#memory_int#2)_3| |#memory_int#2_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#2)_3| |#memory_int#2_-1|) (= |old(#memory_int#3)_3| |#memory_int#3_-1|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= 4 v_ArrVal_1_fresh_1) (not (= |main_~#k~0.base_4| 0)) (< |#StackHeapBarrier_-1| |main_~#k~0.base_4|) (= |#length_4| (store (store (store |#length_3| |main_~#i~0.base_4| v_ArrVal_2_fresh_1) |main_~#j~0.base_4| v_ArrVal_4_fresh_1) |main_~#k~0.base_4| v_ArrVal_1_fresh_1)) (= (select (select |#memory_int#2_3| |main_~#j~0.base_4|) |main_~#j~0.offset_4|) 0) (= 4 v_ArrVal_4_fresh_1) (= (select (store |#valid_3| |main_~#i~0.base_4| v_ArrVal_5_fresh_1) |main_~#j~0.base_4|) 0) (= (select |#valid_3| |main_~#i~0.base_4|) 0) (= |main_~#i~0.offset_4| 0) (= v_ArrVal_3_fresh_1 1) (= (select (select |#memory_int#3_3| |main_~#i~0.base_4|) |main_~#i~0.offset_4|) 0) (= |main_~#k~0.offset_4| 0) (not (= |main_~#i~0.base_4| 0)) (= (store (store (store |#valid_3| |main_~#i~0.base_4| v_ArrVal_5_fresh_1) |main_~#j~0.base_4| v_ArrVal_6_fresh_1) |main_~#k~0.base_4| v_ArrVal_3_fresh_1) |#valid_4|) (= (select (store (store |#valid_3| |main_~#i~0.base_4| v_ArrVal_5_fresh_1) |main_~#j~0.base_4| v_ArrVal_6_fresh_1) |main_~#k~0.base_4|) 0) (not (= |main_~#j~0.base_4| 0)) (= 4 v_ArrVal_2_fresh_1) (= v_ArrVal_5_fresh_1 1) (< |#StackHeapBarrier_-1| |main_~#i~0.base_4|) (= (select (select |#memory_int#1_3| |main_~#k~0.base_4|) |main_~#k~0.offset_4|) 0) (= v_ArrVal_6_fresh_1 1) (= |main_~#j~0.offset_4| 0) (< |#StackHeapBarrier_-1| |main_~#j~0.base_4|)) :named ssa_4))
(assert (! (and (= |old(#memory_int#3)_5| |#memory_int#3_5|) (= |old(#memory_int#2)_5| |#memory_int#2_5|) (= |old(#memory_int#1)_5| |#memory_int#1_5|)) :named ssa_5_GlobVarAssigCall))
(assert (! (and (= |main_~#j~0.offset_4| |func_to_recursive_line_20_to_24_0_#in~j.offset_5|) (= |main_~#i~0.base_4| |func_to_recursive_line_20_to_24_0_#in~i.base_5|) (= |main_~#j~0.base_4| |func_to_recursive_line_20_to_24_0_#in~j.base_5|) (= |func_to_recursive_line_20_to_24_0_#in~k.base_5| |main_~#k~0.base_4|) (= |main_~#k~0.offset_4| |func_to_recursive_line_20_to_24_0_#in~k.offset_5|) (= |func_to_recursive_line_20_to_24_0_#in~i.offset_5| |main_~#i~0.offset_4|)) :named ssa_5_LocVarAssigCall))
(assert (! (and (= |old(#memory_int#2)_5| |#memory_int#2_3|) (= |old(#memory_int#3)_5| |#memory_int#3_3|) (= |old(#memory_int#1)_5| |#memory_int#1_3|)) :named ssa_5_OldVarAssigCall))
(assert (! (and (= |func_to_recursive_line_20_to_24_0_#t~mem4_6| (select (select |#memory_int#1_5| func_to_recursive_line_20_to_24_0_~k.base_6) func_to_recursive_line_20_to_24_0_~k.offset_6)) (= |func_to_recursive_line_20_to_24_0_#in~k.offset_5| func_to_recursive_line_20_to_24_0_~k.offset_6) (= |func_to_recursive_line_20_to_24_0_#in~i.base_5| func_to_recursive_line_20_to_24_0_~i.base_6) (= |func_to_recursive_line_20_to_24_0_#in~i.offset_5| func_to_recursive_line_20_to_24_0_~i.offset_6) (= |func_to_recursive_line_20_to_24_0_#in~j.offset_5| func_to_recursive_line_20_to_24_0_~j.offset_6) (= func_to_recursive_line_20_to_24_0_~j.base_6 |func_to_recursive_line_20_to_24_0_#in~j.base_5|) (= func_to_recursive_line_20_to_24_0_~k.base_6 |func_to_recursive_line_20_to_24_0_#in~k.base_5|)) :named ssa_6))
(assert (! (and (= (store |#memory_int#1_5| func_to_recursive_line_20_to_24_0_~k.base_6 v_ArrVal_12_fresh_1) |#memory_int#1_7|) (= (store |#memory_int#3_5| func_to_recursive_line_20_to_24_0_~i.base_6 v_ArrVal_8_fresh_1) |#memory_int#3_7|) (= v_ArrVal_12_fresh_1 (store (select |#memory_int#1_5| func_to_recursive_line_20_to_24_0_~k.base_6) func_to_recursive_line_20_to_24_0_~k.offset_6 v_ArrVal_10_fresh_1)) (< (mod |func_to_recursive_line_20_to_24_0_#t~mem4_6| 4294967296) 268435455) (= (+ (select (select |#memory_int#1_5| func_to_recursive_line_20_to_24_0_~k.base_6) func_to_recursive_line_20_to_24_0_~k.offset_6) 3) v_ArrVal_10_fresh_1) (= (+ (select (select |#memory_int#3_5| func_to_recursive_line_20_to_24_0_~i.base_6) func_to_recursive_line_20_to_24_0_~i.offset_6) 1) v_ArrVal_9_fresh_1) (= v_ArrVal_7_fresh_1 (store (select |#memory_int#2_5| func_to_recursive_line_20_to_24_0_~j.base_6) func_to_recursive_line_20_to_24_0_~j.offset_6 (+ (select (select |#memory_int#2_5| func_to_recursive_line_20_to_24_0_~j.base_6) func_to_recursive_line_20_to_24_0_~j.offset_6) 2))) (= |v_func_to_recursive_line_20_to_24_0_#t~mem9_4_fresh_1| (select (select |#memory_int#1_7| func_to_recursive_line_20_to_24_0_~k.base_6) func_to_recursive_line_20_to_24_0_~k.offset_6)) (= |v_func_to_recursive_line_20_to_24_0_#t~mem8_4_fresh_1| (select (select |#memory_int#3_7| func_to_recursive_line_20_to_24_0_~i.base_6) func_to_recursive_line_20_to_24_0_~i.offset_6)) (= (+ (select (select |#memory_int#2_5| func_to_recursive_line_20_to_24_0_~j.base_6) func_to_recursive_line_20_to_24_0_~j.offset_6) 2) v_ArrVal_11_fresh_1) (or (and (not (= (mod (* |v_func_to_recursive_line_20_to_24_0_#t~mem8_4_fresh_1| 3) 4294967296) (mod |v_func_to_recursive_line_20_to_24_0_#t~mem9_4_fresh_1| 4294967296))) (not |func_to_recursive_line_20_to_24_0_#t~short12_7|)) (and (= (mod (* |v_func_to_recursive_line_20_to_24_0_#t~mem8_4_fresh_1| 3) 4294967296) (mod |v_func_to_recursive_line_20_to_24_0_#t~mem9_4_fresh_1| 4294967296)) |func_to_recursive_line_20_to_24_0_#t~short12_7|)) (= v_ArrVal_8_fresh_1 (store (select |#memory_int#3_5| func_to_recursive_line_20_to_24_0_~i.base_6) func_to_recursive_line_20_to_24_0_~i.offset_6 (+ (select (select |#memory_int#3_5| func_to_recursive_line_20_to_24_0_~i.base_6) func_to_recursive_line_20_to_24_0_~i.offset_6) 1))) (= |#memory_int#2_7| (store |#memory_int#2_5| func_to_recursive_line_20_to_24_0_~j.base_6 v_ArrVal_7_fresh_1))) :named ssa_7))
(assert (! (and |func_to_recursive_line_20_to_24_0_#t~short12_7| (or (and (not (= (mod |v_func_to_recursive_line_20_to_24_0_#t~mem11_4_fresh_1| 4294967296) (* (mod |v_func_to_recursive_line_20_to_24_0_#t~mem10_4_fresh_1| 2147483648) 2))) (not |func_to_recursive_line_20_to_24_0_#t~short12_8|)) (and (= (mod |v_func_to_recursive_line_20_to_24_0_#t~mem11_4_fresh_1| 4294967296) (* (mod |v_func_to_recursive_line_20_to_24_0_#t~mem10_4_fresh_1| 2147483648) 2)) |func_to_recursive_line_20_to_24_0_#t~short12_8|)) (= |v_func_to_recursive_line_20_to_24_0_#t~mem10_4_fresh_1| (select (select |#memory_int#3_7| func_to_recursive_line_20_to_24_0_~i.base_6) func_to_recursive_line_20_to_24_0_~i.offset_6)) (= |v_func_to_recursive_line_20_to_24_0_#t~mem11_4_fresh_1| (select (select |#memory_int#2_7| func_to_recursive_line_20_to_24_0_~j.base_6) func_to_recursive_line_20_to_24_0_~j.offset_6))) :named ssa_8))
(assert (! true :named ssa_9_GlobVarAssigCall))
(assert (! (= (ite |func_to_recursive_line_20_to_24_0_#t~short12_8| 1 0) |__VERIFIER_assert_#in~cond_9|) :named ssa_9_LocVarAssigCall))
(assert (! true :named ssa_9_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_10 |__VERIFIER_assert_#in~cond_9|) :named ssa_10))
(assert (! (= __VERIFIER_assert_~cond_10 0) :named ssa_11))
(assert (! true :named ssa_12))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_5_OldVarAssigCall) ssa_6 ssa_7 ssa_8 (and ssa_9_LocVarAssigCall ssa_9_OldVarAssigCall ssa_9_GlobVarAssigCall) ssa_10 ssa_11 (and ssa_12 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#length_-2| 2) 18) (= (select |#valid_-2| 1) 1) (= (select |#valid_-2| 2) 1) (= (select |#valid_-2| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#length_-2| 3) 12) (= (select |#valid_-2| 0) 0) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select (select |#memory_int#0_-2| 1) 0) 48) (= (select |#length_-2| 1) 2)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
