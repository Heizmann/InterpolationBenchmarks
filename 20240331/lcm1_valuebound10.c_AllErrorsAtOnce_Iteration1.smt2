(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:12:12+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id lcm1_valuebound10.c_AllErrorsAtOnce_Iteration1)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res| () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~nondet5| () Int)
(declare-fun |c_main_#t~nondet5_primed| () Int)
(declare-fun c_main_~a~0 () Int)
(declare-fun c_main_~a~0_primed () Int)
(declare-fun c_main_~b~0 () Int)
(declare-fun c_main_~b~0_primed () Int)
(declare-fun c_main_~x~0 () Int)
(declare-fun c_main_~x~0_primed () Int)
(declare-fun c_main_~y~0 () Int)
(declare-fun c_main_~y~0_primed () Int)
(declare-fun c_main_~u~0 () Int)
(declare-fun c_main_~u~0_primed () Int)
(declare-fun c_main_~v~0 () Int)
(declare-fun c_main_~v~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret6| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret6_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret6_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun main_~v~0_4 () Int)
(declare-fun main_~x~0_4 () Int)
(declare-fun main_~y~0_4 () Int)
(declare-fun main_~b~0_4 () Int)
(declare-fun main_~u~0_4 () Int)
(declare-fun main_~a~0_4 () Int)
(declare-fun |assume_abort_if_not_#in~cond_5| () Int)
(declare-fun main_~a~0_5 () Int)
(declare-fun assume_abort_if_not_~cond_6 () Int)
(declare-fun |main_#t~nondet5_10| () Int)
(declare-fun main_~b~0_10 () Int)
(declare-fun main_~b~0_11 () Int)
(declare-fun |assume_abort_if_not_#in~cond_11| () Int)
(declare-fun assume_abort_if_not_~cond_12 () Int)
(declare-fun |assume_abort_if_not_#in~cond_16| () Int)
(declare-fun main_~a~0_16 () Int)
(declare-fun assume_abort_if_not_~cond_17 () Int)
(declare-fun main_~b~0_21 () Int)
(declare-fun |assume_abort_if_not_#in~cond_21| () Int)
(declare-fun assume_abort_if_not_~cond_22 () Int)
(declare-fun |assume_abort_if_not_#in~cond_26| () Int)
(declare-fun main_~a~0_26 () Int)
(declare-fun assume_abort_if_not_~cond_27 () Int)
(declare-fun main_~b~0_31 () Int)
(declare-fun |assume_abort_if_not_#in~cond_31| () Int)
(declare-fun assume_abort_if_not_~cond_32 () Int)
(declare-fun main_~v~0_36 () Int)
(declare-fun main_~x~0_36 () Int)
(declare-fun main_~y~0_36 () Int)
(declare-fun main_~u~0_36 () Int)
(declare-fun |__VERIFIER_assert_#in~cond_38| () Int)
(declare-fun main_~v~0_38 () Int)
(declare-fun main_~y~0_38 () Int)
(declare-fun main_~b~0_38 () Int)
(declare-fun main_~u~0_38 () Int)
(declare-fun main_~a~0_38 () Int)
(declare-fun __VERIFIER_assert_~cond_39 () Int)
(declare-fun __VERIFIER_assert_~cond_40 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 7 (select |#length_-1| 2)) (= (select (select |#memory_int#1_-1| 2) 2) 109) (= 12 (select |#length_-1| 3)) (= (select (select |#memory_int#1_-1| 2) 1) 99) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select (select |#memory_int#1_-1| 2) 5) 99) (= (select (select |#memory_int#1_-1| 2) 6) 0) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#1_-1| 2) 4) 46) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= 49 (select (select |#memory_int#1_-1| 2) 3)) (= (select |#valid_-1| 0) 0) (= 108 (select (select |#memory_int#1_-1| 2) 0))) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! true :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= (ite (<= (mod main_~a~0_4 4294967296) 10) 1 0) |assume_abort_if_not_#in~cond_5|) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_5| assume_abort_if_not_~cond_6) :named ssa_6))
(assert (! false :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! true :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_11| (ite (<= (mod main_~b~0_10 4294967296) 10) 1 0)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_11| assume_abort_if_not_~cond_12) :named ssa_12))
(assert (! false :named ssa_13))
(assert (! true :named ssa_14))
(assert (! true :named ssa_15_return))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_16| (ite (<= 1 (mod main_~a~0_4 4294967296)) 1 0)) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_16| assume_abort_if_not_~cond_17) :named ssa_17))
(assert (! false :named ssa_18))
(assert (! true :named ssa_19))
(assert (! true :named ssa_20_return))
(assert (! true :named ssa_21_GlobVarAssigCall))
(assert (! (= (ite (<= 1 (mod main_~b~0_10 4294967296)) 1 0) |assume_abort_if_not_#in~cond_21|) :named ssa_21_LocVarAssigCall))
(assert (! true :named ssa_21_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_21| assume_abort_if_not_~cond_22) :named ssa_22))
(assert (! false :named ssa_23))
(assert (! true :named ssa_24))
(assert (! true :named ssa_25_return))
(assert (! true :named ssa_26_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_26| (ite (<= (mod main_~a~0_4 4294967296) 65535) 1 0)) :named ssa_26_LocVarAssigCall))
(assert (! true :named ssa_26_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_26| assume_abort_if_not_~cond_27) :named ssa_27))
(assert (! false :named ssa_28))
(assert (! true :named ssa_29))
(assert (! true :named ssa_30_return))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_31| (ite (<= (mod main_~b~0_10 4294967296) 65535) 1 0)) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_31| assume_abort_if_not_~cond_32) :named ssa_32))
(assert (! false :named ssa_33))
(assert (! true :named ssa_34))
(assert (! true :named ssa_35_return))
(assert (! (and (= main_~b~0_10 main_~u~0_36) (= main_~b~0_10 main_~y~0_36) (= main_~a~0_4 main_~x~0_36) (= main_~v~0_36 0)) :named ssa_36))
(assert (! false :named ssa_37))
(assert (! true :named ssa_38_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_38| (ite (= (mod (+ (* main_~v~0_36 main_~y~0_36) (* main_~u~0_36 main_~y~0_36)) 4294967296) (mod (* main_~a~0_4 main_~b~0_10) 4294967296)) 1 0)) :named ssa_38_LocVarAssigCall))
(assert (! true :named ssa_38_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_39 |__VERIFIER_assert_#in~cond_38|) :named ssa_39))
(assert (! (= __VERIFIER_assert_~cond_39 0) :named ssa_40))
(assert (! true :named ssa_41))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_6 ssa_8 ssa_5_OldVarAssigCall ssa_9_return) ssa_10 (and ssa_13 ssa_11_LocVarAssigCall ssa_14 ssa_12 ssa_11_OldVarAssigCall ssa_11_GlobVarAssigCall ssa_15_return) (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) (and ssa_25_return ssa_21_LocVarAssigCall ssa_21_OldVarAssigCall ssa_22 ssa_23 ssa_21_GlobVarAssigCall ssa_24) (and ssa_27 ssa_26_GlobVarAssigCall ssa_26_LocVarAssigCall ssa_28 ssa_29 ssa_30_return ssa_26_OldVarAssigCall) (and ssa_31_LocVarAssigCall ssa_34 ssa_31_OldVarAssigCall ssa_32 ssa_31_GlobVarAssigCall ssa_35_return ssa_33) ssa_36 ssa_37 (and ssa_38_OldVarAssigCall ssa_38_LocVarAssigCall ssa_38_GlobVarAssigCall) ssa_39 ssa_40 (and ssa_postcond ssa_41))
(exit)
