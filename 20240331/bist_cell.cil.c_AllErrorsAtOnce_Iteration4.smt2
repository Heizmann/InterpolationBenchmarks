(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:17:36+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id bist_cell.cil.c_AllErrorsAtOnce_Iteration4)
(declare-fun |c_old(~b0_val~0)| () Int)
(declare-fun |c_old(~b0_val~0)_primed| () Int)
(declare-fun c_~b0_val~0 () Int)
(declare-fun c_~b0_val~0_primed () Int)
(declare-fun |c_old(~b0_val_t~0)| () Int)
(declare-fun |c_old(~b0_val_t~0)_primed| () Int)
(declare-fun c_~b0_val_t~0 () Int)
(declare-fun c_~b0_val_t~0_primed () Int)
(declare-fun |c_old(~b0_ev~0)| () Int)
(declare-fun |c_old(~b0_ev~0)_primed| () Int)
(declare-fun c_~b0_ev~0 () Int)
(declare-fun c_~b0_ev~0_primed () Int)
(declare-fun |c_old(~b0_req_up~0)| () Int)
(declare-fun |c_old(~b0_req_up~0)_primed| () Int)
(declare-fun c_~b0_req_up~0 () Int)
(declare-fun c_~b0_req_up~0_primed () Int)
(declare-fun |c_old(~b1_val~0)| () Int)
(declare-fun |c_old(~b1_val~0)_primed| () Int)
(declare-fun c_~b1_val~0 () Int)
(declare-fun c_~b1_val~0_primed () Int)
(declare-fun |c_old(~b1_val_t~0)| () Int)
(declare-fun |c_old(~b1_val_t~0)_primed| () Int)
(declare-fun c_~b1_val_t~0 () Int)
(declare-fun c_~b1_val_t~0_primed () Int)
(declare-fun |c_old(~b1_ev~0)| () Int)
(declare-fun |c_old(~b1_ev~0)_primed| () Int)
(declare-fun c_~b1_ev~0 () Int)
(declare-fun c_~b1_ev~0_primed () Int)
(declare-fun |c_old(~b1_req_up~0)| () Int)
(declare-fun |c_old(~b1_req_up~0)_primed| () Int)
(declare-fun c_~b1_req_up~0 () Int)
(declare-fun c_~b1_req_up~0_primed () Int)
(declare-fun |c_old(~d0_val~0)| () Int)
(declare-fun |c_old(~d0_val~0)_primed| () Int)
(declare-fun c_~d0_val~0 () Int)
(declare-fun c_~d0_val~0_primed () Int)
(declare-fun |c_old(~d0_val_t~0)| () Int)
(declare-fun |c_old(~d0_val_t~0)_primed| () Int)
(declare-fun c_~d0_val_t~0 () Int)
(declare-fun c_~d0_val_t~0_primed () Int)
(declare-fun |c_old(~d0_ev~0)| () Int)
(declare-fun |c_old(~d0_ev~0)_primed| () Int)
(declare-fun c_~d0_ev~0 () Int)
(declare-fun c_~d0_ev~0_primed () Int)
(declare-fun |c_old(~d0_req_up~0)| () Int)
(declare-fun |c_old(~d0_req_up~0)_primed| () Int)
(declare-fun c_~d0_req_up~0 () Int)
(declare-fun c_~d0_req_up~0_primed () Int)
(declare-fun |c_old(~d1_val~0)| () Int)
(declare-fun |c_old(~d1_val~0)_primed| () Int)
(declare-fun c_~d1_val~0 () Int)
(declare-fun c_~d1_val~0_primed () Int)
(declare-fun |c_old(~d1_val_t~0)| () Int)
(declare-fun |c_old(~d1_val_t~0)_primed| () Int)
(declare-fun c_~d1_val_t~0 () Int)
(declare-fun c_~d1_val_t~0_primed () Int)
(declare-fun |c_old(~d1_ev~0)| () Int)
(declare-fun |c_old(~d1_ev~0)_primed| () Int)
(declare-fun c_~d1_ev~0 () Int)
(declare-fun c_~d1_ev~0_primed () Int)
(declare-fun |c_old(~d1_req_up~0)| () Int)
(declare-fun |c_old(~d1_req_up~0)_primed| () Int)
(declare-fun c_~d1_req_up~0 () Int)
(declare-fun c_~d1_req_up~0_primed () Int)
(declare-fun |c_old(~z_val~0)| () Int)
(declare-fun |c_old(~z_val~0)_primed| () Int)
(declare-fun c_~z_val~0 () Int)
(declare-fun c_~z_val~0_primed () Int)
(declare-fun |c_old(~z_val_t~0)| () Int)
(declare-fun |c_old(~z_val_t~0)_primed| () Int)
(declare-fun c_~z_val_t~0 () Int)
(declare-fun c_~z_val_t~0_primed () Int)
(declare-fun |c_old(~z_ev~0)| () Int)
(declare-fun |c_old(~z_ev~0)_primed| () Int)
(declare-fun c_~z_ev~0 () Int)
(declare-fun c_~z_ev~0_primed () Int)
(declare-fun |c_old(~z_req_up~0)| () Int)
(declare-fun |c_old(~z_req_up~0)_primed| () Int)
(declare-fun c_~z_req_up~0 () Int)
(declare-fun c_~z_req_up~0_primed () Int)
(declare-fun |c_old(~comp_m1_st~0)| () Int)
(declare-fun |c_old(~comp_m1_st~0)_primed| () Int)
(declare-fun c_~comp_m1_st~0 () Int)
(declare-fun c_~comp_m1_st~0_primed () Int)
(declare-fun |c_old(~comp_m1_i~0)| () Int)
(declare-fun |c_old(~comp_m1_i~0)_primed| () Int)
(declare-fun c_~comp_m1_i~0 () Int)
(declare-fun c_~comp_m1_i~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun c_method1_~s1~0 () Int)
(declare-fun c_method1_~s1~0_primed () Int)
(declare-fun c_method1_~s2~0 () Int)
(declare-fun c_method1_~s2~0_primed () Int)
(declare-fun c_method1_~s3~0 () Int)
(declare-fun c_method1_~s3~0_primed () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun c_main_~__retres1~2 () Int)
(declare-fun c_main_~__retres1~2_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_stop_simulation_#res| () Int)
(declare-fun |c_stop_simulation_#res_primed| () Int)
(declare-fun |c_stop_simulation_#t~ret7| () Int)
(declare-fun |c_stop_simulation_#t~ret7_primed| () Int)
(declare-fun c_stop_simulation_~tmp~2 () Int)
(declare-fun c_stop_simulation_~tmp~2_primed () Int)
(declare-fun c_stop_simulation_~__retres2~0 () Int)
(declare-fun c_stop_simulation_~__retres2~0_primed () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_activate_threads_#t~ret6| () Int)
(declare-fun |c_activate_threads_#t~ret6_primed| () Int)
(declare-fun c_activate_threads_~tmp~1 () Int)
(declare-fun c_activate_threads_~tmp~1_primed () Int)
(declare-fun |c_exists_runnable_thread_#res| () Int)
(declare-fun |c_exists_runnable_thread_#res_primed| () Int)
(declare-fun c_exists_runnable_thread_~__retres1~1 () Int)
(declare-fun c_exists_runnable_thread_~__retres1~1_primed () Int)
(declare-fun |c_eval_#t~ret4| () Int)
(declare-fun |c_eval_#t~ret4_primed| () Int)
(declare-fun |c_eval_#t~nondet5| () Int)
(declare-fun |c_eval_#t~nondet5_primed| () Int)
(declare-fun c_eval_~tmp~0 () Int)
(declare-fun c_eval_~tmp~0_primed () Int)
(declare-fun c_eval_~tmp___0~0 () Int)
(declare-fun c_eval_~tmp___0~0_primed () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_is_method1_triggered_#res| () Int)
(declare-fun |c_is_method1_triggered_#res_primed| () Int)
(declare-fun c_is_method1_triggered_~__retres1~0 () Int)
(declare-fun c_is_method1_triggered_~__retres1~0_primed () Int)
(declare-fun |c_start_simulation_#t~ret8| () Int)
(declare-fun |c_start_simulation_#t~ret8_primed| () Int)
(declare-fun c_start_simulation_~kernel_st~0 () Int)
(declare-fun c_start_simulation_~kernel_st~0_primed () Int)
(declare-fun c_start_simulation_~tmp~3 () Int)
(declare-fun c_start_simulation_~tmp~3_primed () Int)
(declare-fun |c_ULTIMATE.start_#t~ret9| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret9_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~__retres1~2_3 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_6 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_7 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_8 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_9 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret9_3| () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_12 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_13 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_14 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_15 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_16 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_17 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_18 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_19 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_20 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_21 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_22 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_23 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_24 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_25 () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~z_val_t~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val_t~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val_t~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_val_t~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~d0_val_t~0_-1 () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun ~comp_m1_i~0_-1 () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~z_val_t~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val_t~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val_t~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_val_t~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun |old(~d0_val_t~0)_-1| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun |old(~comp_m1_i~0)_-1| () Int)
(declare-fun |old(~z_val~0)_0| () Int)
(declare-fun |old(~z_val_t~0)_0| () Int)
(declare-fun |old(~d1_req_up~0)_0| () Int)
(declare-fun |old(~b0_val_t~0)_0| () Int)
(declare-fun |old(~b0_val~0)_0| () Int)
(declare-fun |old(~b1_val~0)_0| () Int)
(declare-fun |old(~d0_req_up~0)_0| () Int)
(declare-fun |old(~d0_val~0)_0| () Int)
(declare-fun |old(~z_req_up~0)_0| () Int)
(declare-fun |old(~d1_val_t~0)_0| () Int)
(declare-fun |old(~d1_val~0)_0| () Int)
(declare-fun |old(~d1_ev~0)_0| () Int)
(declare-fun |old(~b0_req_up~0)_0| () Int)
(declare-fun |old(~z_ev~0)_0| () Int)
(declare-fun |old(~b1_req_up~0)_0| () Int)
(declare-fun |old(~b1_val_t~0)_0| () Int)
(declare-fun |old(~b1_ev~0)_0| () Int)
(declare-fun |old(~d0_ev~0)_0| () Int)
(declare-fun |old(~b0_ev~0)_0| () Int)
(declare-fun |old(~d0_val_t~0)_0| () Int)
(declare-fun |old(~comp_m1_st~0)_0| () Int)
(declare-fun |old(~comp_m1_i~0)_0| () Int)
(declare-fun ~z_val~0_0 () Int)
(declare-fun ~z_val_t~0_0 () Int)
(declare-fun ~d1_req_up~0_0 () Int)
(declare-fun ~b0_val_t~0_0 () Int)
(declare-fun ~b0_val~0_0 () Int)
(declare-fun ~b1_val~0_0 () Int)
(declare-fun ~d0_req_up~0_0 () Int)
(declare-fun ~d0_val~0_0 () Int)
(declare-fun ~z_req_up~0_0 () Int)
(declare-fun ~d1_val_t~0_0 () Int)
(declare-fun ~d1_val~0_0 () Int)
(declare-fun ~d1_ev~0_0 () Int)
(declare-fun ~b0_req_up~0_0 () Int)
(declare-fun ~z_ev~0_0 () Int)
(declare-fun ~b1_req_up~0_0 () Int)
(declare-fun ~b1_val_t~0_0 () Int)
(declare-fun ~b1_ev~0_0 () Int)
(declare-fun ~d0_ev~0_0 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~d0_val_t~0_0 () Int)
(declare-fun ~comp_m1_st~0_0 () Int)
(declare-fun ~comp_m1_i~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~z_val~0_1 () Int)
(declare-fun ~z_val_t~0_1 () Int)
(declare-fun ~d1_req_up~0_1 () Int)
(declare-fun ~b0_val_t~0_1 () Int)
(declare-fun ~b1_val~0_1 () Int)
(declare-fun ~b0_val~0_1 () Int)
(declare-fun ~d0_req_up~0_1 () Int)
(declare-fun ~d0_val~0_1 () Int)
(declare-fun ~z_req_up~0_1 () Int)
(declare-fun ~d1_val_t~0_1 () Int)
(declare-fun ~d1_ev~0_1 () Int)
(declare-fun ~d1_val~0_1 () Int)
(declare-fun ~b0_req_up~0_1 () Int)
(declare-fun ~z_ev~0_1 () Int)
(declare-fun ~b1_req_up~0_1 () Int)
(declare-fun ~b1_val_t~0_1 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d0_ev~0_1 () Int)
(declare-fun ~b0_ev~0_1 () Int)
(declare-fun ~d0_val_t~0_1 () Int)
(declare-fun ~comp_m1_st~0_1 () Int)
(declare-fun ~comp_m1_i~0_1 () Int)
(declare-fun |old(~z_val~0)_3| () Int)
(declare-fun |old(~z_val_t~0)_3| () Int)
(declare-fun |old(~d1_req_up~0)_3| () Int)
(declare-fun |old(~b0_val_t~0)_3| () Int)
(declare-fun |old(~b0_val~0)_3| () Int)
(declare-fun |old(~b1_val~0)_3| () Int)
(declare-fun |old(~d0_req_up~0)_3| () Int)
(declare-fun |old(~d0_val~0)_3| () Int)
(declare-fun |old(~z_req_up~0)_3| () Int)
(declare-fun |old(~d1_val_t~0)_3| () Int)
(declare-fun |old(~d1_val~0)_3| () Int)
(declare-fun |old(~d1_ev~0)_3| () Int)
(declare-fun |old(~b0_req_up~0)_3| () Int)
(declare-fun |old(~z_ev~0)_3| () Int)
(declare-fun |old(~b1_req_up~0)_3| () Int)
(declare-fun |old(~b1_val_t~0)_3| () Int)
(declare-fun |old(~b1_ev~0)_3| () Int)
(declare-fun |old(~d0_ev~0)_3| () Int)
(declare-fun |old(~b0_ev~0)_3| () Int)
(declare-fun |old(~d0_val_t~0)_3| () Int)
(declare-fun |old(~comp_m1_st~0)_3| () Int)
(declare-fun |old(~comp_m1_i~0)_3| () Int)
(declare-fun ~z_val~0_3 () Int)
(declare-fun ~z_val_t~0_3 () Int)
(declare-fun ~d1_req_up~0_3 () Int)
(declare-fun ~b0_val_t~0_3 () Int)
(declare-fun ~b0_val~0_3 () Int)
(declare-fun ~b1_val~0_3 () Int)
(declare-fun ~d0_req_up~0_3 () Int)
(declare-fun ~d0_val~0_3 () Int)
(declare-fun ~z_req_up~0_3 () Int)
(declare-fun ~d1_val_t~0_3 () Int)
(declare-fun ~d1_val~0_3 () Int)
(declare-fun ~d1_ev~0_3 () Int)
(declare-fun ~b0_req_up~0_3 () Int)
(declare-fun ~z_ev~0_3 () Int)
(declare-fun ~b1_req_up~0_3 () Int)
(declare-fun ~b1_val_t~0_3 () Int)
(declare-fun ~b1_ev~0_3 () Int)
(declare-fun ~d0_ev~0_3 () Int)
(declare-fun ~b0_ev~0_3 () Int)
(declare-fun ~d0_val_t~0_3 () Int)
(declare-fun ~comp_m1_st~0_3 () Int)
(declare-fun ~comp_m1_i~0_3 () Int)
(declare-fun main_~__retres1~2_4 () Int)
(declare-fun |old(~z_val~0)_5| () Int)
(declare-fun |old(~d1_req_up~0)_5| () Int)
(declare-fun |old(~b0_val_t~0)_5| () Int)
(declare-fun |old(~b0_val~0)_5| () Int)
(declare-fun |old(~b1_val~0)_5| () Int)
(declare-fun |old(~d0_req_up~0)_5| () Int)
(declare-fun |old(~d0_val~0)_5| () Int)
(declare-fun |old(~z_req_up~0)_5| () Int)
(declare-fun |old(~d1_val_t~0)_5| () Int)
(declare-fun |old(~d1_val~0)_5| () Int)
(declare-fun |old(~d1_ev~0)_5| () Int)
(declare-fun |old(~b0_req_up~0)_5| () Int)
(declare-fun |old(~z_ev~0)_5| () Int)
(declare-fun |old(~b1_req_up~0)_5| () Int)
(declare-fun |old(~b1_val_t~0)_5| () Int)
(declare-fun |old(~b1_ev~0)_5| () Int)
(declare-fun |old(~d0_ev~0)_5| () Int)
(declare-fun |old(~b0_ev~0)_5| () Int)
(declare-fun |old(~d0_val_t~0)_5| () Int)
(declare-fun |old(~comp_m1_i~0)_5| () Int)
(declare-fun ~z_val~0_5 () Int)
(declare-fun ~d1_req_up~0_5 () Int)
(declare-fun ~b0_val_t~0_5 () Int)
(declare-fun ~b0_val~0_5 () Int)
(declare-fun ~b1_val~0_5 () Int)
(declare-fun ~d0_req_up~0_5 () Int)
(declare-fun ~d0_val~0_5 () Int)
(declare-fun ~z_req_up~0_5 () Int)
(declare-fun ~d1_val_t~0_5 () Int)
(declare-fun ~d1_val~0_5 () Int)
(declare-fun ~d1_ev~0_5 () Int)
(declare-fun ~b0_req_up~0_5 () Int)
(declare-fun ~z_ev~0_5 () Int)
(declare-fun ~b1_req_up~0_5 () Int)
(declare-fun ~b1_val_t~0_5 () Int)
(declare-fun ~b1_ev~0_5 () Int)
(declare-fun ~d0_ev~0_5 () Int)
(declare-fun ~b0_ev~0_5 () Int)
(declare-fun ~d0_val_t~0_5 () Int)
(declare-fun ~comp_m1_i~0_5 () Int)
(declare-fun ~z_val~0_6 () Int)
(declare-fun ~d1_req_up~0_6 () Int)
(declare-fun ~b0_val_t~0_6 () Int)
(declare-fun ~b1_val~0_6 () Int)
(declare-fun ~b0_val~0_6 () Int)
(declare-fun ~d0_req_up~0_6 () Int)
(declare-fun ~d0_val~0_6 () Int)
(declare-fun ~z_req_up~0_6 () Int)
(declare-fun ~d1_val_t~0_6 () Int)
(declare-fun ~d1_ev~0_6 () Int)
(declare-fun ~d1_val~0_6 () Int)
(declare-fun ~b0_req_up~0_6 () Int)
(declare-fun ~z_ev~0_6 () Int)
(declare-fun ~b1_req_up~0_6 () Int)
(declare-fun ~b1_val_t~0_6 () Int)
(declare-fun ~b1_ev~0_6 () Int)
(declare-fun ~d0_ev~0_6 () Int)
(declare-fun ~b0_ev~0_6 () Int)
(declare-fun ~d0_val_t~0_6 () Int)
(declare-fun ~comp_m1_i~0_6 () Int)
(declare-fun |old(~z_val~0)_8| () Int)
(declare-fun |old(~z_val_t~0)_8| () Int)
(declare-fun |old(~d1_req_up~0)_8| () Int)
(declare-fun |old(~b0_val~0)_8| () Int)
(declare-fun |old(~b1_val~0)_8| () Int)
(declare-fun |old(~d0_req_up~0)_8| () Int)
(declare-fun |old(~d0_val~0)_8| () Int)
(declare-fun |old(~z_req_up~0)_8| () Int)
(declare-fun |old(~d1_val~0)_8| () Int)
(declare-fun |old(~d1_ev~0)_8| () Int)
(declare-fun |old(~b0_req_up~0)_8| () Int)
(declare-fun |old(~z_ev~0)_8| () Int)
(declare-fun |old(~b1_req_up~0)_8| () Int)
(declare-fun |old(~b1_ev~0)_8| () Int)
(declare-fun |old(~d0_ev~0)_8| () Int)
(declare-fun |old(~b0_ev~0)_8| () Int)
(declare-fun |old(~comp_m1_st~0)_8| () Int)
(declare-fun ~z_val~0_8 () Int)
(declare-fun ~z_val_t~0_8 () Int)
(declare-fun ~d1_req_up~0_8 () Int)
(declare-fun ~b0_val~0_8 () Int)
(declare-fun ~b1_val~0_8 () Int)
(declare-fun ~d0_req_up~0_8 () Int)
(declare-fun ~d0_val~0_8 () Int)
(declare-fun ~z_req_up~0_8 () Int)
(declare-fun ~d1_val~0_8 () Int)
(declare-fun ~d1_ev~0_8 () Int)
(declare-fun ~b0_req_up~0_8 () Int)
(declare-fun ~z_ev~0_8 () Int)
(declare-fun ~b1_req_up~0_8 () Int)
(declare-fun ~b1_ev~0_8 () Int)
(declare-fun ~d0_ev~0_8 () Int)
(declare-fun ~b0_ev~0_8 () Int)
(declare-fun ~comp_m1_st~0_8 () Int)
(declare-fun start_simulation_~tmp~3_9 () Int)
(declare-fun v_start_simulation_~kernel_st~0_26_fresh_1 () Int)
(declare-fun |old(~z_val~0)_10| () Int)
(declare-fun |old(~d1_req_up~0)_10| () Int)
(declare-fun |old(~b0_val~0)_10| () Int)
(declare-fun |old(~b1_val~0)_10| () Int)
(declare-fun |old(~d0_req_up~0)_10| () Int)
(declare-fun |old(~d0_val~0)_10| () Int)
(declare-fun |old(~z_req_up~0)_10| () Int)
(declare-fun |old(~d1_val~0)_10| () Int)
(declare-fun |old(~d1_ev~0)_10| () Int)
(declare-fun |old(~b0_req_up~0)_10| () Int)
(declare-fun |old(~z_ev~0)_10| () Int)
(declare-fun |old(~b1_req_up~0)_10| () Int)
(declare-fun |old(~b1_ev~0)_10| () Int)
(declare-fun |old(~d0_ev~0)_10| () Int)
(declare-fun |old(~b0_ev~0)_10| () Int)
(declare-fun ~z_val~0_10 () Int)
(declare-fun ~d1_req_up~0_10 () Int)
(declare-fun ~b0_val~0_10 () Int)
(declare-fun ~b1_val~0_10 () Int)
(declare-fun ~d0_req_up~0_10 () Int)
(declare-fun ~d0_val~0_10 () Int)
(declare-fun ~z_req_up~0_10 () Int)
(declare-fun ~d1_val~0_10 () Int)
(declare-fun ~d1_ev~0_10 () Int)
(declare-fun ~b0_req_up~0_10 () Int)
(declare-fun ~z_ev~0_10 () Int)
(declare-fun ~b1_req_up~0_10 () Int)
(declare-fun ~b1_ev~0_10 () Int)
(declare-fun ~d0_ev~0_10 () Int)
(declare-fun ~b0_ev~0_10 () Int)
(declare-fun |old(~b0_req_up~0)_12| () Int)
(declare-fun |old(~b0_val~0)_12| () Int)
(declare-fun |old(~b0_ev~0)_12| () Int)
(declare-fun ~b0_req_up~0_12 () Int)
(declare-fun ~b0_val~0_12 () Int)
(declare-fun ~b0_ev~0_12 () Int)
(declare-fun ~b0_val~0_13 () Int)
(declare-fun ~b0_ev~0_13 () Int)
(declare-fun ~b0_req_up~0_14 () Int)
(declare-fun |old(~b1_req_up~0)_17| () Int)
(declare-fun |old(~b1_val~0)_17| () Int)
(declare-fun |old(~b1_ev~0)_17| () Int)
(declare-fun ~b1_req_up~0_17 () Int)
(declare-fun ~b1_val~0_17 () Int)
(declare-fun ~b1_ev~0_17 () Int)
(declare-fun ~b1_val~0_18 () Int)
(declare-fun ~b1_ev~0_18 () Int)
(declare-fun ~b1_req_up~0_19 () Int)
(declare-fun |old(~d0_req_up~0)_22| () Int)
(declare-fun |old(~d0_ev~0)_22| () Int)
(declare-fun |old(~d0_val~0)_22| () Int)
(declare-fun ~d0_req_up~0_22 () Int)
(declare-fun ~d0_ev~0_22 () Int)
(declare-fun ~d0_val~0_22 () Int)
(declare-fun ~d0_ev~0_23 () Int)
(declare-fun ~d0_val~0_23 () Int)
(declare-fun ~d0_req_up~0_24 () Int)
(declare-fun |old(~comp_m1_st~0)_30| () Int)
(declare-fun ~comp_m1_st~0_30 () Int)
(declare-fun ~comp_m1_st~0_31 () Int)
(declare-fun |old(~d1_ev~0)_34| () Int)
(declare-fun |old(~z_ev~0)_34| () Int)
(declare-fun |old(~b1_ev~0)_34| () Int)
(declare-fun |old(~d0_ev~0)_34| () Int)
(declare-fun |old(~b0_ev~0)_34| () Int)
(declare-fun ~d1_ev~0_34 () Int)
(declare-fun ~z_ev~0_34 () Int)
(declare-fun ~b1_ev~0_34 () Int)
(declare-fun ~d0_ev~0_34 () Int)
(declare-fun ~b0_ev~0_34 () Int)
(declare-fun ~b0_ev~0_35 () Int)
(declare-fun ~b1_ev~0_36 () Int)
(declare-fun ~d1_ev~0_38 () Int)
(declare-fun ~z_ev~0_39 () Int)
(declare-fun |old(~comp_m1_st~0)_42| () Int)
(declare-fun ~comp_m1_st~0_42 () Int)
(declare-fun activate_threads_~tmp~1_43 () Int)
(declare-fun is_method1_triggered_~__retres1~0_45 () Int)
(declare-fun is_method1_triggered_~__retres1~0_46 () Int)
(declare-fun is_method1_triggered_~__retres1~0_47 () Int)
(declare-fun |is_method1_triggered_#res_47| () Int)
(declare-fun |activate_threads_#t~ret6_48| () Int)
(declare-fun |is_method1_triggered_#res_48| () Int)
(declare-fun activate_threads_~tmp~1_49 () Int)
(declare-fun |activate_threads_#t~ret6_49| () Int)
(declare-fun activate_threads_~tmp~1_50 () Int)
(declare-fun |old(~d1_ev~0)_53| () Int)
(declare-fun |old(~z_ev~0)_53| () Int)
(declare-fun |old(~b1_ev~0)_53| () Int)
(declare-fun |old(~d0_ev~0)_53| () Int)
(declare-fun |old(~b0_ev~0)_53| () Int)
(declare-fun ~d1_ev~0_53 () Int)
(declare-fun ~z_ev~0_53 () Int)
(declare-fun ~b1_ev~0_53 () Int)
(declare-fun ~d0_ev~0_53 () Int)
(declare-fun ~b0_ev~0_53 () Int)
(declare-fun ~b0_ev~0_54 () Int)
(declare-fun ~b1_ev~0_55 () Int)
(declare-fun ~d0_ev~0_56 () Int)
(declare-fun ~d1_ev~0_57 () Int)
(declare-fun ~z_ev~0_58 () Int)
(declare-fun |old(~z_val_t~0)_62| () Int)
(declare-fun |old(~comp_m1_st~0)_62| () Int)
(declare-fun |old(~z_req_up~0)_62| () Int)
(declare-fun ~z_val_t~0_62 () Int)
(declare-fun ~comp_m1_st~0_62 () Int)
(declare-fun ~z_req_up~0_62 () Int)
(declare-fun eval_~tmp___0~0_63 () Int)
(declare-fun eval_~tmp~0_63 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_66 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_67 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_68 () Int)
(declare-fun |exists_runnable_thread_#res_68| () Int)
(declare-fun |eval_#t~ret4_69| () Int)
(declare-fun |exists_runnable_thread_#res_69| () Int)
(declare-fun eval_~tmp___0~0_70 () Int)
(declare-fun |eval_#t~ret4_70| () Int)
(declare-fun eval_~tmp___0~0_71 () Int)
(declare-fun v_start_simulation_~kernel_st~0_27_fresh_1 () Int)
(declare-fun |old(~z_val~0)_75| () Int)
(declare-fun |old(~d1_req_up~0)_75| () Int)
(declare-fun |old(~b0_val~0)_75| () Int)
(declare-fun |old(~b1_val~0)_75| () Int)
(declare-fun |old(~d0_req_up~0)_75| () Int)
(declare-fun |old(~d0_val~0)_75| () Int)
(declare-fun |old(~z_req_up~0)_75| () Int)
(declare-fun |old(~d1_val~0)_75| () Int)
(declare-fun |old(~d1_ev~0)_75| () Int)
(declare-fun |old(~b0_req_up~0)_75| () Int)
(declare-fun |old(~z_ev~0)_75| () Int)
(declare-fun |old(~b1_req_up~0)_75| () Int)
(declare-fun |old(~b1_ev~0)_75| () Int)
(declare-fun |old(~d0_ev~0)_75| () Int)
(declare-fun |old(~b0_ev~0)_75| () Int)
(declare-fun ~z_val~0_75 () Int)
(declare-fun ~d1_req_up~0_75 () Int)
(declare-fun ~b0_val~0_75 () Int)
(declare-fun ~b1_val~0_75 () Int)
(declare-fun ~d0_req_up~0_75 () Int)
(declare-fun ~d0_val~0_75 () Int)
(declare-fun ~z_req_up~0_75 () Int)
(declare-fun ~d1_val~0_75 () Int)
(declare-fun ~d1_ev~0_75 () Int)
(declare-fun ~b0_req_up~0_75 () Int)
(declare-fun ~z_ev~0_75 () Int)
(declare-fun ~b1_req_up~0_75 () Int)
(declare-fun ~b1_ev~0_75 () Int)
(declare-fun ~d0_ev~0_75 () Int)
(declare-fun ~b0_ev~0_75 () Int)
(declare-fun v_start_simulation_~kernel_st~0_28_fresh_1 () Int)
(declare-fun |old(~d1_ev~0)_84| () Int)
(declare-fun |old(~z_ev~0)_84| () Int)
(declare-fun |old(~b1_ev~0)_84| () Int)
(declare-fun |old(~d0_ev~0)_84| () Int)
(declare-fun |old(~b0_ev~0)_84| () Int)
(declare-fun ~d1_ev~0_84 () Int)
(declare-fun ~z_ev~0_84 () Int)
(declare-fun ~b1_ev~0_84 () Int)
(declare-fun ~d0_ev~0_84 () Int)
(declare-fun ~b0_ev~0_84 () Int)
(declare-fun ~b0_ev~0_85 () Int)
(declare-fun ~b1_ev~0_86 () Int)
(declare-fun ~d1_ev~0_88 () Int)
(declare-fun ~z_ev~0_89 () Int)
(declare-fun |old(~comp_m1_st~0)_92| () Int)
(declare-fun ~comp_m1_st~0_92 () Int)
(declare-fun activate_threads_~tmp~1_93 () Int)
(declare-fun is_method1_triggered_~__retres1~0_95 () Int)
(declare-fun is_method1_triggered_~__retres1~0_96 () Int)
(declare-fun is_method1_triggered_~__retres1~0_97 () Int)
(declare-fun |is_method1_triggered_#res_97| () Int)
(declare-fun |activate_threads_#t~ret6_98| () Int)
(declare-fun |is_method1_triggered_#res_98| () Int)
(declare-fun activate_threads_~tmp~1_99 () Int)
(declare-fun |activate_threads_#t~ret6_99| () Int)
(declare-fun activate_threads_~tmp~1_100 () Int)
(declare-fun ~comp_m1_st~0_100 () Int)
(declare-fun |old(~d1_ev~0)_103| () Int)
(declare-fun |old(~z_ev~0)_103| () Int)
(declare-fun |old(~b1_ev~0)_103| () Int)
(declare-fun |old(~d0_ev~0)_103| () Int)
(declare-fun |old(~b0_ev~0)_103| () Int)
(declare-fun ~d1_ev~0_103 () Int)
(declare-fun ~z_ev~0_103 () Int)
(declare-fun ~b1_ev~0_103 () Int)
(declare-fun ~d0_ev~0_103 () Int)
(declare-fun ~b0_ev~0_103 () Int)
(declare-fun ~b0_ev~0_104 () Int)
(declare-fun ~b1_ev~0_105 () Int)
(declare-fun ~d0_ev~0_106 () Int)
(declare-fun ~d1_ev~0_107 () Int)
(declare-fun ~z_ev~0_108 () Int)
(declare-fun stop_simulation_~__retres2~0_112 () Int)
(declare-fun stop_simulation_~tmp~2_112 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_114 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_115 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_116 () Int)
(declare-fun |exists_runnable_thread_#res_116| () Int)
(declare-fun |stop_simulation_#t~ret7_117| () Int)
(declare-fun |exists_runnable_thread_#res_117| () Int)
(declare-fun |stop_simulation_#t~ret7_118| () Int)
(declare-fun stop_simulation_~tmp~2_118 () Int)
(declare-fun stop_simulation_~__retres2~0_119 () Int)
(declare-fun stop_simulation_~tmp~2_119 () Int)
(declare-fun stop_simulation_~__retres2~0_120 () Int)
(declare-fun |stop_simulation_#res_120| () Int)
(declare-fun |stop_simulation_#res_121| () Int)
(declare-fun |start_simulation_#t~ret8_121| () Int)
(declare-fun |start_simulation_#t~ret8_122| () Int)
(declare-fun start_simulation_~tmp~3_122 () Int)
(declare-fun start_simulation_~tmp~3_123 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~z_val~0_0 |old(~z_val~0)_0|) (= |old(~z_req_up~0)_0| ~z_req_up~0_0) (= |old(~d0_req_up~0)_0| ~d0_req_up~0_0) (= |old(~b1_val~0)_0| ~b1_val~0_0) (= |old(~d0_val_t~0)_0| ~d0_val_t~0_0) (= |old(~d1_val_t~0)_0| ~d1_val_t~0_0) (= ~b0_req_up~0_0 |old(~b0_req_up~0)_0|) (= ~d0_val~0_0 |old(~d0_val~0)_0|) (= ~b1_ev~0_0 |old(~b1_ev~0)_0|) (= ~b1_req_up~0_0 |old(~b1_req_up~0)_0|) (= ~b0_val~0_0 |old(~b0_val~0)_0|) (= ~d0_ev~0_0 |old(~d0_ev~0)_0|) (= ~z_val_t~0_0 |old(~z_val_t~0)_0|) (= |old(~z_ev~0)_0| ~z_ev~0_0) (= |old(~b0_val_t~0)_0| ~b0_val_t~0_0) (= |old(~b1_val_t~0)_0| ~b1_val_t~0_0) (= ~d1_ev~0_0 |old(~d1_ev~0)_0|) (= ~b0_ev~0_0 |old(~b0_ev~0)_0|) (= |old(~d1_req_up~0)_0| ~d1_req_up~0_0) (= |old(~d1_val~0)_0| ~d1_val~0_0) (= ~comp_m1_st~0_0 |old(~comp_m1_st~0)_0|) (= |old(~comp_m1_i~0)_0| ~comp_m1_i~0_0)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_0| ~d1_ev~0_-1) (= |old(~comp_m1_st~0)_0| ~comp_m1_st~0_-1) (= |old(~z_val_t~0)_0| ~z_val_t~0_-1) (= |old(~comp_m1_i~0)_0| ~comp_m1_i~0_-1) (= |old(~b1_req_up~0)_0| ~b1_req_up~0_-1) (= ~d1_val~0_-1 |old(~d1_val~0)_0|) (= ~z_ev~0_-1 |old(~z_ev~0)_0|) (= |old(~d0_val_t~0)_0| ~d0_val_t~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_0|) (= |old(~d1_val_t~0)_0| ~d1_val_t~0_-1) (= |old(~b1_ev~0)_0| ~b1_ev~0_-1) (= ~b0_ev~0_-1 |old(~b0_ev~0)_0|) (= |old(~z_val~0)_0| ~z_val~0_-1) (= |old(~b0_val~0)_0| ~b0_val~0_-1) (= |old(~b1_val_t~0)_0| ~b1_val_t~0_-1) (= ~b0_val_t~0_-1 |old(~b0_val_t~0)_0|) (= ~z_req_up~0_-1 |old(~z_req_up~0)_0|) (= |old(~b1_val~0)_0| ~b1_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_0|) (= ~d0_ev~0_-1 |old(~d0_ev~0)_0|) (= ~d0_req_up~0_-1 |old(~d0_req_up~0)_0|) (= |old(~d0_val~0)_0| ~d0_val~0_-1)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= ~b0_req_up~0_1 0) (= ~d0_val~0_1 0) (= ~z_req_up~0_1 0) (= ~b0_ev~0_1 0) (< 0 |#StackHeapBarrier_-1|) (= ~b1_ev~0_1 0) (= ~b1_val~0_1 0) (= ~b1_req_up~0_1 0) (= ~z_ev~0_1 0) (= 12 (select |#length_-1| 3)) (= ~b1_val_t~0_1 0) (= ~b0_val~0_1 0) (= ~d1_val_t~0_1 0) (= ~comp_m1_i~0_1 0) (= ~comp_m1_st~0_1 0) (= ~d1_val~0_1 0) (= 16 (select |#length_-1| 2)) (= ~z_val~0_1 0) (= ~d0_ev~0_1 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~d1_ev~0_1 0) (= (select |#valid_-1| 1) 1) (= 0 ~d1_req_up~0_1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~b0_val_t~0_1 0) (= ~d0_req_up~0_1 0) (= ~z_val_t~0_1 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~d0_val_t~0_1 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= ~z_val~0_3 |old(~z_val~0)_3|) (= |old(~z_req_up~0)_3| ~z_req_up~0_3) (= |old(~d0_req_up~0)_3| ~d0_req_up~0_3) (= |old(~b1_val~0)_3| ~b1_val~0_3) (= |old(~d0_val_t~0)_3| ~d0_val_t~0_3) (= |old(~d1_val_t~0)_3| ~d1_val_t~0_3) (= ~b0_req_up~0_3 |old(~b0_req_up~0)_3|) (= ~d0_val~0_3 |old(~d0_val~0)_3|) (= ~b1_ev~0_3 |old(~b1_ev~0)_3|) (= ~b1_req_up~0_3 |old(~b1_req_up~0)_3|) (= ~b0_val~0_3 |old(~b0_val~0)_3|) (= ~d0_ev~0_3 |old(~d0_ev~0)_3|) (= ~z_val_t~0_3 |old(~z_val_t~0)_3|) (= |old(~z_ev~0)_3| ~z_ev~0_3) (= |old(~b0_val_t~0)_3| ~b0_val_t~0_3) (= |old(~b1_val_t~0)_3| ~b1_val_t~0_3) (= ~d1_ev~0_3 |old(~d1_ev~0)_3|) (= ~b0_ev~0_3 |old(~b0_ev~0)_3|) (= |old(~d1_req_up~0)_3| ~d1_req_up~0_3) (= |old(~d1_val~0)_3| ~d1_val~0_3) (= ~comp_m1_st~0_3 |old(~comp_m1_st~0)_3|) (= |old(~comp_m1_i~0)_3| ~comp_m1_i~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_3| ~d1_ev~0_1) (= |old(~comp_m1_st~0)_3| ~comp_m1_st~0_1) (= |old(~z_val_t~0)_3| ~z_val_t~0_1) (= |old(~comp_m1_i~0)_3| ~comp_m1_i~0_1) (= |old(~b1_req_up~0)_3| ~b1_req_up~0_1) (= ~d1_val~0_1 |old(~d1_val~0)_3|) (= ~z_ev~0_1 |old(~z_ev~0)_3|) (= |old(~d0_val_t~0)_3| ~d0_val_t~0_1) (= ~d1_req_up~0_1 |old(~d1_req_up~0)_3|) (= |old(~d1_val_t~0)_3| ~d1_val_t~0_1) (= |old(~b1_ev~0)_3| ~b1_ev~0_1) (= ~b0_ev~0_1 |old(~b0_ev~0)_3|) (= |old(~z_val~0)_3| ~z_val~0_1) (= |old(~b0_val~0)_3| ~b0_val~0_1) (= |old(~b1_val_t~0)_3| ~b1_val_t~0_1) (= ~b0_val_t~0_1 |old(~b0_val_t~0)_3|) (= ~z_req_up~0_1 |old(~z_req_up~0)_3|) (= |old(~b1_val~0)_3| ~b1_val~0_1) (= ~b0_req_up~0_1 |old(~b0_req_up~0)_3|) (= ~d0_ev~0_1 |old(~d0_ev~0)_3|) (= ~d0_req_up~0_1 |old(~d0_req_up~0)_3|) (= |old(~d0_val~0)_3| ~d0_val~0_1)) :named ssa_3_OldVarAssigCall))
(assert (! true :named ssa_4))
(assert (! (and (= ~z_val~0_5 |old(~z_val~0)_5|) (= |old(~z_req_up~0)_5| ~z_req_up~0_5) (= |old(~d0_req_up~0)_5| ~d0_req_up~0_5) (= |old(~b1_val~0)_5| ~b1_val~0_5) (= |old(~d0_val_t~0)_5| ~d0_val_t~0_5) (= |old(~d1_val_t~0)_5| ~d1_val_t~0_5) (= ~b0_req_up~0_5 |old(~b0_req_up~0)_5|) (= ~d0_val~0_5 |old(~d0_val~0)_5|) (= ~b1_ev~0_5 |old(~b1_ev~0)_5|) (= ~b1_req_up~0_5 |old(~b1_req_up~0)_5|) (= ~b0_val~0_5 |old(~b0_val~0)_5|) (= ~d0_ev~0_5 |old(~d0_ev~0)_5|) (= |old(~z_ev~0)_5| ~z_ev~0_5) (= |old(~b0_val_t~0)_5| ~b0_val_t~0_5) (= |old(~b1_val_t~0)_5| ~b1_val_t~0_5) (= ~d1_ev~0_5 |old(~d1_ev~0)_5|) (= ~b0_ev~0_5 |old(~b0_ev~0)_5|) (= |old(~d1_req_up~0)_5| ~d1_req_up~0_5) (= |old(~d1_val~0)_5| ~d1_val~0_5) (= |old(~comp_m1_i~0)_5| ~comp_m1_i~0_5)) :named ssa_5_GlobVarAssigCall))
(assert (! true :named ssa_5_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_5| ~d1_ev~0_3) (= |old(~comp_m1_i~0)_5| ~comp_m1_i~0_3) (= |old(~b1_req_up~0)_5| ~b1_req_up~0_3) (= ~d1_val~0_3 |old(~d1_val~0)_5|) (= ~z_ev~0_3 |old(~z_ev~0)_5|) (= |old(~d0_val_t~0)_5| ~d0_val_t~0_3) (= ~d1_req_up~0_3 |old(~d1_req_up~0)_5|) (= |old(~d1_val_t~0)_5| ~d1_val_t~0_3) (= |old(~b1_ev~0)_5| ~b1_ev~0_3) (= ~b0_ev~0_3 |old(~b0_ev~0)_5|) (= |old(~z_val~0)_5| ~z_val~0_3) (= |old(~b0_val~0)_5| ~b0_val~0_3) (= |old(~b1_val_t~0)_5| ~b1_val_t~0_3) (= ~b0_val_t~0_3 |old(~b0_val_t~0)_5|) (= ~z_req_up~0_3 |old(~z_req_up~0)_5|) (= |old(~b1_val~0)_5| ~b1_val~0_3) (= ~b0_req_up~0_3 |old(~b0_req_up~0)_5|) (= ~d0_ev~0_3 |old(~d0_ev~0)_5|) (= ~d0_req_up~0_3 |old(~d0_req_up~0)_5|) (= |old(~d0_val~0)_5| ~d0_val~0_3)) :named ssa_5_OldVarAssigCall))
(assert (! (and (= ~z_val~0_6 0) (= ~z_ev~0_6 2) (= ~b0_ev~0_6 2) (= ~comp_m1_i~0_6 0) (= ~d0_val_t~0_6 1) (= ~b0_val~0_6 0) (= ~b1_val_t~0_6 1) (= ~d0_req_up~0_6 1) (= ~d1_val_t~0_6 1) (= ~d0_ev~0_6 2) (= ~b0_val_t~0_6 1) (= ~d1_val~0_6 0) (= ~d0_val~0_6 0) (= 2 ~b1_ev~0_6) (= ~b0_req_up~0_6 1) (= 2 ~d1_ev~0_6) (= ~b1_val~0_6 0) (= ~b1_req_up~0_6 1) (= ~z_req_up~0_6 0) (= 1 ~d1_req_up~0_6)) :named ssa_6))
(assert (! true :named ssa_7_return))
(assert (! (and (= ~z_val~0_8 |old(~z_val~0)_8|) (= |old(~z_req_up~0)_8| ~z_req_up~0_8) (= |old(~d0_req_up~0)_8| ~d0_req_up~0_8) (= |old(~b1_val~0)_8| ~b1_val~0_8) (= ~b0_req_up~0_8 |old(~b0_req_up~0)_8|) (= ~d0_val~0_8 |old(~d0_val~0)_8|) (= ~b1_ev~0_8 |old(~b1_ev~0)_8|) (= ~b1_req_up~0_8 |old(~b1_req_up~0)_8|) (= ~b0_val~0_8 |old(~b0_val~0)_8|) (= ~d0_ev~0_8 |old(~d0_ev~0)_8|) (= ~z_val_t~0_8 |old(~z_val_t~0)_8|) (= |old(~z_ev~0)_8| ~z_ev~0_8) (= ~d1_ev~0_8 |old(~d1_ev~0)_8|) (= ~b0_ev~0_8 |old(~b0_ev~0)_8|) (= |old(~d1_req_up~0)_8| ~d1_req_up~0_8) (= |old(~d1_val~0)_8| ~d1_val~0_8) (= ~comp_m1_st~0_8 |old(~comp_m1_st~0)_8|)) :named ssa_8_GlobVarAssigCall))
(assert (! true :named ssa_8_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_8| ~d1_ev~0_6) (= |old(~comp_m1_st~0)_8| ~comp_m1_st~0_3) (= |old(~z_val_t~0)_8| ~z_val_t~0_3) (= |old(~b1_req_up~0)_8| ~b1_req_up~0_6) (= ~d1_val~0_6 |old(~d1_val~0)_8|) (= ~z_ev~0_6 |old(~z_ev~0)_8|) (= ~d1_req_up~0_6 |old(~d1_req_up~0)_8|) (= |old(~b1_ev~0)_8| ~b1_ev~0_6) (= ~b0_ev~0_6 |old(~b0_ev~0)_8|) (= |old(~z_val~0)_8| ~z_val~0_6) (= |old(~b0_val~0)_8| ~b0_val~0_6) (= ~z_req_up~0_6 |old(~z_req_up~0)_8|) (= |old(~b1_val~0)_8| ~b1_val~0_6) (= ~b0_req_up~0_6 |old(~b0_req_up~0)_8|) (= ~d0_ev~0_6 |old(~d0_ev~0)_8|) (= ~d0_req_up~0_6 |old(~d0_req_up~0)_8|) (= |old(~d0_val~0)_8| ~d0_val~0_6)) :named ssa_8_OldVarAssigCall))
(assert (! (= v_start_simulation_~kernel_st~0_26_fresh_1 0) :named ssa_9))
(assert (! (and (= ~z_val~0_10 |old(~z_val~0)_10|) (= |old(~z_req_up~0)_10| ~z_req_up~0_10) (= |old(~d0_req_up~0)_10| ~d0_req_up~0_10) (= |old(~b1_val~0)_10| ~b1_val~0_10) (= ~b0_req_up~0_10 |old(~b0_req_up~0)_10|) (= ~d0_val~0_10 |old(~d0_val~0)_10|) (= ~b1_ev~0_10 |old(~b1_ev~0)_10|) (= ~b1_req_up~0_10 |old(~b1_req_up~0)_10|) (= ~b0_val~0_10 |old(~b0_val~0)_10|) (= ~d0_ev~0_10 |old(~d0_ev~0)_10|) (= |old(~z_ev~0)_10| ~z_ev~0_10) (= ~d1_ev~0_10 |old(~d1_ev~0)_10|) (= ~b0_ev~0_10 |old(~b0_ev~0)_10|) (= |old(~d1_req_up~0)_10| ~d1_req_up~0_10) (= |old(~d1_val~0)_10| ~d1_val~0_10)) :named ssa_10_GlobVarAssigCall))
(assert (! true :named ssa_10_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_10| ~d1_ev~0_8) (= |old(~b1_req_up~0)_10| ~b1_req_up~0_8) (= ~d1_val~0_8 |old(~d1_val~0)_10|) (= ~z_ev~0_8 |old(~z_ev~0)_10|) (= ~d1_req_up~0_8 |old(~d1_req_up~0)_10|) (= |old(~b1_ev~0)_10| ~b1_ev~0_8) (= ~b0_ev~0_8 |old(~b0_ev~0)_10|) (= |old(~z_val~0)_10| ~z_val~0_8) (= |old(~b0_val~0)_10| ~b0_val~0_8) (= ~z_req_up~0_8 |old(~z_req_up~0)_10|) (= |old(~b1_val~0)_10| ~b1_val~0_8) (= ~b0_req_up~0_8 |old(~b0_req_up~0)_10|) (= ~d0_ev~0_8 |old(~d0_ev~0)_10|) (= ~d0_req_up~0_8 |old(~d0_req_up~0)_10|) (= |old(~d0_val~0)_10| ~d0_val~0_8)) :named ssa_10_OldVarAssigCall))
(assert (! (= ~b0_req_up~0_10 1) :named ssa_11))
(assert (! (and (= ~b0_req_up~0_12 |old(~b0_req_up~0)_12|) (= ~b0_val~0_12 |old(~b0_val~0)_12|) (= ~b0_ev~0_12 |old(~b0_ev~0)_12|)) :named ssa_12_GlobVarAssigCall))
(assert (! true :named ssa_12_LocVarAssigCall))
(assert (! (and (= ~b0_ev~0_10 |old(~b0_ev~0)_12|) (= |old(~b0_val~0)_12| ~b0_val~0_10) (= ~b0_req_up~0_10 |old(~b0_req_up~0)_12|)) :named ssa_12_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_13 0) (not (= ~b0_val_t~0_6 ~b0_val~0_12)) (= ~b0_val_t~0_6 ~b0_val~0_13)) :named ssa_13))
(assert (! (= ~b0_req_up~0_14 0) :named ssa_14))
(assert (! true :named ssa_15_return))
(assert (! (= ~b1_req_up~0_10 1) :named ssa_16))
(assert (! (and (= |old(~b1_val~0)_17| ~b1_val~0_17) (= ~b1_ev~0_17 |old(~b1_ev~0)_17|) (= ~b1_req_up~0_17 |old(~b1_req_up~0)_17|)) :named ssa_17_GlobVarAssigCall))
(assert (! true :named ssa_17_LocVarAssigCall))
(assert (! (and (= |old(~b1_req_up~0)_17| ~b1_req_up~0_10) (= |old(~b1_ev~0)_17| ~b1_ev~0_10) (= |old(~b1_val~0)_17| ~b1_val~0_10)) :named ssa_17_OldVarAssigCall))
(assert (! (and (= ~b1_ev~0_18 0) (not (= ~b1_val~0_17 ~b1_val_t~0_6)) (= ~b1_val~0_18 ~b1_val_t~0_6)) :named ssa_18))
(assert (! (= ~b1_req_up~0_19 0) :named ssa_19))
(assert (! true :named ssa_20_return))
(assert (! (= ~d0_req_up~0_10 1) :named ssa_21))
(assert (! (and (= |old(~d0_req_up~0)_22| ~d0_req_up~0_22) (= ~d0_val~0_22 |old(~d0_val~0)_22|) (= ~d0_ev~0_22 |old(~d0_ev~0)_22|)) :named ssa_22_GlobVarAssigCall))
(assert (! true :named ssa_22_LocVarAssigCall))
(assert (! (and (= ~d0_ev~0_10 |old(~d0_ev~0)_22|) (= ~d0_req_up~0_10 |old(~d0_req_up~0)_22|) (= |old(~d0_val~0)_22| ~d0_val~0_10)) :named ssa_22_OldVarAssigCall))
(assert (! (and (not (= ~d0_val_t~0_6 ~d0_val~0_22)) (= ~d0_ev~0_23 0) (= ~d0_val_t~0_6 ~d0_val~0_23)) :named ssa_23))
(assert (! (= ~d0_req_up~0_24 0) :named ssa_24))
(assert (! true :named ssa_25_return))
(assert (! (not (= 1 ~d1_req_up~0_10)) :named ssa_26))
(assert (! (not (= ~z_req_up~0_10 1)) :named ssa_27))
(assert (! true :named ssa_28))
(assert (! true :named ssa_29_return))
(assert (! (= ~comp_m1_st~0_30 |old(~comp_m1_st~0)_30|) :named ssa_30_GlobVarAssigCall))
(assert (! true :named ssa_30_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_30| ~comp_m1_st~0_8) :named ssa_30_OldVarAssigCall))
(assert (! (and (not (= ~comp_m1_i~0_6 1)) (= 2 ~comp_m1_st~0_31)) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! true :named ssa_33_return))
(assert (! (and (= ~b1_ev~0_34 |old(~b1_ev~0)_34|) (= ~d0_ev~0_34 |old(~d0_ev~0)_34|) (= |old(~z_ev~0)_34| ~z_ev~0_34) (= ~d1_ev~0_34 |old(~d1_ev~0)_34|) (= ~b0_ev~0_34 |old(~b0_ev~0)_34|)) :named ssa_34_GlobVarAssigCall))
(assert (! true :named ssa_34_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_34| ~d1_ev~0_10) (= ~z_ev~0_10 |old(~z_ev~0)_34|) (= |old(~b1_ev~0)_34| ~b1_ev~0_18) (= ~b0_ev~0_13 |old(~b0_ev~0)_34|) (= ~d0_ev~0_23 |old(~d0_ev~0)_34|)) :named ssa_34_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_35 1) (= ~b0_ev~0_34 0)) :named ssa_35))
(assert (! (and (= ~b1_ev~0_34 0) (= ~b1_ev~0_36 1)) :named ssa_36))
(assert (! (not (= ~d0_ev~0_34 0)) :named ssa_37))
(assert (! (and (= ~d1_ev~0_34 0) (= ~d1_ev~0_38 1)) :named ssa_38))
(assert (! (and (= ~z_ev~0_34 0) (= ~z_ev~0_39 1)) :named ssa_39))
(assert (! true :named ssa_40))
(assert (! true :named ssa_41_return))
(assert (! (= ~comp_m1_st~0_42 |old(~comp_m1_st~0)_42|) :named ssa_42_GlobVarAssigCall))
(assert (! true :named ssa_42_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_42| ~comp_m1_st~0_31) :named ssa_42_OldVarAssigCall))
(assert (! true :named ssa_43))
(assert (! true :named ssa_44_GlobVarAssigCall))
(assert (! true :named ssa_44_LocVarAssigCall))
(assert (! true :named ssa_44_OldVarAssigCall))
(assert (! true :named ssa_45))
(assert (! (and (= is_method1_triggered_~__retres1~0_46 1) (= ~b0_ev~0_35 1)) :named ssa_46))
(assert (! (= is_method1_triggered_~__retres1~0_46 |is_method1_triggered_#res_47|) :named ssa_47))
(assert (! (= |activate_threads_#t~ret6_48| |is_method1_triggered_#res_47|) :named ssa_48_return))
(assert (! (and (<= |activate_threads_#t~ret6_48| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_48| 2147483648)) (= activate_threads_~tmp~1_49 |activate_threads_#t~ret6_48|)) :named ssa_49))
(assert (! (= activate_threads_~tmp~1_49 0) :named ssa_50))
(assert (! true :named ssa_51))
(assert (! true :named ssa_52_return))
(assert (! (and (= ~b1_ev~0_53 |old(~b1_ev~0)_53|) (= ~d0_ev~0_53 |old(~d0_ev~0)_53|) (= |old(~z_ev~0)_53| ~z_ev~0_53) (= ~d1_ev~0_53 |old(~d1_ev~0)_53|) (= ~b0_ev~0_53 |old(~b0_ev~0)_53|)) :named ssa_53_GlobVarAssigCall))
(assert (! true :named ssa_53_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_53| ~d1_ev~0_38) (= ~z_ev~0_39 |old(~z_ev~0)_53|) (= |old(~b1_ev~0)_53| ~b1_ev~0_36) (= ~b0_ev~0_35 |old(~b0_ev~0)_53|) (= ~d0_ev~0_34 |old(~d0_ev~0)_53|)) :named ssa_53_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_54 2) (= ~b0_ev~0_53 1)) :named ssa_54))
(assert (! (and (= ~b1_ev~0_53 1) (= 2 ~b1_ev~0_55)) :named ssa_55))
(assert (! (and (= ~d0_ev~0_53 1) (= ~d0_ev~0_56 2)) :named ssa_56))
(assert (! (and (= ~d1_ev~0_53 1) (= 2 ~d1_ev~0_57)) :named ssa_57))
(assert (! (and (= ~z_ev~0_53 1) (= 2 ~z_ev~0_58)) :named ssa_58))
(assert (! true :named ssa_59))
(assert (! true :named ssa_60_return))
(assert (! true :named ssa_61))
(assert (! (and (= |old(~z_req_up~0)_62| ~z_req_up~0_62) (= ~z_val_t~0_62 |old(~z_val_t~0)_62|) (= ~comp_m1_st~0_62 |old(~comp_m1_st~0)_62|)) :named ssa_62_GlobVarAssigCall))
(assert (! true :named ssa_62_LocVarAssigCall))
(assert (! (and (= |old(~comp_m1_st~0)_62| ~comp_m1_st~0_42) (= |old(~z_val_t~0)_62| ~z_val_t~0_8) (= ~z_req_up~0_10 |old(~z_req_up~0)_62|)) :named ssa_62_OldVarAssigCall))
(assert (! true :named ssa_63))
(assert (! true :named ssa_64))
(assert (! true :named ssa_65_GlobVarAssigCall))
(assert (! true :named ssa_65_LocVarAssigCall))
(assert (! true :named ssa_65_OldVarAssigCall))
(assert (! true :named ssa_66))
(assert (! (and (not (= ~comp_m1_st~0_62 0)) (= exists_runnable_thread_~__retres1~1_67 0)) :named ssa_67))
(assert (! (= |exists_runnable_thread_#res_68| exists_runnable_thread_~__retres1~1_67) :named ssa_68))
(assert (! (= |eval_#t~ret4_69| |exists_runnable_thread_#res_68|) :named ssa_69_return))
(assert (! (and (<= 0 (+ |eval_#t~ret4_69| 2147483648)) (<= |eval_#t~ret4_69| 2147483647) (= |eval_#t~ret4_69| eval_~tmp___0~0_70)) :named ssa_70))
(assert (! (= eval_~tmp___0~0_70 0) :named ssa_71))
(assert (! true :named ssa_72))
(assert (! true :named ssa_73_return))
(assert (! (= 2 v_start_simulation_~kernel_st~0_27_fresh_1) :named ssa_74))
(assert (! (and (= ~z_val~0_75 |old(~z_val~0)_75|) (= |old(~z_req_up~0)_75| ~z_req_up~0_75) (= |old(~d0_req_up~0)_75| ~d0_req_up~0_75) (= |old(~b1_val~0)_75| ~b1_val~0_75) (= ~b0_req_up~0_75 |old(~b0_req_up~0)_75|) (= ~d0_val~0_75 |old(~d0_val~0)_75|) (= ~b1_ev~0_75 |old(~b1_ev~0)_75|) (= ~b1_req_up~0_75 |old(~b1_req_up~0)_75|) (= ~b0_val~0_75 |old(~b0_val~0)_75|) (= ~d0_ev~0_75 |old(~d0_ev~0)_75|) (= |old(~z_ev~0)_75| ~z_ev~0_75) (= ~d1_ev~0_75 |old(~d1_ev~0)_75|) (= ~b0_ev~0_75 |old(~b0_ev~0)_75|) (= |old(~d1_req_up~0)_75| ~d1_req_up~0_75) (= |old(~d1_val~0)_75| ~d1_val~0_75)) :named ssa_75_GlobVarAssigCall))
(assert (! true :named ssa_75_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_75| ~d1_ev~0_57) (= |old(~b1_req_up~0)_75| ~b1_req_up~0_19) (= ~d1_val~0_10 |old(~d1_val~0)_75|) (= ~z_ev~0_58 |old(~z_ev~0)_75|) (= ~d1_req_up~0_10 |old(~d1_req_up~0)_75|) (= |old(~b1_ev~0)_75| ~b1_ev~0_55) (= ~b0_ev~0_54 |old(~b0_ev~0)_75|) (= |old(~z_val~0)_75| ~z_val~0_10) (= |old(~b0_val~0)_75| ~b0_val~0_13) (= ~z_req_up~0_62 |old(~z_req_up~0)_75|) (= |old(~b1_val~0)_75| ~b1_val~0_18) (= ~b0_req_up~0_14 |old(~b0_req_up~0)_75|) (= ~d0_ev~0_56 |old(~d0_ev~0)_75|) (= ~d0_req_up~0_24 |old(~d0_req_up~0)_75|) (= |old(~d0_val~0)_75| ~d0_val~0_23)) :named ssa_75_OldVarAssigCall))
(assert (! (not (= ~b0_req_up~0_75 1)) :named ssa_76))
(assert (! (not (= ~b1_req_up~0_75 1)) :named ssa_77))
(assert (! (not (= ~d0_req_up~0_75 1)) :named ssa_78))
(assert (! (not (= 1 ~d1_req_up~0_75)) :named ssa_79))
(assert (! (not (= ~z_req_up~0_75 1)) :named ssa_80))
(assert (! true :named ssa_81))
(assert (! true :named ssa_82_return))
(assert (! (= 3 v_start_simulation_~kernel_st~0_28_fresh_1) :named ssa_83))
(assert (! (and (= ~b1_ev~0_84 |old(~b1_ev~0)_84|) (= ~d0_ev~0_84 |old(~d0_ev~0)_84|) (= |old(~z_ev~0)_84| ~z_ev~0_84) (= ~d1_ev~0_84 |old(~d1_ev~0)_84|) (= ~b0_ev~0_84 |old(~b0_ev~0)_84|)) :named ssa_84_GlobVarAssigCall))
(assert (! true :named ssa_84_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_84| ~d1_ev~0_75) (= ~z_ev~0_75 |old(~z_ev~0)_84|) (= |old(~b1_ev~0)_84| ~b1_ev~0_75) (= ~b0_ev~0_75 |old(~b0_ev~0)_84|) (= ~d0_ev~0_75 |old(~d0_ev~0)_84|)) :named ssa_84_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_85 1) (= ~b0_ev~0_84 0)) :named ssa_85))
(assert (! (and (= ~b1_ev~0_84 0) (= ~b1_ev~0_86 1)) :named ssa_86))
(assert (! (not (= ~d0_ev~0_84 0)) :named ssa_87))
(assert (! (and (= ~d1_ev~0_84 0) (= ~d1_ev~0_88 1)) :named ssa_88))
(assert (! (and (= ~z_ev~0_84 0) (= ~z_ev~0_89 1)) :named ssa_89))
(assert (! true :named ssa_90))
(assert (! true :named ssa_91_return))
(assert (! (= ~comp_m1_st~0_92 |old(~comp_m1_st~0)_92|) :named ssa_92_GlobVarAssigCall))
(assert (! true :named ssa_92_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_92| ~comp_m1_st~0_62) :named ssa_92_OldVarAssigCall))
(assert (! true :named ssa_93))
(assert (! true :named ssa_94_GlobVarAssigCall))
(assert (! true :named ssa_94_LocVarAssigCall))
(assert (! true :named ssa_94_OldVarAssigCall))
(assert (! true :named ssa_95))
(assert (! (and (= is_method1_triggered_~__retres1~0_96 1) (= ~b0_ev~0_85 1)) :named ssa_96))
(assert (! (= is_method1_triggered_~__retres1~0_96 |is_method1_triggered_#res_97|) :named ssa_97))
(assert (! (= |activate_threads_#t~ret6_98| |is_method1_triggered_#res_97|) :named ssa_98_return))
(assert (! (and (<= |activate_threads_#t~ret6_98| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_98| 2147483648)) (= activate_threads_~tmp~1_99 |activate_threads_#t~ret6_98|)) :named ssa_99))
(assert (! (and (not (= activate_threads_~tmp~1_99 0)) (= ~comp_m1_st~0_100 0)) :named ssa_100))
(assert (! true :named ssa_101))
(assert (! true :named ssa_102_return))
(assert (! (and (= ~b1_ev~0_103 |old(~b1_ev~0)_103|) (= ~d0_ev~0_103 |old(~d0_ev~0)_103|) (= |old(~z_ev~0)_103| ~z_ev~0_103) (= ~d1_ev~0_103 |old(~d1_ev~0)_103|) (= ~b0_ev~0_103 |old(~b0_ev~0)_103|)) :named ssa_103_GlobVarAssigCall))
(assert (! true :named ssa_103_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_103| ~d1_ev~0_88) (= ~z_ev~0_89 |old(~z_ev~0)_103|) (= |old(~b1_ev~0)_103| ~b1_ev~0_86) (= ~b0_ev~0_85 |old(~b0_ev~0)_103|) (= ~d0_ev~0_84 |old(~d0_ev~0)_103|)) :named ssa_103_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_104 2) (= ~b0_ev~0_103 1)) :named ssa_104))
(assert (! (and (= ~b1_ev~0_103 1) (= 2 ~b1_ev~0_105)) :named ssa_105))
(assert (! (and (= ~d0_ev~0_103 1) (= ~d0_ev~0_106 2)) :named ssa_106))
(assert (! (and (= ~d1_ev~0_103 1) (= 2 ~d1_ev~0_107)) :named ssa_107))
(assert (! (and (= ~z_ev~0_103 1) (= 2 ~z_ev~0_108)) :named ssa_108))
(assert (! true :named ssa_109))
(assert (! true :named ssa_110_return))
(assert (! true :named ssa_111_GlobVarAssigCall))
(assert (! true :named ssa_111_LocVarAssigCall))
(assert (! true :named ssa_111_OldVarAssigCall))
(assert (! true :named ssa_112))
(assert (! true :named ssa_113_GlobVarAssigCall))
(assert (! true :named ssa_113_LocVarAssigCall))
(assert (! true :named ssa_113_OldVarAssigCall))
(assert (! true :named ssa_114))
(assert (! (and (= ~comp_m1_st~0_100 0) (= exists_runnable_thread_~__retres1~1_115 1)) :named ssa_115))
(assert (! (= |exists_runnable_thread_#res_116| exists_runnable_thread_~__retres1~1_115) :named ssa_116))
(assert (! (= |stop_simulation_#t~ret7_117| |exists_runnable_thread_#res_116|) :named ssa_117_return))
(assert (! (and (<= |stop_simulation_#t~ret7_117| 2147483647) (<= 0 (+ |stop_simulation_#t~ret7_117| 2147483648)) (= |stop_simulation_#t~ret7_117| stop_simulation_~tmp~2_118)) :named ssa_118))
(assert (! (and (not (= stop_simulation_~tmp~2_118 0)) (= stop_simulation_~__retres2~0_119 0)) :named ssa_119))
(assert (! (= stop_simulation_~__retres2~0_119 |stop_simulation_#res_120|) :named ssa_120))
(assert (! (= |start_simulation_#t~ret8_121| |stop_simulation_#res_120|) :named ssa_121_return))
(assert (! (and (= |start_simulation_#t~ret8_121| start_simulation_~tmp~3_122) (<= |start_simulation_#t~ret8_121| 2147483647) (<= 0 (+ |start_simulation_#t~ret8_121| 2147483648))) :named ssa_122))
(assert (! (not (= start_simulation_~tmp~3_122 0)) :named ssa_123))
(assert (! true :named ssa_124))
(assert (! true :named ssa_125_return))
(assert (! (not (= ~z_val~0_75 0)) :named ssa_126))
(assert (! true :named ssa_127_GlobVarAssigCall))
(assert (! true :named ssa_127_LocVarAssigCall))
(assert (! true :named ssa_127_OldVarAssigCall))
(assert (! true :named ssa_128))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_6 ssa_7_return ssa_5_OldVarAssigCall) (and ssa_13 ssa_65_OldVarAssigCall ssa_25_return ssa_77 ssa_115 ssa_27 ssa_116 ssa_17_LocVarAssigCall ssa_95 ssa_22_OldVarAssigCall ssa_44_LocVarAssigCall ssa_84_LocVarAssigCall ssa_64 ssa_31 ssa_99 ssa_76 ssa_81 ssa_88 ssa_68 ssa_62_GlobVarAssigCall ssa_16 ssa_57 ssa_109 ssa_26 ssa_55 ssa_67 ssa_17_GlobVarAssigCall ssa_8_GlobVarAssigCall ssa_100 ssa_62_LocVarAssigCall ssa_74 ssa_10_GlobVarAssigCall ssa_102_return ssa_40 ssa_14 ssa_113_OldVarAssigCall ssa_120 ssa_96 ssa_111_OldVarAssigCall ssa_75_LocVarAssigCall ssa_45 ssa_9 ssa_110_return ssa_122 ssa_46 ssa_94_LocVarAssigCall ssa_53_GlobVarAssigCall ssa_89 ssa_47 ssa_90 ssa_111_LocVarAssigCall ssa_92_GlobVarAssigCall ssa_44_OldVarAssigCall ssa_103_GlobVarAssigCall ssa_125_return ssa_42_LocVarAssigCall ssa_105 ssa_12_OldVarAssigCall ssa_111_GlobVarAssigCall ssa_101 ssa_44_GlobVarAssigCall ssa_22_LocVarAssigCall ssa_85 ssa_69_return ssa_86 ssa_10_OldVarAssigCall ssa_34_GlobVarAssigCall ssa_98_return ssa_22_GlobVarAssigCall ssa_58 ssa_108 ssa_121_return ssa_19 ssa_92_OldVarAssigCall ssa_83 ssa_29_return ssa_30_LocVarAssigCall ssa_34_LocVarAssigCall ssa_87 ssa_61 ssa_59 ssa_34_OldVarAssigCall ssa_84_GlobVarAssigCall ssa_39 ssa_53_LocVarAssigCall ssa_20_return ssa_43 ssa_62_OldVarAssigCall ssa_118 ssa_73_return ssa_37 ssa_72 ssa_17_OldVarAssigCall ssa_117_return ssa_119 ssa_38 ssa_75_GlobVarAssigCall ssa_103_LocVarAssigCall ssa_79 ssa_30_OldVarAssigCall ssa_12_LocVarAssigCall ssa_42_GlobVarAssigCall ssa_84_OldVarAssigCall ssa_97 ssa_41_return ssa_82_return ssa_32 ssa_50 ssa_94_OldVarAssigCall ssa_65_LocVarAssigCall ssa_104 ssa_60_return ssa_8_OldVarAssigCall ssa_48_return ssa_114 ssa_11 ssa_53_OldVarAssigCall ssa_106 ssa_28 ssa_54 ssa_92_LocVarAssigCall ssa_51 ssa_36 ssa_80 ssa_49 ssa_107 ssa_63 ssa_113_GlobVarAssigCall ssa_21 ssa_75_OldVarAssigCall ssa_78 ssa_33_return ssa_123 ssa_12_GlobVarAssigCall ssa_18 ssa_103_OldVarAssigCall ssa_23 ssa_70 ssa_66 ssa_124 ssa_113_LocVarAssigCall ssa_94_GlobVarAssigCall ssa_56 ssa_93 ssa_10_LocVarAssigCall ssa_35 ssa_15_return ssa_65_GlobVarAssigCall ssa_112 ssa_42_OldVarAssigCall ssa_30_GlobVarAssigCall ssa_8_LocVarAssigCall ssa_71 ssa_91_return ssa_24 ssa_52_return) ssa_126 (and ssa_127_LocVarAssigCall ssa_127_OldVarAssigCall ssa_127_GlobVarAssigCall) (and ssa_128 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val_t~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val_t~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_val_t~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~d0_val_t~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun ~comp_m1_i~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val_t~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val_t~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_val_t~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~d0_val_t~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_i~0)_-2| () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~z_val_t~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val_t~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val_t~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_val_t~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun |old(~d0_val_t~0)_-1| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun |old(~comp_m1_i~0)_-1| () Int)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~z_val_t~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val_t~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val_t~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_val_t~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~d0_val_t~0_-1 () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun ~comp_m1_i~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~z_val~0_0 () Int)
(declare-fun ~z_val_t~0_0 () Int)
(declare-fun ~d1_req_up~0_0 () Int)
(declare-fun ~b0_val_t~0_0 () Int)
(declare-fun ~b1_val~0_0 () Int)
(declare-fun ~b0_val~0_0 () Int)
(declare-fun ~d0_req_up~0_0 () Int)
(declare-fun ~d0_val~0_0 () Int)
(declare-fun ~z_req_up~0_0 () Int)
(declare-fun ~d1_val_t~0_0 () Int)
(declare-fun ~d1_ev~0_0 () Int)
(declare-fun ~d1_val~0_0 () Int)
(declare-fun ~b0_req_up~0_0 () Int)
(declare-fun ~z_ev~0_0 () Int)
(declare-fun ~b1_req_up~0_0 () Int)
(declare-fun ~b1_val_t~0_0 () Int)
(declare-fun ~b1_ev~0_0 () Int)
(declare-fun ~d0_ev~0_0 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~d0_val_t~0_0 () Int)
(declare-fun ~comp_m1_st~0_0 () Int)
(declare-fun ~comp_m1_i~0_0 () Int)
(assert (! (and (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) (= |old(~d1_val~0)_-1| ~d1_val~0_-1) (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= |old(~d1_val_t~0)_-1| ~d1_val_t~0_-1) (= |old(~comp_m1_i~0)_-1| ~comp_m1_i~0_-1) (= |old(~z_val~0)_-1| ~z_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= ~b1_val_t~0_-1 |old(~b1_val_t~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-1) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1) (= ~b0_val_t~0_-1 |old(~b0_val_t~0)_-1|) (= |old(~d0_val_t~0)_-1| ~d0_val_t~0_-1) (= |old(~b0_val~0)_-1| ~b0_val~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_-1|)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ~b0_req_up~0_0 0) (= ~d0_val~0_0 0) (= ~z_req_up~0_0 0) (= ~b0_ev~0_0 0) (< 0 |#StackHeapBarrier_-1|) (= ~b1_ev~0_0 0) (= ~b1_val~0_0 0) (= ~b1_req_up~0_0 0) (= ~z_ev~0_0 0) (= 12 (select |#length_-1| 3)) (= ~b1_val_t~0_0 0) (= ~b0_val~0_0 0) (= ~d1_val_t~0_0 0) (= ~comp_m1_i~0_0 0) (= ~comp_m1_st~0_0 0) (= ~d1_val~0_0 0) (= 16 (select |#length_-1| 2)) (= ~z_val~0_0 0) (= ~d0_ev~0_0 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~d1_ev~0_0 0) (= (select |#valid_-1| 1) 1) (= 0 ~d1_req_up~0_0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= ~b0_val_t~0_0 0) (= ~d0_req_up~0_0 0) (= ~z_val_t~0_0 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0) (= ~d0_val_t~0_0 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-2) (= |old(~comp_m1_i~0)_-1| ~comp_m1_i~0_-2) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= ~d1_val~0_-2 |old(~d1_val~0)_-1|) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~d0_val_t~0)_-1| ~d0_val_t~0_-2) (= ~d1_req_up~0_-2 |old(~d1_req_up~0)_-1|) (= |old(~d1_val_t~0)_-1| ~d1_val_t~0_-2) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-2) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= |old(~b1_val_t~0)_-1| ~b1_val_t~0_-2) (= ~b0_val_t~0_-2 |old(~b0_val_t~0)_-1|) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|) (= |old(~b1_val~0)_-1| ~b1_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val_t~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val_t~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_val_t~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~d0_val_t~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun ~comp_m1_i~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val_t~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val_t~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_val_t~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~d0_val_t~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_i~0)_-2| () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val_t~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val_t~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_val_t~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun |old(~d0_val_t~0)_-1| () Int)
(declare-fun |old(~comp_m1_i~0)_-1| () Int)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val_t~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val_t~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_val_t~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~d0_val_t~0_-1 () Int)
(declare-fun ~comp_m1_i~0_-1 () Int)
(declare-fun ~z_val~0_0 () Int)
(declare-fun ~d1_req_up~0_0 () Int)
(declare-fun ~b0_val_t~0_0 () Int)
(declare-fun ~b1_val~0_0 () Int)
(declare-fun ~b0_val~0_0 () Int)
(declare-fun ~d0_req_up~0_0 () Int)
(declare-fun ~d0_val~0_0 () Int)
(declare-fun ~z_req_up~0_0 () Int)
(declare-fun ~d1_val_t~0_0 () Int)
(declare-fun ~d1_ev~0_0 () Int)
(declare-fun ~d1_val~0_0 () Int)
(declare-fun ~b0_req_up~0_0 () Int)
(declare-fun ~z_ev~0_0 () Int)
(declare-fun ~b1_req_up~0_0 () Int)
(declare-fun ~b1_val_t~0_0 () Int)
(declare-fun ~b1_ev~0_0 () Int)
(declare-fun ~d0_ev~0_0 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~d0_val_t~0_0 () Int)
(declare-fun ~comp_m1_i~0_0 () Int)
(assert (! (and (= |old(~d1_val~0)_-1| ~d1_val~0_-1) (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= |old(~d1_val_t~0)_-1| ~d1_val_t~0_-1) (= |old(~comp_m1_i~0)_-1| ~comp_m1_i~0_-1) (= |old(~z_val~0)_-1| ~z_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= ~b1_val_t~0_-1 |old(~b1_val_t~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-1) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1) (= ~b0_val_t~0_-1 |old(~b0_val_t~0)_-1|) (= |old(~d0_val_t~0)_-1| ~d0_val_t~0_-1) (= |old(~b0_val~0)_-1| ~b0_val~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_-1|)) :named ssa_precond))
(assert (! (not (= ~d1_req_up~0_0 1)) :named ssa_postcond))
(assert (! (and (= ~z_val~0_0 0) (= ~z_ev~0_0 2) (= ~b0_ev~0_0 2) (= ~comp_m1_i~0_0 0) (= ~d0_val_t~0_0 1) (= ~b0_val~0_0 0) (= ~b1_val_t~0_0 1) (= ~d0_req_up~0_0 1) (= ~d1_val_t~0_0 1) (= ~d0_ev~0_0 2) (= ~b0_val_t~0_0 1) (= ~d1_val~0_0 0) (= ~d0_val~0_0 0) (= 2 ~b1_ev~0_0) (= ~b0_req_up~0_0 1) (= 2 ~d1_ev~0_0) (= ~b1_val~0_0 0) (= ~b1_req_up~0_0 1) (= ~z_req_up~0_0 0) (= 1 ~d1_req_up~0_0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= |old(~comp_m1_i~0)_-1| ~comp_m1_i~0_-2) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= ~d1_val~0_-2 |old(~d1_val~0)_-1|) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~d0_val_t~0)_-1| ~d0_val_t~0_-2) (= ~d1_req_up~0_-2 |old(~d1_req_up~0)_-1|) (= |old(~d1_val_t~0)_-1| ~d1_val_t~0_-2) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-2) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= |old(~b1_val_t~0)_-1| ~b1_val_t~0_-2) (= ~b0_val_t~0_-2 |old(~b0_val_t~0)_-1|) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|) (= |old(~b1_val~0)_-1| ~b1_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val_t~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val_t~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_val_t~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~d0_val_t~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun ~comp_m1_i~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val_t~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val_t~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_val_t~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~d0_val_t~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_i~0)_-2| () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~z_val_t~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~z_val_t~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun start_simulation_~tmp~3_0 () Int)
(declare-fun v_start_simulation_~kernel_st~0_29_fresh_1 () Int)
(declare-fun |old(~z_val~0)_1| () Int)
(declare-fun |old(~d1_req_up~0)_1| () Int)
(declare-fun |old(~b0_val~0)_1| () Int)
(declare-fun |old(~b1_val~0)_1| () Int)
(declare-fun |old(~d0_req_up~0)_1| () Int)
(declare-fun |old(~d0_val~0)_1| () Int)
(declare-fun |old(~z_req_up~0)_1| () Int)
(declare-fun |old(~d1_val~0)_1| () Int)
(declare-fun |old(~d1_ev~0)_1| () Int)
(declare-fun |old(~b0_req_up~0)_1| () Int)
(declare-fun |old(~z_ev~0)_1| () Int)
(declare-fun |old(~b1_req_up~0)_1| () Int)
(declare-fun |old(~b1_ev~0)_1| () Int)
(declare-fun |old(~d0_ev~0)_1| () Int)
(declare-fun |old(~b0_ev~0)_1| () Int)
(declare-fun ~z_val~0_1 () Int)
(declare-fun ~d1_req_up~0_1 () Int)
(declare-fun ~b0_val~0_1 () Int)
(declare-fun ~b1_val~0_1 () Int)
(declare-fun ~d0_req_up~0_1 () Int)
(declare-fun ~d0_val~0_1 () Int)
(declare-fun ~z_req_up~0_1 () Int)
(declare-fun ~d1_val~0_1 () Int)
(declare-fun ~d1_ev~0_1 () Int)
(declare-fun ~b0_req_up~0_1 () Int)
(declare-fun ~z_ev~0_1 () Int)
(declare-fun ~b1_req_up~0_1 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d0_ev~0_1 () Int)
(declare-fun ~b0_ev~0_1 () Int)
(declare-fun |old(~b0_req_up~0)_3| () Int)
(declare-fun |old(~b0_val~0)_3| () Int)
(declare-fun |old(~b0_ev~0)_3| () Int)
(declare-fun ~b0_req_up~0_3 () Int)
(declare-fun ~b0_val~0_3 () Int)
(declare-fun ~b0_ev~0_3 () Int)
(declare-fun ~b0_val~0_4 () Int)
(declare-fun ~b0_ev~0_4 () Int)
(declare-fun ~b0_req_up~0_5 () Int)
(declare-fun |old(~b1_req_up~0)_8| () Int)
(declare-fun |old(~b1_val~0)_8| () Int)
(declare-fun |old(~b1_ev~0)_8| () Int)
(declare-fun ~b1_req_up~0_8 () Int)
(declare-fun ~b1_val~0_8 () Int)
(declare-fun ~b1_ev~0_8 () Int)
(declare-fun ~b1_val~0_9 () Int)
(declare-fun ~b1_ev~0_9 () Int)
(declare-fun ~b1_req_up~0_10 () Int)
(declare-fun |old(~d0_req_up~0)_13| () Int)
(declare-fun |old(~d0_ev~0)_13| () Int)
(declare-fun |old(~d0_val~0)_13| () Int)
(declare-fun ~d0_req_up~0_13 () Int)
(declare-fun ~d0_ev~0_13 () Int)
(declare-fun ~d0_val~0_13 () Int)
(declare-fun ~d0_ev~0_14 () Int)
(declare-fun ~d0_val~0_14 () Int)
(declare-fun ~d0_req_up~0_15 () Int)
(declare-fun |old(~comp_m1_st~0)_21| () Int)
(declare-fun ~comp_m1_st~0_21 () Int)
(declare-fun ~comp_m1_st~0_22 () Int)
(declare-fun |old(~d1_ev~0)_25| () Int)
(declare-fun |old(~z_ev~0)_25| () Int)
(declare-fun |old(~b1_ev~0)_25| () Int)
(declare-fun |old(~d0_ev~0)_25| () Int)
(declare-fun |old(~b0_ev~0)_25| () Int)
(declare-fun ~d1_ev~0_25 () Int)
(declare-fun ~z_ev~0_25 () Int)
(declare-fun ~b1_ev~0_25 () Int)
(declare-fun ~d0_ev~0_25 () Int)
(declare-fun ~b0_ev~0_25 () Int)
(declare-fun ~b0_ev~0_26 () Int)
(declare-fun ~b1_ev~0_27 () Int)
(declare-fun ~d1_ev~0_29 () Int)
(declare-fun ~z_ev~0_30 () Int)
(declare-fun |old(~comp_m1_st~0)_33| () Int)
(declare-fun ~comp_m1_st~0_33 () Int)
(declare-fun activate_threads_~tmp~1_34 () Int)
(declare-fun is_method1_triggered_~__retres1~0_36 () Int)
(declare-fun is_method1_triggered_~__retres1~0_37 () Int)
(declare-fun is_method1_triggered_~__retres1~0_38 () Int)
(declare-fun |is_method1_triggered_#res_38| () Int)
(declare-fun |activate_threads_#t~ret6_39| () Int)
(declare-fun |is_method1_triggered_#res_39| () Int)
(declare-fun activate_threads_~tmp~1_40 () Int)
(declare-fun |activate_threads_#t~ret6_40| () Int)
(declare-fun activate_threads_~tmp~1_41 () Int)
(declare-fun |old(~d1_ev~0)_44| () Int)
(declare-fun |old(~z_ev~0)_44| () Int)
(declare-fun |old(~b1_ev~0)_44| () Int)
(declare-fun |old(~d0_ev~0)_44| () Int)
(declare-fun |old(~b0_ev~0)_44| () Int)
(declare-fun ~d1_ev~0_44 () Int)
(declare-fun ~z_ev~0_44 () Int)
(declare-fun ~b1_ev~0_44 () Int)
(declare-fun ~d0_ev~0_44 () Int)
(declare-fun ~b0_ev~0_44 () Int)
(declare-fun ~b0_ev~0_45 () Int)
(declare-fun ~b1_ev~0_46 () Int)
(declare-fun ~d0_ev~0_47 () Int)
(declare-fun ~d1_ev~0_48 () Int)
(declare-fun ~z_ev~0_49 () Int)
(declare-fun |old(~z_val_t~0)_53| () Int)
(declare-fun |old(~comp_m1_st~0)_53| () Int)
(declare-fun |old(~z_req_up~0)_53| () Int)
(declare-fun ~z_val_t~0_53 () Int)
(declare-fun ~comp_m1_st~0_53 () Int)
(declare-fun ~z_req_up~0_53 () Int)
(declare-fun eval_~tmp___0~0_54 () Int)
(declare-fun eval_~tmp~0_54 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_57 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_58 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_59 () Int)
(declare-fun |exists_runnable_thread_#res_59| () Int)
(declare-fun |eval_#t~ret4_60| () Int)
(declare-fun |exists_runnable_thread_#res_60| () Int)
(declare-fun eval_~tmp___0~0_61 () Int)
(declare-fun |eval_#t~ret4_61| () Int)
(declare-fun eval_~tmp___0~0_62 () Int)
(declare-fun v_start_simulation_~kernel_st~0_30_fresh_1 () Int)
(declare-fun |old(~z_val~0)_66| () Int)
(declare-fun |old(~d1_req_up~0)_66| () Int)
(declare-fun |old(~b0_val~0)_66| () Int)
(declare-fun |old(~b1_val~0)_66| () Int)
(declare-fun |old(~d0_req_up~0)_66| () Int)
(declare-fun |old(~d0_val~0)_66| () Int)
(declare-fun |old(~z_req_up~0)_66| () Int)
(declare-fun |old(~d1_val~0)_66| () Int)
(declare-fun |old(~d1_ev~0)_66| () Int)
(declare-fun |old(~b0_req_up~0)_66| () Int)
(declare-fun |old(~z_ev~0)_66| () Int)
(declare-fun |old(~b1_req_up~0)_66| () Int)
(declare-fun |old(~b1_ev~0)_66| () Int)
(declare-fun |old(~d0_ev~0)_66| () Int)
(declare-fun |old(~b0_ev~0)_66| () Int)
(declare-fun ~z_val~0_66 () Int)
(declare-fun ~d1_req_up~0_66 () Int)
(declare-fun ~b0_val~0_66 () Int)
(declare-fun ~b1_val~0_66 () Int)
(declare-fun ~d0_req_up~0_66 () Int)
(declare-fun ~d0_val~0_66 () Int)
(declare-fun ~z_req_up~0_66 () Int)
(declare-fun ~d1_val~0_66 () Int)
(declare-fun ~d1_ev~0_66 () Int)
(declare-fun ~b0_req_up~0_66 () Int)
(declare-fun ~z_ev~0_66 () Int)
(declare-fun ~b1_req_up~0_66 () Int)
(declare-fun ~b1_ev~0_66 () Int)
(declare-fun ~d0_ev~0_66 () Int)
(declare-fun ~b0_ev~0_66 () Int)
(declare-fun v_start_simulation_~kernel_st~0_31_fresh_1 () Int)
(declare-fun |old(~d1_ev~0)_75| () Int)
(declare-fun |old(~z_ev~0)_75| () Int)
(declare-fun |old(~b1_ev~0)_75| () Int)
(declare-fun |old(~d0_ev~0)_75| () Int)
(declare-fun |old(~b0_ev~0)_75| () Int)
(declare-fun ~d1_ev~0_75 () Int)
(declare-fun ~z_ev~0_75 () Int)
(declare-fun ~b1_ev~0_75 () Int)
(declare-fun ~d0_ev~0_75 () Int)
(declare-fun ~b0_ev~0_75 () Int)
(declare-fun ~b0_ev~0_76 () Int)
(declare-fun ~b1_ev~0_77 () Int)
(declare-fun ~d1_ev~0_79 () Int)
(declare-fun ~z_ev~0_80 () Int)
(declare-fun |old(~comp_m1_st~0)_83| () Int)
(declare-fun ~comp_m1_st~0_83 () Int)
(declare-fun activate_threads_~tmp~1_84 () Int)
(declare-fun is_method1_triggered_~__retres1~0_86 () Int)
(declare-fun is_method1_triggered_~__retres1~0_87 () Int)
(declare-fun is_method1_triggered_~__retres1~0_88 () Int)
(declare-fun |is_method1_triggered_#res_88| () Int)
(declare-fun |activate_threads_#t~ret6_89| () Int)
(declare-fun |is_method1_triggered_#res_89| () Int)
(declare-fun activate_threads_~tmp~1_90 () Int)
(declare-fun |activate_threads_#t~ret6_90| () Int)
(declare-fun activate_threads_~tmp~1_91 () Int)
(declare-fun ~comp_m1_st~0_91 () Int)
(declare-fun |old(~d1_ev~0)_94| () Int)
(declare-fun |old(~z_ev~0)_94| () Int)
(declare-fun |old(~b1_ev~0)_94| () Int)
(declare-fun |old(~d0_ev~0)_94| () Int)
(declare-fun |old(~b0_ev~0)_94| () Int)
(declare-fun ~d1_ev~0_94 () Int)
(declare-fun ~z_ev~0_94 () Int)
(declare-fun ~b1_ev~0_94 () Int)
(declare-fun ~d0_ev~0_94 () Int)
(declare-fun ~b0_ev~0_94 () Int)
(declare-fun ~b0_ev~0_95 () Int)
(declare-fun ~b1_ev~0_96 () Int)
(declare-fun ~d0_ev~0_97 () Int)
(declare-fun ~d1_ev~0_98 () Int)
(declare-fun ~z_ev~0_99 () Int)
(declare-fun stop_simulation_~__retres2~0_103 () Int)
(declare-fun stop_simulation_~tmp~2_103 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_105 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_106 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_107 () Int)
(declare-fun |exists_runnable_thread_#res_107| () Int)
(declare-fun |stop_simulation_#t~ret7_108| () Int)
(declare-fun |exists_runnable_thread_#res_108| () Int)
(declare-fun |stop_simulation_#t~ret7_109| () Int)
(declare-fun stop_simulation_~tmp~2_109 () Int)
(declare-fun stop_simulation_~__retres2~0_110 () Int)
(declare-fun stop_simulation_~tmp~2_110 () Int)
(declare-fun stop_simulation_~__retres2~0_111 () Int)
(declare-fun |stop_simulation_#res_111| () Int)
(declare-fun |stop_simulation_#res_112| () Int)
(declare-fun |start_simulation_#t~ret8_112| () Int)
(declare-fun |start_simulation_#t~ret8_113| () Int)
(declare-fun start_simulation_~tmp~3_113 () Int)
(declare-fun start_simulation_~tmp~3_114 () Int)
(assert (! (and (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) (= |old(~d1_val~0)_-1| ~d1_val~0_-1) (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~d0_val~0)_-1| ~d0_val~0_-1) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1) (= |old(~b0_val~0)_-1| ~b0_val~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= v_start_simulation_~kernel_st~0_29_fresh_1 0) :named ssa_0))
(assert (! (and (= ~z_val~0_1 |old(~z_val~0)_1|) (= |old(~z_req_up~0)_1| ~z_req_up~0_1) (= |old(~d0_req_up~0)_1| ~d0_req_up~0_1) (= |old(~b1_val~0)_1| ~b1_val~0_1) (= ~b0_req_up~0_1 |old(~b0_req_up~0)_1|) (= ~d0_val~0_1 |old(~d0_val~0)_1|) (= ~b1_ev~0_1 |old(~b1_ev~0)_1|) (= ~b1_req_up~0_1 |old(~b1_req_up~0)_1|) (= ~b0_val~0_1 |old(~b0_val~0)_1|) (= ~d0_ev~0_1 |old(~d0_ev~0)_1|) (= |old(~z_ev~0)_1| ~z_ev~0_1) (= ~d1_ev~0_1 |old(~d1_ev~0)_1|) (= ~b0_ev~0_1 |old(~b0_ev~0)_1|) (= |old(~d1_req_up~0)_1| ~d1_req_up~0_1) (= |old(~d1_val~0)_1| ~d1_val~0_1)) :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_1| ~d1_ev~0_-1) (= |old(~b1_req_up~0)_1| ~b1_req_up~0_-1) (= ~d1_val~0_-1 |old(~d1_val~0)_1|) (= ~z_ev~0_-1 |old(~z_ev~0)_1|) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_1|) (= |old(~b1_ev~0)_1| ~b1_ev~0_-1) (= ~b0_ev~0_-1 |old(~b0_ev~0)_1|) (= |old(~z_val~0)_1| ~z_val~0_-1) (= |old(~b0_val~0)_1| ~b0_val~0_-1) (= ~z_req_up~0_-1 |old(~z_req_up~0)_1|) (= |old(~b1_val~0)_1| ~b1_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_1|) (= ~d0_ev~0_-1 |old(~d0_ev~0)_1|) (= ~d0_req_up~0_-1 |old(~d0_req_up~0)_1|) (= |old(~d0_val~0)_1| ~d0_val~0_-1)) :named ssa_1_OldVarAssigCall))
(assert (! (= ~b0_req_up~0_1 1) :named ssa_2))
(assert (! (and (= ~b0_req_up~0_3 |old(~b0_req_up~0)_3|) (= ~b0_val~0_3 |old(~b0_val~0)_3|) (= ~b0_ev~0_3 |old(~b0_ev~0)_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= ~b0_ev~0_1 |old(~b0_ev~0)_3|) (= |old(~b0_val~0)_3| ~b0_val~0_1) (= ~b0_req_up~0_1 |old(~b0_req_up~0)_3|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_4 0) (not (= ~b0_val_t~0_-2 ~b0_val~0_3)) (= ~b0_val_t~0_-2 ~b0_val~0_4)) :named ssa_4))
(assert (! (= ~b0_req_up~0_5 0) :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! (= ~b1_req_up~0_1 1) :named ssa_7))
(assert (! (and (= |old(~b1_val~0)_8| ~b1_val~0_8) (= ~b1_ev~0_8 |old(~b1_ev~0)_8|) (= ~b1_req_up~0_8 |old(~b1_req_up~0)_8|)) :named ssa_8_GlobVarAssigCall))
(assert (! true :named ssa_8_LocVarAssigCall))
(assert (! (and (= |old(~b1_req_up~0)_8| ~b1_req_up~0_1) (= |old(~b1_ev~0)_8| ~b1_ev~0_1) (= |old(~b1_val~0)_8| ~b1_val~0_1)) :named ssa_8_OldVarAssigCall))
(assert (! (and (= ~b1_ev~0_9 0) (not (= ~b1_val~0_8 ~b1_val_t~0_-2)) (= ~b1_val~0_9 ~b1_val_t~0_-2)) :named ssa_9))
(assert (! (= ~b1_req_up~0_10 0) :named ssa_10))
(assert (! true :named ssa_11_return))
(assert (! (= ~d0_req_up~0_1 1) :named ssa_12))
(assert (! (and (= |old(~d0_req_up~0)_13| ~d0_req_up~0_13) (= ~d0_val~0_13 |old(~d0_val~0)_13|) (= ~d0_ev~0_13 |old(~d0_ev~0)_13|)) :named ssa_13_GlobVarAssigCall))
(assert (! true :named ssa_13_LocVarAssigCall))
(assert (! (and (= ~d0_ev~0_1 |old(~d0_ev~0)_13|) (= ~d0_req_up~0_1 |old(~d0_req_up~0)_13|) (= |old(~d0_val~0)_13| ~d0_val~0_1)) :named ssa_13_OldVarAssigCall))
(assert (! (and (not (= ~d0_val_t~0_-2 ~d0_val~0_13)) (= ~d0_ev~0_14 0) (= ~d0_val_t~0_-2 ~d0_val~0_14)) :named ssa_14))
(assert (! (= ~d0_req_up~0_15 0) :named ssa_15))
(assert (! true :named ssa_16_return))
(assert (! (not (= 1 ~d1_req_up~0_1)) :named ssa_17))
(assert (! (not (= ~z_req_up~0_1 1)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! true :named ssa_20_return))
(assert (! (= ~comp_m1_st~0_21 |old(~comp_m1_st~0)_21|) :named ssa_21_GlobVarAssigCall))
(assert (! true :named ssa_21_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_21| ~comp_m1_st~0_-1) :named ssa_21_OldVarAssigCall))
(assert (! (and (not (= ~comp_m1_i~0_-2 1)) (= 2 ~comp_m1_st~0_22)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! true :named ssa_24_return))
(assert (! (and (= ~b1_ev~0_25 |old(~b1_ev~0)_25|) (= ~d0_ev~0_25 |old(~d0_ev~0)_25|) (= |old(~z_ev~0)_25| ~z_ev~0_25) (= ~d1_ev~0_25 |old(~d1_ev~0)_25|) (= ~b0_ev~0_25 |old(~b0_ev~0)_25|)) :named ssa_25_GlobVarAssigCall))
(assert (! true :named ssa_25_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_25| ~d1_ev~0_1) (= ~z_ev~0_1 |old(~z_ev~0)_25|) (= |old(~b1_ev~0)_25| ~b1_ev~0_9) (= ~b0_ev~0_4 |old(~b0_ev~0)_25|) (= ~d0_ev~0_14 |old(~d0_ev~0)_25|)) :named ssa_25_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_26 1) (= ~b0_ev~0_25 0)) :named ssa_26))
(assert (! (and (= ~b1_ev~0_25 0) (= ~b1_ev~0_27 1)) :named ssa_27))
(assert (! (not (= ~d0_ev~0_25 0)) :named ssa_28))
(assert (! (and (= ~d1_ev~0_25 0) (= ~d1_ev~0_29 1)) :named ssa_29))
(assert (! (and (= ~z_ev~0_25 0) (= ~z_ev~0_30 1)) :named ssa_30))
(assert (! true :named ssa_31))
(assert (! true :named ssa_32_return))
(assert (! (= ~comp_m1_st~0_33 |old(~comp_m1_st~0)_33|) :named ssa_33_GlobVarAssigCall))
(assert (! true :named ssa_33_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_33| ~comp_m1_st~0_22) :named ssa_33_OldVarAssigCall))
(assert (! true :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! true :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! true :named ssa_36))
(assert (! (and (= is_method1_triggered_~__retres1~0_37 1) (= ~b0_ev~0_26 1)) :named ssa_37))
(assert (! (= is_method1_triggered_~__retres1~0_37 |is_method1_triggered_#res_38|) :named ssa_38))
(assert (! (= |activate_threads_#t~ret6_39| |is_method1_triggered_#res_38|) :named ssa_39_return))
(assert (! (and (<= |activate_threads_#t~ret6_39| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_39| 2147483648)) (= activate_threads_~tmp~1_40 |activate_threads_#t~ret6_39|)) :named ssa_40))
(assert (! (= activate_threads_~tmp~1_40 0) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! true :named ssa_43_return))
(assert (! (and (= ~b1_ev~0_44 |old(~b1_ev~0)_44|) (= ~d0_ev~0_44 |old(~d0_ev~0)_44|) (= |old(~z_ev~0)_44| ~z_ev~0_44) (= ~d1_ev~0_44 |old(~d1_ev~0)_44|) (= ~b0_ev~0_44 |old(~b0_ev~0)_44|)) :named ssa_44_GlobVarAssigCall))
(assert (! true :named ssa_44_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_44| ~d1_ev~0_29) (= ~z_ev~0_30 |old(~z_ev~0)_44|) (= |old(~b1_ev~0)_44| ~b1_ev~0_27) (= ~b0_ev~0_26 |old(~b0_ev~0)_44|) (= ~d0_ev~0_25 |old(~d0_ev~0)_44|)) :named ssa_44_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_45 2) (= ~b0_ev~0_44 1)) :named ssa_45))
(assert (! (and (= ~b1_ev~0_44 1) (= 2 ~b1_ev~0_46)) :named ssa_46))
(assert (! (and (= ~d0_ev~0_44 1) (= ~d0_ev~0_47 2)) :named ssa_47))
(assert (! (and (= ~d1_ev~0_44 1) (= 2 ~d1_ev~0_48)) :named ssa_48))
(assert (! (and (= ~z_ev~0_44 1) (= 2 ~z_ev~0_49)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! true :named ssa_51_return))
(assert (! true :named ssa_52))
(assert (! (and (= |old(~z_req_up~0)_53| ~z_req_up~0_53) (= ~z_val_t~0_53 |old(~z_val_t~0)_53|) (= ~comp_m1_st~0_53 |old(~comp_m1_st~0)_53|)) :named ssa_53_GlobVarAssigCall))
(assert (! true :named ssa_53_LocVarAssigCall))
(assert (! (and (= |old(~comp_m1_st~0)_53| ~comp_m1_st~0_33) (= |old(~z_val_t~0)_53| ~z_val_t~0_-1) (= ~z_req_up~0_1 |old(~z_req_up~0)_53|)) :named ssa_53_OldVarAssigCall))
(assert (! true :named ssa_54))
(assert (! true :named ssa_55))
(assert (! true :named ssa_56_GlobVarAssigCall))
(assert (! true :named ssa_56_LocVarAssigCall))
(assert (! true :named ssa_56_OldVarAssigCall))
(assert (! true :named ssa_57))
(assert (! (and (not (= ~comp_m1_st~0_53 0)) (= exists_runnable_thread_~__retres1~1_58 0)) :named ssa_58))
(assert (! (= |exists_runnable_thread_#res_59| exists_runnable_thread_~__retres1~1_58) :named ssa_59))
(assert (! (= |eval_#t~ret4_60| |exists_runnable_thread_#res_59|) :named ssa_60_return))
(assert (! (and (<= 0 (+ |eval_#t~ret4_60| 2147483648)) (<= |eval_#t~ret4_60| 2147483647) (= |eval_#t~ret4_60| eval_~tmp___0~0_61)) :named ssa_61))
(assert (! (= eval_~tmp___0~0_61 0) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! true :named ssa_64_return))
(assert (! (= 2 v_start_simulation_~kernel_st~0_30_fresh_1) :named ssa_65))
(assert (! (and (= ~z_val~0_66 |old(~z_val~0)_66|) (= |old(~z_req_up~0)_66| ~z_req_up~0_66) (= |old(~d0_req_up~0)_66| ~d0_req_up~0_66) (= |old(~b1_val~0)_66| ~b1_val~0_66) (= ~b0_req_up~0_66 |old(~b0_req_up~0)_66|) (= ~d0_val~0_66 |old(~d0_val~0)_66|) (= ~b1_ev~0_66 |old(~b1_ev~0)_66|) (= ~b1_req_up~0_66 |old(~b1_req_up~0)_66|) (= ~b0_val~0_66 |old(~b0_val~0)_66|) (= ~d0_ev~0_66 |old(~d0_ev~0)_66|) (= |old(~z_ev~0)_66| ~z_ev~0_66) (= ~d1_ev~0_66 |old(~d1_ev~0)_66|) (= ~b0_ev~0_66 |old(~b0_ev~0)_66|) (= |old(~d1_req_up~0)_66| ~d1_req_up~0_66) (= |old(~d1_val~0)_66| ~d1_val~0_66)) :named ssa_66_GlobVarAssigCall))
(assert (! true :named ssa_66_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_66| ~d1_ev~0_48) (= |old(~b1_req_up~0)_66| ~b1_req_up~0_10) (= ~d1_val~0_1 |old(~d1_val~0)_66|) (= ~z_ev~0_49 |old(~z_ev~0)_66|) (= ~d1_req_up~0_1 |old(~d1_req_up~0)_66|) (= |old(~b1_ev~0)_66| ~b1_ev~0_46) (= ~b0_ev~0_45 |old(~b0_ev~0)_66|) (= |old(~z_val~0)_66| ~z_val~0_1) (= |old(~b0_val~0)_66| ~b0_val~0_4) (= ~z_req_up~0_53 |old(~z_req_up~0)_66|) (= |old(~b1_val~0)_66| ~b1_val~0_9) (= ~b0_req_up~0_5 |old(~b0_req_up~0)_66|) (= ~d0_ev~0_47 |old(~d0_ev~0)_66|) (= ~d0_req_up~0_15 |old(~d0_req_up~0)_66|) (= |old(~d0_val~0)_66| ~d0_val~0_14)) :named ssa_66_OldVarAssigCall))
(assert (! (not (= ~b0_req_up~0_66 1)) :named ssa_67))
(assert (! (not (= ~b1_req_up~0_66 1)) :named ssa_68))
(assert (! (not (= ~d0_req_up~0_66 1)) :named ssa_69))
(assert (! (not (= 1 ~d1_req_up~0_66)) :named ssa_70))
(assert (! (not (= ~z_req_up~0_66 1)) :named ssa_71))
(assert (! true :named ssa_72))
(assert (! true :named ssa_73_return))
(assert (! (= 3 v_start_simulation_~kernel_st~0_31_fresh_1) :named ssa_74))
(assert (! (and (= ~b1_ev~0_75 |old(~b1_ev~0)_75|) (= ~d0_ev~0_75 |old(~d0_ev~0)_75|) (= |old(~z_ev~0)_75| ~z_ev~0_75) (= ~d1_ev~0_75 |old(~d1_ev~0)_75|) (= ~b0_ev~0_75 |old(~b0_ev~0)_75|)) :named ssa_75_GlobVarAssigCall))
(assert (! true :named ssa_75_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_75| ~d1_ev~0_66) (= ~z_ev~0_66 |old(~z_ev~0)_75|) (= |old(~b1_ev~0)_75| ~b1_ev~0_66) (= ~b0_ev~0_66 |old(~b0_ev~0)_75|) (= ~d0_ev~0_66 |old(~d0_ev~0)_75|)) :named ssa_75_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_76 1) (= ~b0_ev~0_75 0)) :named ssa_76))
(assert (! (and (= ~b1_ev~0_75 0) (= ~b1_ev~0_77 1)) :named ssa_77))
(assert (! (not (= ~d0_ev~0_75 0)) :named ssa_78))
(assert (! (and (= ~d1_ev~0_75 0) (= ~d1_ev~0_79 1)) :named ssa_79))
(assert (! (and (= ~z_ev~0_75 0) (= ~z_ev~0_80 1)) :named ssa_80))
(assert (! true :named ssa_81))
(assert (! true :named ssa_82_return))
(assert (! (= ~comp_m1_st~0_83 |old(~comp_m1_st~0)_83|) :named ssa_83_GlobVarAssigCall))
(assert (! true :named ssa_83_LocVarAssigCall))
(assert (! (= |old(~comp_m1_st~0)_83| ~comp_m1_st~0_53) :named ssa_83_OldVarAssigCall))
(assert (! true :named ssa_84))
(assert (! true :named ssa_85_GlobVarAssigCall))
(assert (! true :named ssa_85_LocVarAssigCall))
(assert (! true :named ssa_85_OldVarAssigCall))
(assert (! true :named ssa_86))
(assert (! (and (= is_method1_triggered_~__retres1~0_87 1) (= ~b0_ev~0_76 1)) :named ssa_87))
(assert (! (= is_method1_triggered_~__retres1~0_87 |is_method1_triggered_#res_88|) :named ssa_88))
(assert (! (= |activate_threads_#t~ret6_89| |is_method1_triggered_#res_88|) :named ssa_89_return))
(assert (! (and (<= |activate_threads_#t~ret6_89| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_89| 2147483648)) (= activate_threads_~tmp~1_90 |activate_threads_#t~ret6_89|)) :named ssa_90))
(assert (! (and (not (= activate_threads_~tmp~1_90 0)) (= ~comp_m1_st~0_91 0)) :named ssa_91))
(assert (! true :named ssa_92))
(assert (! true :named ssa_93_return))
(assert (! (and (= ~b1_ev~0_94 |old(~b1_ev~0)_94|) (= ~d0_ev~0_94 |old(~d0_ev~0)_94|) (= |old(~z_ev~0)_94| ~z_ev~0_94) (= ~d1_ev~0_94 |old(~d1_ev~0)_94|) (= ~b0_ev~0_94 |old(~b0_ev~0)_94|)) :named ssa_94_GlobVarAssigCall))
(assert (! true :named ssa_94_LocVarAssigCall))
(assert (! (and (= |old(~d1_ev~0)_94| ~d1_ev~0_79) (= ~z_ev~0_80 |old(~z_ev~0)_94|) (= |old(~b1_ev~0)_94| ~b1_ev~0_77) (= ~b0_ev~0_76 |old(~b0_ev~0)_94|) (= ~d0_ev~0_75 |old(~d0_ev~0)_94|)) :named ssa_94_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_95 2) (= ~b0_ev~0_94 1)) :named ssa_95))
(assert (! (and (= ~b1_ev~0_94 1) (= 2 ~b1_ev~0_96)) :named ssa_96))
(assert (! (and (= ~d0_ev~0_94 1) (= ~d0_ev~0_97 2)) :named ssa_97))
(assert (! (and (= ~d1_ev~0_94 1) (= 2 ~d1_ev~0_98)) :named ssa_98))
(assert (! (and (= ~z_ev~0_94 1) (= 2 ~z_ev~0_99)) :named ssa_99))
(assert (! true :named ssa_100))
(assert (! true :named ssa_101_return))
(assert (! true :named ssa_102_GlobVarAssigCall))
(assert (! true :named ssa_102_LocVarAssigCall))
(assert (! true :named ssa_102_OldVarAssigCall))
(assert (! true :named ssa_103))
(assert (! true :named ssa_104_GlobVarAssigCall))
(assert (! true :named ssa_104_LocVarAssigCall))
(assert (! true :named ssa_104_OldVarAssigCall))
(assert (! true :named ssa_105))
(assert (! (and (= ~comp_m1_st~0_91 0) (= exists_runnable_thread_~__retres1~1_106 1)) :named ssa_106))
(assert (! (= |exists_runnable_thread_#res_107| exists_runnable_thread_~__retres1~1_106) :named ssa_107))
(assert (! (= |stop_simulation_#t~ret7_108| |exists_runnable_thread_#res_107|) :named ssa_108_return))
(assert (! (and (<= |stop_simulation_#t~ret7_108| 2147483647) (<= 0 (+ |stop_simulation_#t~ret7_108| 2147483648)) (= |stop_simulation_#t~ret7_108| stop_simulation_~tmp~2_109)) :named ssa_109))
(assert (! (and (not (= stop_simulation_~tmp~2_109 0)) (= stop_simulation_~__retres2~0_110 0)) :named ssa_110))
(assert (! (= stop_simulation_~__retres2~0_110 |stop_simulation_#res_111|) :named ssa_111))
(assert (! (= |start_simulation_#t~ret8_112| |stop_simulation_#res_111|) :named ssa_112_return))
(assert (! (and (= |start_simulation_#t~ret8_112| start_simulation_~tmp~3_113) (<= |start_simulation_#t~ret8_112| 2147483647) (<= 0 (+ |start_simulation_#t~ret8_112| 2147483648))) :named ssa_113))
(assert (! (not (= start_simulation_~tmp~3_113 0)) :named ssa_114))
(assert (! true :named ssa_115))
(assert (! true :named ssa_116_return))
(assert (! (= ~d1_req_up~0_-2 1) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-2) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= ~d1_val~0_-2 |old(~d1_val~0)_-1|) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= ~d1_req_up~0_-2 |old(~d1_req_up~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-2) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|) (= |old(~b1_val~0)_-1| ~b1_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_3_OldVarAssigCall ssa_11_return ssa_7 ssa_3_LocVarAssigCall ssa_8_GlobVarAssigCall ssa_1_GlobVarAssigCall ssa_10 ssa_14 ssa_13_LocVarAssigCall ssa_9 ssa_6_return ssa_13_OldVarAssigCall ssa_3_GlobVarAssigCall ssa_19 ssa_20_return ssa_13_GlobVarAssigCall ssa_1_OldVarAssigCall ssa_12 ssa_5 ssa_8_OldVarAssigCall ssa_4 ssa_15 ssa_1_LocVarAssigCall ssa_16_return ssa_18 ssa_17 ssa_8_LocVarAssigCall ssa_2) (and ssa_21_LocVarAssigCall ssa_21_OldVarAssigCall ssa_24_return ssa_22 ssa_23 ssa_21_GlobVarAssigCall) (and ssa_27 ssa_31 ssa_26 ssa_25_GlobVarAssigCall ssa_25_OldVarAssigCall ssa_25_LocVarAssigCall ssa_32_return ssa_28 ssa_29 ssa_30) (and ssa_35_LocVarAssigCall ssa_34 ssa_40 ssa_35_GlobVarAssigCall ssa_39_return ssa_33_GlobVarAssigCall ssa_33_LocVarAssigCall ssa_37 ssa_43_return ssa_38 ssa_36 ssa_35_OldVarAssigCall ssa_33_OldVarAssigCall ssa_41 ssa_42) (and ssa_44_LocVarAssigCall ssa_45 ssa_46 ssa_51_return ssa_47 ssa_44_OldVarAssigCall ssa_44_GlobVarAssigCall ssa_50 ssa_48 ssa_49) ssa_52 (and ssa_57 ssa_55 ssa_56_GlobVarAssigCall ssa_53_GlobVarAssigCall ssa_56_OldVarAssigCall ssa_56_LocVarAssigCall ssa_58 ssa_61 ssa_59 ssa_53_LocVarAssigCall ssa_62 ssa_60_return ssa_64_return ssa_53_OldVarAssigCall ssa_54 ssa_63) ssa_65 (and ssa_68 ssa_67 ssa_66_LocVarAssigCall ssa_73_return ssa_72 ssa_66_OldVarAssigCall ssa_70 ssa_69 ssa_66_GlobVarAssigCall ssa_71) ssa_74 (and ssa_77 ssa_76 ssa_81 ssa_75_LocVarAssigCall ssa_75_GlobVarAssigCall ssa_79 ssa_82_return ssa_80 ssa_75_OldVarAssigCall ssa_78) (and ssa_89_return ssa_88 ssa_84 ssa_83_GlobVarAssigCall ssa_85_OldVarAssigCall ssa_85_GlobVarAssigCall ssa_90 ssa_93_return ssa_85_LocVarAssigCall ssa_86 ssa_87 ssa_83_OldVarAssigCall ssa_91 ssa_92 ssa_83_LocVarAssigCall) (and ssa_95 ssa_99 ssa_100 ssa_96 ssa_94_LocVarAssigCall ssa_101_return ssa_97 ssa_94_OldVarAssigCall ssa_98 ssa_94_GlobVarAssigCall) (and ssa_102_LocVarAssigCall ssa_109 ssa_102_GlobVarAssigCall ssa_104_GlobVarAssigCall ssa_112_return ssa_111 ssa_102_OldVarAssigCall ssa_105 ssa_104_LocVarAssigCall ssa_110 ssa_104_OldVarAssigCall ssa_103 ssa_106 ssa_107 ssa_108_return) ssa_113 ssa_114 ssa_115 (and ssa_-2_PendingContext ssa_116_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun |old(~b0_req_up~0)_1| () Int)
(declare-fun |old(~b0_val~0)_1| () Int)
(declare-fun |old(~b0_ev~0)_1| () Int)
(declare-fun ~b0_req_up~0_1 () Int)
(declare-fun ~b0_val~0_1 () Int)
(declare-fun ~b0_ev~0_1 () Int)
(declare-fun ~b0_val_t~0_-1 () Int)
(declare-fun ~b0_val~0_2 () Int)
(declare-fun ~b0_ev~0_2 () Int)
(declare-fun ~b0_req_up~0_3 () Int)
(declare-fun |old(~b1_req_up~0)_6| () Int)
(declare-fun |old(~b1_val~0)_6| () Int)
(declare-fun |old(~b1_ev~0)_6| () Int)
(declare-fun ~b1_req_up~0_6 () Int)
(declare-fun ~b1_val~0_6 () Int)
(declare-fun ~b1_ev~0_6 () Int)
(declare-fun ~b1_val_t~0_-1 () Int)
(declare-fun ~b1_val~0_7 () Int)
(declare-fun ~b1_ev~0_7 () Int)
(declare-fun ~b1_req_up~0_8 () Int)
(declare-fun |old(~d0_req_up~0)_11| () Int)
(declare-fun |old(~d0_ev~0)_11| () Int)
(declare-fun |old(~d0_val~0)_11| () Int)
(declare-fun ~d0_req_up~0_11 () Int)
(declare-fun ~d0_ev~0_11 () Int)
(declare-fun ~d0_val~0_11 () Int)
(declare-fun ~d0_val_t~0_-1 () Int)
(declare-fun ~d0_ev~0_12 () Int)
(declare-fun ~d0_val~0_12 () Int)
(declare-fun ~d0_req_up~0_13 () Int)
(assert (! (and (= |old(~d1_val~0)_-1| ~d1_val~0_-1) (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~d0_val~0)_-1| ~d0_val~0_-1) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1) (= |old(~b0_val~0)_-1| ~b0_val~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_-1|)) :named ssa_precond))
(assert (! (not (not (= ~b0_ev~0_2 1))) :named ssa_postcond))
(assert (! (= ~b0_req_up~0_-1 1) :named ssa_0))
(assert (! (and (= ~b0_req_up~0_1 |old(~b0_req_up~0)_1|) (= ~b0_val~0_1 |old(~b0_val~0)_1|) (= ~b0_ev~0_1 |old(~b0_ev~0)_1|)) :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! (and (= ~b0_ev~0_-1 |old(~b0_ev~0)_1|) (= |old(~b0_val~0)_1| ~b0_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_1|)) :named ssa_1_OldVarAssigCall))
(assert (! (and (= ~b0_ev~0_2 0) (not (= ~b0_val_t~0_-1 ~b0_val~0_1)) (= ~b0_val_t~0_-1 ~b0_val~0_2)) :named ssa_2))
(assert (! (= ~b0_req_up~0_3 0) :named ssa_3))
(assert (! true :named ssa_4_return))
(assert (! (= ~b1_req_up~0_-1 1) :named ssa_5))
(assert (! (and (= |old(~b1_val~0)_6| ~b1_val~0_6) (= ~b1_ev~0_6 |old(~b1_ev~0)_6|) (= ~b1_req_up~0_6 |old(~b1_req_up~0)_6|)) :named ssa_6_GlobVarAssigCall))
(assert (! true :named ssa_6_LocVarAssigCall))
(assert (! (and (= |old(~b1_req_up~0)_6| ~b1_req_up~0_-1) (= |old(~b1_ev~0)_6| ~b1_ev~0_-1) (= |old(~b1_val~0)_6| ~b1_val~0_-1)) :named ssa_6_OldVarAssigCall))
(assert (! (and (= ~b1_ev~0_7 0) (not (= ~b1_val~0_6 ~b1_val_t~0_-1)) (= ~b1_val~0_7 ~b1_val_t~0_-1)) :named ssa_7))
(assert (! (= ~b1_req_up~0_8 0) :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! (= ~d0_req_up~0_-1 1) :named ssa_10))
(assert (! (and (= |old(~d0_req_up~0)_11| ~d0_req_up~0_11) (= ~d0_val~0_11 |old(~d0_val~0)_11|) (= ~d0_ev~0_11 |old(~d0_ev~0)_11|)) :named ssa_11_GlobVarAssigCall))
(assert (! true :named ssa_11_LocVarAssigCall))
(assert (! (and (= ~d0_ev~0_-1 |old(~d0_ev~0)_11|) (= ~d0_req_up~0_-1 |old(~d0_req_up~0)_11|) (= |old(~d0_val~0)_11| ~d0_val~0_-1)) :named ssa_11_OldVarAssigCall))
(assert (! (and (not (= ~d0_val_t~0_-1 ~d0_val~0_11)) (= ~d0_ev~0_12 0) (= ~d0_val_t~0_-1 ~d0_val~0_12)) :named ssa_12))
(assert (! (= ~d0_req_up~0_13 0) :named ssa_13))
(assert (! true :named ssa_14_return))
(assert (! (not (= 1 ~d1_req_up~0_-1)) :named ssa_15))
(assert (! (not (= ~z_req_up~0_-1 1)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! true :named ssa_18_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= ~d1_val~0_-2 |old(~d1_val~0)_-1|) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= ~d1_req_up~0_-2 |old(~d1_req_up~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-2) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|) (= |old(~b1_val~0)_-1| ~b1_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_1_GlobVarAssigCall ssa_4_return ssa_3 ssa_1_OldVarAssigCall ssa_1_LocVarAssigCall ssa_2) ssa_5 (and ssa_7 ssa_8 ssa_6_OldVarAssigCall ssa_6_GlobVarAssigCall ssa_6_LocVarAssigCall ssa_9_return) ssa_10 (and ssa_13 ssa_11_LocVarAssigCall ssa_12 ssa_11_OldVarAssigCall ssa_11_GlobVarAssigCall ssa_14_return) ssa_15 ssa_16 ssa_17 (and ssa_18_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~b0_val_t~0_-1 () Int)
(declare-fun ~b0_val~0_0 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~b0_req_up~0_1 () Int)
(assert (! (and (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= |old(~b0_val~0)_-1| ~b0_val~0_-1)) :named ssa_precond))
(assert (! (not (<= ~b0_ev~0_0 0)) :named ssa_postcond))
(assert (! (and (= ~b0_ev~0_0 0) (not (= ~b0_val_t~0_-1 ~b0_val~0_-1)) (= ~b0_val_t~0_-1 ~b0_val~0_0)) :named ssa_0))
(assert (! (= ~b0_req_up~0_1 0) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_2_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~b1_val_t~0_-1 () Int)
(declare-fun ~b1_val~0_0 () Int)
(declare-fun ~b1_ev~0_0 () Int)
(declare-fun ~b1_req_up~0_1 () Int)
(assert (! (and (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1)) :named ssa_precond))
(assert (! (not (<= ~b0_ev~0_-2 0)) :named ssa_postcond))
(assert (! (and (= ~b1_ev~0_0 0) (not (= ~b1_val~0_-1 ~b1_val_t~0_-1)) (= ~b1_val~0_0 ~b1_val_t~0_-1)) :named ssa_0))
(assert (! (= ~b1_req_up~0_1 0) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (<= ~b0_ev~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= |old(~b1_val~0)_-1| ~b1_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_2_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~d0_val_t~0_-1 () Int)
(declare-fun ~d0_ev~0_0 () Int)
(declare-fun ~d0_val~0_0 () Int)
(declare-fun ~d0_req_up~0_1 () Int)
(assert (! (and (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~d0_val~0)_-1| ~d0_val~0_-1)) :named ssa_precond))
(assert (! (not (<= ~b0_ev~0_-2 0)) :named ssa_postcond))
(assert (! (and (not (= ~d0_val_t~0_-1 ~d0_val~0_-1)) (= ~d0_ev~0_0 0) (= ~d0_val_t~0_-1 ~d0_val~0_0)) :named ssa_0))
(assert (! (= ~d0_req_up~0_1 0) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (<= ~b0_ev~0_-2 0) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_2_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun ~comp_m1_i~0_-1 () Int)
(declare-fun ~comp_m1_st~0_0 () Int)
(assert (! (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) :named ssa_precond))
(assert (! (not (not (= ~b0_ev~0_-2 1))) :named ssa_postcond))
(assert (! (and (not (= ~comp_m1_i~0_-1 1)) (= 2 ~comp_m1_st~0_0)) :named ssa_0))
(assert (! true :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (not (= ~b0_ev~0_-2 1)) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_2_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d1_ev~0_3 () Int)
(declare-fun ~z_ev~0_4 () Int)
(assert (! (and (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1)) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ~b0_ev~0_0 1) (= ~b0_ev~0_-1 0)) :named ssa_0))
(assert (! (and (= ~b1_ev~0_-1 0) (= ~b1_ev~0_1 1)) :named ssa_1))
(assert (! (not (= ~d0_ev~0_-1 0)) :named ssa_2))
(assert (! (and (= ~d1_ev~0_-1 0) (= ~d1_ev~0_3 1)) :named ssa_3))
(assert (! (and (= ~z_ev~0_-1 0) (= ~z_ev~0_4 1)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! (not (= ~b0_ev~0_-2 1)) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_-2_PendingContext ssa_6_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun activate_threads_~tmp~1_0 () Int)
(declare-fun is_method1_triggered_~__retres1~0_2 () Int)
(declare-fun is_method1_triggered_~__retres1~0_3 () Int)
(declare-fun is_method1_triggered_~__retres1~0_4 () Int)
(declare-fun |is_method1_triggered_#res_4| () Int)
(declare-fun |activate_threads_#t~ret6_5| () Int)
(declare-fun |is_method1_triggered_#res_5| () Int)
(declare-fun activate_threads_~tmp~1_6 () Int)
(declare-fun |activate_threads_#t~ret6_6| () Int)
(declare-fun activate_threads_~tmp~1_7 () Int)
(assert (! (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! true :named ssa_1_OldVarAssigCall))
(assert (! true :named ssa_2))
(assert (! (and (= is_method1_triggered_~__retres1~0_3 1) (= ~b0_ev~0_-2 1)) :named ssa_3))
(assert (! (= is_method1_triggered_~__retres1~0_3 |is_method1_triggered_#res_4|) :named ssa_4))
(assert (! (= |activate_threads_#t~ret6_5| |is_method1_triggered_#res_4|) :named ssa_5_return))
(assert (! (and (<= |activate_threads_#t~ret6_5| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_5| 2147483648)) (= activate_threads_~tmp~1_6 |activate_threads_#t~ret6_5|)) :named ssa_6))
(assert (! (= activate_threads_~tmp~1_6 0) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_1_GlobVarAssigCall ssa_5_return ssa_3 ssa_1_OldVarAssigCall ssa_4 ssa_1_LocVarAssigCall ssa_2) ssa_6 ssa_7 ssa_8 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_9_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun is_method1_triggered_~__retres1~0_0 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun is_method1_triggered_~__retres1~0_1 () Int)
(declare-fun is_method1_triggered_~__retres1~0_2 () Int)
(declare-fun |is_method1_triggered_#res_2| () Int)
(declare-fun |activate_threads_#t~ret6_3| () Int)
(declare-fun |is_method1_triggered_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 1 |activate_threads_#t~ret6_3|)) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (= is_method1_triggered_~__retres1~0_1 1) (= ~b0_ev~0_-1 1)) :named ssa_1))
(assert (! (= is_method1_triggered_~__retres1~0_1 |is_method1_triggered_#res_2|) :named ssa_2))
(assert (! (= |activate_threads_#t~ret6_3| |is_method1_triggered_#res_2|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d0_ev~0_2 () Int)
(declare-fun ~d1_ev~0_3 () Int)
(declare-fun ~z_ev~0_4 () Int)
(assert (! (and (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~b0_ev~0_0 2) (= ~b0_ev~0_-1 1)) :named ssa_0))
(assert (! (and (= ~b1_ev~0_-1 1) (= 2 ~b1_ev~0_1)) :named ssa_1))
(assert (! (and (= ~d0_ev~0_-1 1) (= ~d0_ev~0_2 2)) :named ssa_2))
(assert (! (and (= ~d1_ev~0_-1 1) (= 2 ~d1_ev~0_3)) :named ssa_3))
(assert (! (and (= ~z_ev~0_-1 1) (= 2 ~z_ev~0_4)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_-2_PendingContext ssa_6_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-1| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun ~z_val_t~0_-1 () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun eval_~tmp___0~0_0 () Int)
(declare-fun eval_~tmp~0_0 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_3 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_4 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_5 () Int)
(declare-fun |exists_runnable_thread_#res_5| () Int)
(declare-fun |eval_#t~ret4_6| () Int)
(declare-fun |exists_runnable_thread_#res_6| () Int)
(declare-fun eval_~tmp___0~0_7 () Int)
(declare-fun |eval_#t~ret4_7| () Int)
(declare-fun eval_~tmp___0~0_8 () Int)
(assert (! (and (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! true :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! true :named ssa_3))
(assert (! (and (not (= ~comp_m1_st~0_-1 0)) (= exists_runnable_thread_~__retres1~1_4 0)) :named ssa_4))
(assert (! (= |exists_runnable_thread_#res_5| exists_runnable_thread_~__retres1~1_4) :named ssa_5))
(assert (! (= |eval_#t~ret4_6| |exists_runnable_thread_#res_5|) :named ssa_6_return))
(assert (! (and (<= 0 (+ |eval_#t~ret4_6| 2147483648)) (<= |eval_#t~ret4_6| 2147483647) (= |eval_#t~ret4_6| eval_~tmp___0~0_7)) :named ssa_7))
(assert (! (= eval_~tmp___0~0_7 0) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! true :named ssa_10_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) (= |old(~z_val_t~0)_-1| ~z_val_t~0_-2) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_2_OldVarAssigCall ssa_6_return ssa_2_GlobVarAssigCall ssa_3 ssa_5 ssa_2_LocVarAssigCall ssa_4) ssa_7 ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun exists_runnable_thread_~__retres1~1_0 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_1 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_2 () Int)
(declare-fun |exists_runnable_thread_#res_2| () Int)
(declare-fun |eval_#t~ret4_3| () Int)
(declare-fun |exists_runnable_thread_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (not (= ~comp_m1_st~0_-2 0)) (= exists_runnable_thread_~__retres1~1_1 0)) :named ssa_1))
(assert (! (= |exists_runnable_thread_#res_2| exists_runnable_thread_~__retres1~1_1) :named ssa_2))
(assert (! (= |eval_#t~ret4_3| |exists_runnable_thread_#res_2|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~z_val~0)_-1| () Int)
(declare-fun |old(~d1_req_up~0)_-1| () Int)
(declare-fun |old(~b0_val~0)_-1| () Int)
(declare-fun |old(~b1_val~0)_-1| () Int)
(declare-fun |old(~d0_req_up~0)_-1| () Int)
(declare-fun |old(~d0_val~0)_-1| () Int)
(declare-fun |old(~z_req_up~0)_-1| () Int)
(declare-fun |old(~d1_val~0)_-1| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~b0_req_up~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_req_up~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~z_val~0_-1 () Int)
(declare-fun ~d1_req_up~0_-1 () Int)
(declare-fun ~b0_val~0_-1 () Int)
(declare-fun ~b1_val~0_-1 () Int)
(declare-fun ~d0_req_up~0_-1 () Int)
(declare-fun ~d0_val~0_-1 () Int)
(declare-fun ~z_req_up~0_-1 () Int)
(declare-fun ~d1_val~0_-1 () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~b0_req_up~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_req_up~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(assert (! (and (= |old(~d1_val~0)_-1| ~d1_val~0_-1) (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-1) (= ~b0_req_up~0_-1 |old(~b0_req_up~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= ~b1_val~0_-1 |old(~b1_val~0)_-1|) (= |old(~d0_req_up~0)_-1| ~d0_req_up~0_-1) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~d0_val~0)_-1| ~d0_val~0_-1) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-1) (= |old(~z_req_up~0)_-1| ~z_req_up~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1) (= |old(~b0_val~0)_-1| ~b0_val~0_-1) (= ~d1_req_up~0_-1 |old(~d1_req_up~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (not (= ~b0_req_up~0_-1 1)) :named ssa_0))
(assert (! (not (= ~b1_req_up~0_-1 1)) :named ssa_1))
(assert (! (not (= ~d0_req_up~0_-1 1)) :named ssa_2))
(assert (! (not (= 1 ~d1_req_up~0_-1)) :named ssa_3))
(assert (! (not (= ~z_req_up~0_-1 1)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= |old(~b1_req_up~0)_-1| ~b1_req_up~0_-2) (= ~d1_val~0_-2 |old(~d1_val~0)_-1|) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= ~d1_req_up~0_-2 |old(~d1_req_up~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= |old(~z_val~0)_-1| ~z_val~0_-2) (= |old(~b0_val~0)_-1| ~b0_val~0_-2) (= ~z_req_up~0_-2 |old(~z_req_up~0)_-1|) (= |old(~b1_val~0)_-1| ~b1_val~0_-2) (= ~b0_req_up~0_-2 |old(~b0_req_up~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|) (= ~d0_req_up~0_-2 |old(~d0_req_up~0)_-1|) (= |old(~d0_val~0)_-1| ~d0_val~0_-2)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_-2_PendingContext ssa_6_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d1_ev~0_3 () Int)
(declare-fun ~z_ev~0_4 () Int)
(assert (! (and (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~b0_ev~0_0 1) (= ~b0_ev~0_-1 0)) :named ssa_0))
(assert (! (and (= ~b1_ev~0_-1 0) (= ~b1_ev~0_1 1)) :named ssa_1))
(assert (! (not (= ~d0_ev~0_-1 0)) :named ssa_2))
(assert (! (and (= ~d1_ev~0_-1 0) (= ~d1_ev~0_3 1)) :named ssa_3))
(assert (! (and (= ~z_ev~0_-1 0) (= ~z_ev~0_4 1)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_-2_PendingContext ssa_6_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-1| () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun activate_threads_~tmp~1_0 () Int)
(declare-fun is_method1_triggered_~__retres1~0_2 () Int)
(declare-fun is_method1_triggered_~__retres1~0_3 () Int)
(declare-fun is_method1_triggered_~__retres1~0_4 () Int)
(declare-fun |is_method1_triggered_#res_4| () Int)
(declare-fun |activate_threads_#t~ret6_5| () Int)
(declare-fun |is_method1_triggered_#res_5| () Int)
(declare-fun activate_threads_~tmp~1_6 () Int)
(declare-fun |activate_threads_#t~ret6_6| () Int)
(declare-fun activate_threads_~tmp~1_7 () Int)
(declare-fun ~comp_m1_st~0_7 () Int)
(assert (! (= ~comp_m1_st~0_-1 |old(~comp_m1_st~0)_-1|) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! true :named ssa_1_OldVarAssigCall))
(assert (! true :named ssa_2))
(assert (! (and (= is_method1_triggered_~__retres1~0_3 1) (= ~b0_ev~0_-2 1)) :named ssa_3))
(assert (! (= is_method1_triggered_~__retres1~0_3 |is_method1_triggered_#res_4|) :named ssa_4))
(assert (! (= |activate_threads_#t~ret6_5| |is_method1_triggered_#res_4|) :named ssa_5_return))
(assert (! (and (<= |activate_threads_#t~ret6_5| 2147483647) (<= 0 (+ |activate_threads_#t~ret6_5| 2147483648)) (= activate_threads_~tmp~1_6 |activate_threads_#t~ret6_5|)) :named ssa_6))
(assert (! (and (not (= activate_threads_~tmp~1_6 0)) (= ~comp_m1_st~0_7 0)) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~comp_m1_st~0)_-1| ~comp_m1_st~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_1_GlobVarAssigCall ssa_5_return ssa_3 ssa_1_OldVarAssigCall ssa_4 ssa_1_LocVarAssigCall ssa_2) ssa_6 ssa_7 ssa_8 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_9_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun is_method1_triggered_~__retres1~0_0 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun is_method1_triggered_~__retres1~0_1 () Int)
(declare-fun is_method1_triggered_~__retres1~0_2 () Int)
(declare-fun |is_method1_triggered_#res_2| () Int)
(declare-fun |activate_threads_#t~ret6_3| () Int)
(declare-fun |is_method1_triggered_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (= is_method1_triggered_~__retres1~0_1 1) (= ~b0_ev~0_-1 1)) :named ssa_1))
(assert (! (= is_method1_triggered_~__retres1~0_1 |is_method1_triggered_#res_2|) :named ssa_2))
(assert (! (= |activate_threads_#t~ret6_3| |is_method1_triggered_#res_2|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-1| () Int)
(declare-fun |old(~z_ev~0)_-1| () Int)
(declare-fun |old(~b1_ev~0)_-1| () Int)
(declare-fun |old(~d0_ev~0)_-1| () Int)
(declare-fun |old(~b0_ev~0)_-1| () Int)
(declare-fun ~d1_ev~0_-1 () Int)
(declare-fun ~z_ev~0_-1 () Int)
(declare-fun ~b1_ev~0_-1 () Int)
(declare-fun ~d0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_-1 () Int)
(declare-fun ~b0_ev~0_0 () Int)
(declare-fun ~b1_ev~0_1 () Int)
(declare-fun ~d0_ev~0_2 () Int)
(declare-fun ~d1_ev~0_3 () Int)
(declare-fun ~z_ev~0_4 () Int)
(assert (! (and (= ~d1_ev~0_-1 |old(~d1_ev~0)_-1|) (= ~b0_ev~0_-1 |old(~b0_ev~0)_-1|) (= |old(~d0_ev~0)_-1| ~d0_ev~0_-1) (= |old(~z_ev~0)_-1| ~z_ev~0_-1) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~b0_ev~0_0 2) (= ~b0_ev~0_-1 1)) :named ssa_0))
(assert (! (and (= ~b1_ev~0_-1 1) (= 2 ~b1_ev~0_1)) :named ssa_1))
(assert (! (and (= ~d0_ev~0_-1 1) (= ~d0_ev~0_2 2)) :named ssa_2))
(assert (! (and (= ~d1_ev~0_-1 1) (= 2 ~d1_ev~0_3)) :named ssa_3))
(assert (! (and (= ~z_ev~0_-1 1) (= 2 ~z_ev~0_4)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! true :named ssa_6_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~d1_ev~0)_-1| ~d1_ev~0_-2) (= ~z_ev~0_-2 |old(~z_ev~0)_-1|) (= |old(~b1_ev~0)_-1| ~b1_ev~0_-2) (= ~b0_ev~0_-2 |old(~b0_ev~0)_-1|) (= ~d0_ev~0_-2 |old(~d0_ev~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 (and ssa_-2_PendingContext ssa_6_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~z_val~0_-2 () Int)
(declare-fun ~z_val_t~0_-2 () Int)
(declare-fun ~d1_req_up~0_-2 () Int)
(declare-fun ~b0_val~0_-2 () Int)
(declare-fun ~b1_val~0_-2 () Int)
(declare-fun ~d0_req_up~0_-2 () Int)
(declare-fun ~d0_val~0_-2 () Int)
(declare-fun ~z_req_up~0_-2 () Int)
(declare-fun ~d1_val~0_-2 () Int)
(declare-fun ~d1_ev~0_-2 () Int)
(declare-fun ~b0_req_up~0_-2 () Int)
(declare-fun ~z_ev~0_-2 () Int)
(declare-fun ~b1_req_up~0_-2 () Int)
(declare-fun ~b1_ev~0_-2 () Int)
(declare-fun ~d0_ev~0_-2 () Int)
(declare-fun ~b0_ev~0_-2 () Int)
(declare-fun ~comp_m1_st~0_-2 () Int)
(declare-fun |old(~z_val~0)_-2| () Int)
(declare-fun |old(~z_val_t~0)_-2| () Int)
(declare-fun |old(~d1_req_up~0)_-2| () Int)
(declare-fun |old(~b0_val~0)_-2| () Int)
(declare-fun |old(~b1_val~0)_-2| () Int)
(declare-fun |old(~d0_req_up~0)_-2| () Int)
(declare-fun |old(~d0_val~0)_-2| () Int)
(declare-fun |old(~z_req_up~0)_-2| () Int)
(declare-fun |old(~d1_val~0)_-2| () Int)
(declare-fun |old(~d1_ev~0)_-2| () Int)
(declare-fun |old(~b0_req_up~0)_-2| () Int)
(declare-fun |old(~z_ev~0)_-2| () Int)
(declare-fun |old(~b1_req_up~0)_-2| () Int)
(declare-fun |old(~b1_ev~0)_-2| () Int)
(declare-fun |old(~d0_ev~0)_-2| () Int)
(declare-fun |old(~b0_ev~0)_-2| () Int)
(declare-fun |old(~comp_m1_st~0)_-2| () Int)
(declare-fun stop_simulation_~__retres2~0_0 () Int)
(declare-fun stop_simulation_~tmp~2_0 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_2 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_3 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_4 () Int)
(declare-fun |exists_runnable_thread_#res_4| () Int)
(declare-fun |stop_simulation_#t~ret7_5| () Int)
(declare-fun |exists_runnable_thread_#res_5| () Int)
(declare-fun |stop_simulation_#t~ret7_6| () Int)
(declare-fun stop_simulation_~tmp~2_6 () Int)
(declare-fun stop_simulation_~__retres2~0_7 () Int)
(declare-fun stop_simulation_~tmp~2_7 () Int)
(declare-fun stop_simulation_~__retres2~0_8 () Int)
(declare-fun |stop_simulation_#res_8| () Int)
(declare-fun |stop_simulation_#res_9| () Int)
(declare-fun |start_simulation_#t~ret8_9| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! true :named ssa_1_OldVarAssigCall))
(assert (! true :named ssa_2))
(assert (! (and (= ~comp_m1_st~0_-2 0) (= exists_runnable_thread_~__retres1~1_3 1)) :named ssa_3))
(assert (! (= |exists_runnable_thread_#res_4| exists_runnable_thread_~__retres1~1_3) :named ssa_4))
(assert (! (= |stop_simulation_#t~ret7_5| |exists_runnable_thread_#res_4|) :named ssa_5_return))
(assert (! (and (<= |stop_simulation_#t~ret7_5| 2147483647) (<= 0 (+ |stop_simulation_#t~ret7_5| 2147483648)) (= |stop_simulation_#t~ret7_5| stop_simulation_~tmp~2_6)) :named ssa_6))
(assert (! (and (not (= stop_simulation_~tmp~2_6 0)) (= stop_simulation_~__retres2~0_7 0)) :named ssa_7))
(assert (! (= stop_simulation_~__retres2~0_7 |stop_simulation_#res_8|) :named ssa_8))
(assert (! (= |start_simulation_#t~ret8_9| |stop_simulation_#res_8|) :named ssa_9_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_1_GlobVarAssigCall ssa_5_return ssa_3 ssa_1_OldVarAssigCall ssa_4 ssa_1_LocVarAssigCall ssa_2) ssa_6 ssa_7 ssa_8 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_9_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun exists_runnable_thread_~__retres1~1_0 () Int)
(declare-fun ~comp_m1_st~0_-1 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_1 () Int)
(declare-fun exists_runnable_thread_~__retres1~1_2 () Int)
(declare-fun |exists_runnable_thread_#res_2| () Int)
(declare-fun |stop_simulation_#t~ret7_3| () Int)
(declare-fun |exists_runnable_thread_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (= ~comp_m1_st~0_-1 0) (= exists_runnable_thread_~__retres1~1_1 1)) :named ssa_1))
(assert (! (= |exists_runnable_thread_#res_2| exists_runnable_thread_~__retres1~1_1) :named ssa_2))
(assert (! (= |stop_simulation_#t~ret7_3| |exists_runnable_thread_#res_2|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
