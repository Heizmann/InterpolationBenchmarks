(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:13:41+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id recursified_eq2.c_AllErrorsAtOnce_Iteration1)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#3)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#3)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#3| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#3_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res| () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res_primed| () Int)
(declare-fun |c_write~init~int#3_#value| () Int)
(declare-fun |c_write~init~int#3_#value_primed| () Int)
(declare-fun |c_write~init~int#3_#ptr.base| () Int)
(declare-fun |c_write~init~int#3_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#3_#ptr.offset| () Int)
(declare-fun |c_write~init~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#3_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#3_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_read~int#3_#ptr.base| () Int)
(declare-fun |c_read~int#3_#ptr.base_primed| () Int)
(declare-fun |c_read~int#3_#ptr.offset| () Int)
(declare-fun |c_read~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#3_#sizeOfReadType| () Int)
(declare-fun |c_read~int#3_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#3_#value| () Int)
(declare-fun |c_read~int#3_#value_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet9| () Int)
(declare-fun |c_main_#t~nondet9_primed| () Int)
(declare-fun |c_main_#t~mem10| () Int)
(declare-fun |c_main_#t~mem10_primed| () Int)
(declare-fun |c_main_#t~mem11| () Int)
(declare-fun |c_main_#t~mem11_primed| () Int)
(declare-fun c_main_~w~0 () Int)
(declare-fun c_main_~w~0_primed () Int)
(declare-fun c_main_~x~0 () Int)
(declare-fun c_main_~x~0_primed () Int)
(declare-fun |c_main_~#y~0.base| () Int)
(declare-fun |c_main_~#y~0.base_primed| () Int)
(declare-fun |c_main_~#y~0.offset| () Int)
(declare-fun |c_main_~#y~0.offset_primed| () Int)
(declare-fun |c_main_~#z~0.base| () Int)
(declare-fun |c_main_~#z~0.base_primed| () Int)
(declare-fun |c_main_~#z~0.offset| () Int)
(declare-fun |c_main_~#z~0.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#3_#value| () Int)
(declare-fun |c_write~int#3_#value_primed| () Int)
(declare-fun |c_write~int#3_#ptr.base| () Int)
(declare-fun |c_write~int#3_#ptr.base_primed| () Int)
(declare-fun |c_write~int#3_#ptr.offset| () Int)
(declare-fun |c_write~int#3_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#3_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#3_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~y.base| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~y.base_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~y.offset| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~y.offset_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~z.base| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~z.base_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~z.offset| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#in~z.offset_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~nondet4| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~nondet4_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~mem5| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~mem5_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~post6| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~post6_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~mem7| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~mem7_primed| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~post8| () Int)
(declare-fun |c_func_to_recursive_line_16_to_18_0_#t~post8_primed| () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~y.base () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~y.base_primed () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~y.offset () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~y.offset_primed () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~z.base () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~z.base_primed () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~z.offset () Int)
(declare-fun c_func_to_recursive_line_16_to_18_0_~z.offset_primed () Int)
(declare-fun |c_ULTIMATE.start_#t~ret12| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret12_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main_~w~0_2 () Int)
(declare-fun c_aux_v_main_~x~0_2 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret12_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#2)_3| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#2_3| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun |main_~#y~0.base_4| () Int)
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |main_#t~nondet9_4| () Int)
(declare-fun |main_~#z~0.offset_4| () Int)
(declare-fun |main_~#z~0.base_4| () Int)
(declare-fun |main_~#y~0.offset_4| () Int)
(declare-fun v_ArrVal_1_fresh_1 () Int)
(declare-fun v_main_~w~0_3_fresh_1 () Int)
(declare-fun v_ArrVal_4_fresh_1 () Int)
(declare-fun v_ArrVal_2_fresh_1 () Int)
(declare-fun v_ArrVal_3_fresh_1 () Int)
(declare-fun v_main_~x~0_3_fresh_1 () Int)
(declare-fun |old(#memory_int#2)_5| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_5| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#2_5| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_5| () (Array Int (Array Int Int)))
(declare-fun |func_to_recursive_line_16_to_18_0_#in~y.offset_5| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~y.base_5| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~z.base_5| () Int)
(declare-fun |main_~#y~0.base_5| () Int)
(declare-fun |main_~#z~0.offset_5| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~z.offset_5| () Int)
(declare-fun |main_~#y~0.offset_5| () Int)
(declare-fun |main_~#z~0.base_5| () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~y.base_6 () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#t~nondet4_6| () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~z.base_6 () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~y.offset_6 () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~z.offset_6 () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#t~nondet4_7| () Int)
(declare-fun |main_#t~mem10_10| () Int)
(declare-fun |main_#t~mem11_10| () Int)
(declare-fun |main_~#z~0.offset_10| () Int)
(declare-fun |main_~#y~0.offset_10| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_11| () Int)
(declare-fun |main_#t~mem10_11| () Int)
(declare-fun |main_#t~mem11_11| () Int)
(declare-fun __VERIFIER_assert_~cond_12 () Int)
(declare-fun __VERIFIER_assert_~cond_13 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= 46 (select (select |#memory_int#1_-1| 2) 3)) (< 0 |#StackHeapBarrier_-1|) (= (select (select |#memory_int#1_-1| 2) 4) 99) (= (select (select |#memory_int#1_-1| 2) 2) 50) (= (select (select |#memory_int#1_-1| 2) 5) 0) (= 101 (select (select |#memory_int#1_-1| 2) 0)) (= (select (select |#memory_int#1_-1| 2) 1) 113) (= (select |#valid_-1| 0) 0) (= 2 (select |#length_-1| 1)) (= (select |#valid_-1| 3) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#length_-1| 2) 6) (= (select |#length_-1| 3) 12)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |old(#memory_int#3)_3| |#memory_int#3_3|) (= |old(#memory_int#2)_3| |#memory_int#2_3|) (= |#length_3| |old(#length)_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#2)_3| |#memory_int#2_-1|) (= |old(#memory_int#3)_3| |#memory_int#3_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= 4 v_ArrVal_1_fresh_1) (= v_ArrVal_4_fresh_1 1) (= (+ v_main_~w~0_3_fresh_1 1) (select (select |#memory_int#3_3| |main_~#y~0.base_4|) |main_~#y~0.offset_4|)) (= |#valid_4| (store (store |#valid_3| |main_~#y~0.base_4| v_ArrVal_3_fresh_1) |main_~#z~0.base_4| v_ArrVal_4_fresh_1)) (= |main_~#y~0.offset_4| 0) (= 0 (select |#valid_3| |main_~#y~0.base_4|)) (= v_main_~w~0_3_fresh_1 v_main_~x~0_3_fresh_1) (= v_ArrVal_3_fresh_1 1) (= (+ v_main_~x~0_3_fresh_1 1) (select (select |#memory_int#2_3| |main_~#z~0.base_4|) |main_~#z~0.offset_4|)) (= |main_~#z~0.offset_4| 0) (= (select (store |#valid_3| |main_~#y~0.base_4| v_ArrVal_3_fresh_1) |main_~#z~0.base_4|) 0) (< |#StackHeapBarrier_-1| |main_~#z~0.base_4|) (= 4 v_ArrVal_2_fresh_1) (not (= |main_~#y~0.base_4| 0)) (= (store (store |#length_3| |main_~#y~0.base_4| v_ArrVal_2_fresh_1) |main_~#z~0.base_4| v_ArrVal_1_fresh_1) |#length_4|) (not (= |main_~#z~0.base_4| 0)) (< |#StackHeapBarrier_-1| |main_~#y~0.base_4|)) :named ssa_4))
(assert (! (and (= |old(#memory_int#3)_5| |#memory_int#3_5|) (= |old(#memory_int#2)_5| |#memory_int#2_5|)) :named ssa_5_GlobVarAssigCall))
(assert (! (and (= |func_to_recursive_line_16_to_18_0_#in~y.base_5| |main_~#y~0.base_4|) (= |func_to_recursive_line_16_to_18_0_#in~y.offset_5| |main_~#y~0.offset_4|) (= |func_to_recursive_line_16_to_18_0_#in~z.offset_5| |main_~#z~0.offset_4|) (= |func_to_recursive_line_16_to_18_0_#in~z.base_5| |main_~#z~0.base_4|)) :named ssa_5_LocVarAssigCall))
(assert (! (and (= |old(#memory_int#2)_5| |#memory_int#2_3|) (= |old(#memory_int#3)_5| |#memory_int#3_3|)) :named ssa_5_OldVarAssigCall))
(assert (! (and (= |func_to_recursive_line_16_to_18_0_#in~y.offset_5| func_to_recursive_line_16_to_18_0_~y.offset_6) (= func_to_recursive_line_16_to_18_0_~y.base_6 |func_to_recursive_line_16_to_18_0_#in~y.base_5|) (= |func_to_recursive_line_16_to_18_0_#in~z.base_5| func_to_recursive_line_16_to_18_0_~z.base_6) (= |func_to_recursive_line_16_to_18_0_#in~z.offset_5| func_to_recursive_line_16_to_18_0_~z.offset_6)) :named ssa_6))
(assert (! (= (mod |func_to_recursive_line_16_to_18_0_#t~nondet4_6| 4294967296) 0) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_return))
(assert (! (and (= (select (select |#memory_int#3_5| |main_~#y~0.base_4|) |main_~#y~0.offset_4|) |main_#t~mem10_10|) (= (select (select |#memory_int#2_5| |main_~#z~0.base_4|) |main_~#z~0.offset_4|) |main_#t~mem11_10|)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_11| (ite (= (mod |main_#t~mem11_10| 4294967296) (mod |main_#t~mem10_10| 4294967296)) 1 0)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_12 |__VERIFIER_assert_#in~cond_11|) :named ssa_12))
(assert (! (= __VERIFIER_assert_~cond_12 0) :named ssa_13))
(assert (! true :named ssa_14))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_6 ssa_8 ssa_5_OldVarAssigCall ssa_9_return) ssa_10 (and ssa_11_LocVarAssigCall ssa_11_OldVarAssigCall ssa_11_GlobVarAssigCall) ssa_12 ssa_13 (and ssa_14 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= 46 (select (select |#memory_int#1_-2| 2) 3)) (< 0 |#StackHeapBarrier_-1|) (= (select (select |#memory_int#1_-2| 2) 4) 99) (= (select (select |#memory_int#1_-2| 2) 2) 50) (= (select (select |#memory_int#1_-2| 2) 5) 0) (= 101 (select (select |#memory_int#1_-2| 2) 0)) (= (select (select |#memory_int#1_-2| 2) 1) 113) (= (select |#valid_-2| 0) 0) (= 2 (select |#length_-2| 1)) (= (select |#valid_-2| 3) 1) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select |#valid_-2| 1) 1) (= (select |#valid_-2| 2) 1) (= (select (select |#memory_int#0_-2| 1) 0) 48) (= (select |#length_-2| 2) 6) (= (select |#length_-2| 3) 12)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#y~0.base_-2| () Int)
(declare-fun |main_~#z~0.offset_-2| () Int)
(declare-fun |main_~#y~0.offset_-2| () Int)
(declare-fun |main_~#z~0.base_-2| () Int)
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#3)_-1| () (Array Int (Array Int Int)))
(declare-fun |func_to_recursive_line_16_to_18_0_#in~y.offset_-1| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~y.base_-1| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~z.base_-1| () Int)
(declare-fun |main_~#y~0.base_-1| () Int)
(declare-fun |main_~#z~0.offset_-1| () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#in~z.offset_-1| () Int)
(declare-fun |main_~#y~0.offset_-1| () Int)
(declare-fun |main_~#z~0.base_-1| () Int)
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#3_-1| () (Array Int (Array Int Int)))
(declare-fun func_to_recursive_line_16_to_18_0_~y.base_0 () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#t~nondet4_0| () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~z.base_0 () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~y.offset_0 () Int)
(declare-fun func_to_recursive_line_16_to_18_0_~z.offset_0 () Int)
(declare-fun |func_to_recursive_line_16_to_18_0_#t~nondet4_1| () Int)
(assert (! (and (= |#memory_int#2_-1| |old(#memory_int#2)_-1|) (= |#memory_int#3_-1| |old(#memory_int#3)_-1|)) :named ssa_precond))
(assert (! (not (= (select (select |#memory_int#3_-1| |main_~#y~0.base_-2|) |main_~#y~0.offset_-2|) (select (select |#memory_int#2_-1| |main_~#z~0.base_-2|) |main_~#z~0.offset_-2|))) :named ssa_postcond))
(assert (! (and (= |func_to_recursive_line_16_to_18_0_#in~y.offset_-1| func_to_recursive_line_16_to_18_0_~y.offset_0) (= func_to_recursive_line_16_to_18_0_~y.base_0 |func_to_recursive_line_16_to_18_0_#in~y.base_-1|) (= |func_to_recursive_line_16_to_18_0_#in~z.base_-1| func_to_recursive_line_16_to_18_0_~z.base_0) (= |func_to_recursive_line_16_to_18_0_#in~z.offset_-1| func_to_recursive_line_16_to_18_0_~z.offset_0)) :named ssa_0))
(assert (! (= (mod |func_to_recursive_line_16_to_18_0_#t~nondet4_0| 4294967296) 0) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (= (select (select |#memory_int#3_-2| |main_~#y~0.base_-2|) |main_~#y~0.offset_-2|) (select (select |#memory_int#2_-2| |main_~#z~0.base_-2|) |main_~#z~0.offset_-2|)) :named ssa_-2_PendingContext))
(assert (! (and (= |func_to_recursive_line_16_to_18_0_#in~y.base_-1| |main_~#y~0.base_-2|) (= |func_to_recursive_line_16_to_18_0_#in~y.offset_-1| |main_~#y~0.offset_-2|) (= |func_to_recursive_line_16_to_18_0_#in~z.offset_-1| |main_~#z~0.offset_-2|) (= |func_to_recursive_line_16_to_18_0_#in~z.base_-1| |main_~#z~0.base_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(#memory_int#2)_-1| |#memory_int#2_-2|) (= |old(#memory_int#3)_-1| |#memory_int#3_-2|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
