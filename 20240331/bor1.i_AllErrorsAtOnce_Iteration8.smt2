(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:49:36+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id bor1.i_AllErrorsAtOnce_Iteration8)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.base| () Int)
(declare-fun |c_reach_error_#t~nondet0.base_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_bor_#in~x.base| () Int)
(declare-fun |c_bor_#in~x.base_primed| () Int)
(declare-fun |c_bor_#in~x.offset| () Int)
(declare-fun |c_bor_#in~x.offset_primed| () Int)
(declare-fun |c_bor_#res| () Int)
(declare-fun |c_bor_#res_primed| () Int)
(declare-fun |c_bor_#t~mem1| () Int)
(declare-fun |c_bor_#t~mem1_primed| () Int)
(declare-fun |c_bor_#t~mem2| () Int)
(declare-fun |c_bor_#t~mem2_primed| () Int)
(declare-fun |c_bor_#t~bitwise3| () Int)
(declare-fun |c_bor_#t~bitwise3_primed| () Int)
(declare-fun |c_bor_#t~post4| () Int)
(declare-fun |c_bor_#t~post4_primed| () Int)
(declare-fun c_bor_~x.base () Int)
(declare-fun c_bor_~x.base_primed () Int)
(declare-fun c_bor_~x.offset () Int)
(declare-fun c_bor_~x.offset_primed () Int)
(declare-fun c_bor_~i~0 () Int)
(declare-fun c_bor_~i~0_primed () Int)
(declare-fun c_bor_~res~0 () Int)
(declare-fun c_bor_~res~0_primed () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet5| () Int)
(declare-fun |c_main_#t~nondet5_primed| () Int)
(declare-fun |c_main_#t~post6| () Int)
(declare-fun |c_main_#t~post6_primed| () Int)
(declare-fun c_main_~i~1 () Int)
(declare-fun c_main_~i~1_primed () Int)
(declare-fun |c_main_#t~ret7| () Int)
(declare-fun |c_main_#t~ret7_primed| () Int)
(declare-fun |c_main_#t~mem8| () Int)
(declare-fun |c_main_#t~mem8_primed| () Int)
(declare-fun |c_main_#t~mem9| () Int)
(declare-fun |c_main_#t~mem9_primed| () Int)
(declare-fun |c_main_#t~ret10| () Int)
(declare-fun |c_main_#t~ret10_primed| () Int)
(declare-fun |c_main_#t~mem11| () Int)
(declare-fun |c_main_#t~mem11_primed| () Int)
(declare-fun |c_main_#t~mem12| () Int)
(declare-fun |c_main_#t~mem12_primed| () Int)
(declare-fun |c_main_#t~post13| () Int)
(declare-fun |c_main_#t~post13_primed| () Int)
(declare-fun c_main_~i~2 () Int)
(declare-fun c_main_~i~2_primed () Int)
(declare-fun |c_main_#t~ret14| () Int)
(declare-fun |c_main_#t~ret14_primed| () Int)
(declare-fun |c_main_~#x~0.base| () Int)
(declare-fun |c_main_~#x~0.base_primed| () Int)
(declare-fun |c_main_~#x~0.offset| () Int)
(declare-fun |c_main_~#x~0.offset_primed| () Int)
(declare-fun c_main_~temp~0 () Int)
(declare-fun c_main_~temp~0_primed () Int)
(declare-fun c_main_~ret~0 () Int)
(declare-fun c_main_~ret~0_primed () Int)
(declare-fun c_main_~ret2~0 () Int)
(declare-fun c_main_~ret2~0_primed () Int)
(declare-fun c_main_~ret5~0 () Int)
(declare-fun c_main_~ret5~0_primed () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_#in~__assertion.base| () Int)
(declare-fun |c___assert_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_#in~__assertion.offset| () Int)
(declare-fun |c___assert_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_#in~__file.base| () Int)
(declare-fun |c___assert_#in~__file.base_primed| () Int)
(declare-fun |c___assert_#in~__file.offset| () Int)
(declare-fun |c___assert_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_#in~__line| () Int)
(declare-fun |c___assert_#in~__line_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15_primed| () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.base| () Int)
(declare-fun |c___assert_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__line| () Int)
(declare-fun |c___assert_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.base| () Int)
(declare-fun |c___assert_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_fail_#in~__function.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__line| () Int)
(declare-fun |c___assert_perror_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~nondet5_3| () Int)
(declare-fun c_aux_v_main_~temp~0_5 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret15_3| () Int)
(declare-fun |c_aux_v_main_#t~nondet5_5| () Int)
(declare-fun |c_aux_v_main_#t~nondet5_7| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun c_aux_v_main_~temp~0_6 () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun c_aux_v_ArrVal_3 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_6 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun c_aux_v_ArrVal_8 () Int)
(declare-fun c_aux_v_ArrVal_9 () Int)
(declare-fun c_aux_v_ArrVal_11 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet5_8| () Int)
(declare-fun c_aux_v_ArrVal_10 () Int)
(declare-fun c_aux_v_main_~temp~0_7 () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_12 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_14 () Int)
(declare-fun c_aux_v_ArrVal_16 () Int)
(declare-fun c_aux_v_ArrVal_15 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_17 () Int)
(declare-fun c_aux_v_ArrVal_18 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_9| () Int)
(declare-fun c_aux_v_ArrVal_20 () Int)
(declare-fun c_aux_v_ArrVal_19 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet5_10| () Int)
(declare-fun c_aux_v_ArrVal_22 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_21 () Int)
(declare-fun c_aux_v_ArrVal_24 () Int)
(declare-fun c_aux_v_ArrVal_23 () Int)
(declare-fun c_aux_v_ArrVal_25 () (Array Int Int))
(declare-fun c_aux_v_main_~temp~0_8 () Int)
(declare-fun c_aux_v_ArrVal_27 () Int)
(declare-fun c_aux_v_ArrVal_26 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_28 () Int)
(declare-fun c_aux_v_ArrVal_29 () Int)
(declare-fun c_aux_v_ArrVal_30 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_31 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_11| () Int)
(declare-fun c_aux_v_ArrVal_32 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_33 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_12| () Int)
(declare-fun c_aux_v_ArrVal_35 () Int)
(declare-fun c_aux_v_ArrVal_34 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_36 () Int)
(declare-fun c_aux_v_main_~temp~0_9 () Int)
(declare-fun c_aux_v_ArrVal_38 () Int)
(declare-fun c_aux_v_ArrVal_37 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_39 () Int)
(declare-fun c_aux_v_ArrVal_40 () Int)
(declare-fun c_aux_v_ArrVal_41 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_42 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_13| () Int)
(declare-fun c_aux_v_ArrVal_44 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_43 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_14| () Int)
(declare-fun c_aux_v_ArrVal_46 () Int)
(declare-fun c_aux_v_ArrVal_45 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_47 () Int)
(declare-fun c_aux_v_main_~temp~0_10 () Int)
(declare-fun c_aux_v_ArrVal_49 () Int)
(declare-fun c_aux_v_ArrVal_48 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_50 () Int)
(declare-fun c_aux_v_ArrVal_51 () Int)
(declare-fun c_aux_v_ArrVal_52 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_53 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_15| () Int)
(declare-fun c_aux_v_ArrVal_54 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_55 () Int)
(declare-fun |c_aux_v_main_#t~nondet5_16| () Int)
(declare-fun c_aux_v_ArrVal_57 () Int)
(declare-fun c_aux_v_ArrVal_56 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_58 () Int)
(declare-fun c_aux_v_main_~temp~0_11 () Int)
(declare-fun c_aux_v_ArrVal_59 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_60 () Int)
(declare-fun c_aux_v_ArrVal_61 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_62 () Int)
(declare-fun c_aux_v_ArrVal_64 () Int)
(declare-fun c_aux_v_ArrVal_63 () Int)
(declare-fun c_aux_v_ArrVal_65 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet5_17| () Int)
(declare-fun c_aux_v_ArrVal_66 () Int)
(declare-fun c_aux_v_ArrVal_68 () Int)
(declare-fun c_aux_v_ArrVal_67 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~nondet5_18| () Int)
(declare-fun c_aux_v_ArrVal_70 () Int)
(declare-fun c_aux_v_main_~temp~0_12 () Int)
(declare-fun c_aux_v_ArrVal_69 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_71 () Int)
(declare-fun c_aux_v_ArrVal_72 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_73 () Int)
(declare-fun c_aux_v_ArrVal_74 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_75 () Int)
(declare-fun c_aux_v_ArrVal_76 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_77 () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_4| () Int)
(declare-fun main_~ret5~0_4 () Int)
(declare-fun main_~temp~0_4 () Int)
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun main_~i~1_4 () Int)
(declare-fun |#length_4| () (Array Int Int))
(declare-fun main_~ret~0_4 () Int)
(declare-fun main_~ret2~0_4 () Int)
(declare-fun |main_~#x~0.base_4| () Int)
(declare-fun v_ArrVal_79_fresh_1 () Int)
(declare-fun v_ArrVal_78_fresh_1 () Int)
(declare-fun |main_#t~nondet5_5| () Int)
(declare-fun main_~i~1_5 () Int)
(declare-fun |#memory_int#1_5| () (Array Int (Array Int Int)))
(declare-fun |main_#t~post6_5| () Int)
(declare-fun v_ArrVal_81_fresh_1 () Int)
(declare-fun |v_main_#t~nondet5_19_fresh_1| () Int)
(declare-fun v_ArrVal_80_fresh_1 () (Array Int Int))
(declare-fun |main_#t~nondet5_6| () Int)
(declare-fun main_~i~1_6 () Int)
(declare-fun |#memory_int#1_6| () (Array Int (Array Int Int)))
(declare-fun |main_#t~post6_6| () Int)
(declare-fun |v_main_#t~nondet5_20_fresh_1| () Int)
(declare-fun v_ArrVal_83_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_82_fresh_1 () Int)
(declare-fun main_~i~1_7 () Int)
(declare-fun main_~i~1_8 () Int)
(declare-fun |main_~#x~0.offset_9| () Int)
(declare-fun |bor_#in~x.base_9| () Int)
(declare-fun |bor_#in~x.offset_9| () Int)
(declare-fun |main_~#x~0.base_9| () Int)
(declare-fun |bor_#t~mem1_10| () Int)
(declare-fun bor_~x.base_10 () Int)
(declare-fun bor_~res~0_10 () Int)
(declare-fun bor_~i~0_10 () Int)
(declare-fun bor_~x.offset_10 () Int)
(declare-fun |bor_#t~mem2_11| () Int)
(declare-fun |bor_#t~mem2_12| () Int)
(declare-fun |bor_#t~bitwise3_12| () Int)
(declare-fun bor_~res~0_12 () Int)
(declare-fun |bor_#t~mem2_13| () Int)
(declare-fun bor_~res~0_13 () Int)
(declare-fun |bor_#t~bitwise3_13| () Int)
(declare-fun |bor_#t~post4_13| () Int)
(declare-fun bor_~i~0_13 () Int)
(declare-fun |bor_#t~mem2_14| () Int)
(declare-fun |bor_#t~mem2_15| () Int)
(declare-fun |bor_#t~bitwise3_15| () Int)
(declare-fun bor_~res~0_15 () Int)
(declare-fun |bor_#t~mem2_16| () Int)
(declare-fun bor_~res~0_16 () Int)
(declare-fun |bor_#t~bitwise3_16| () Int)
(declare-fun |bor_#t~post4_16| () Int)
(declare-fun bor_~i~0_16 () Int)
(declare-fun |bor_#t~mem2_17| () Int)
(declare-fun |bor_#t~mem2_18| () Int)
(declare-fun |bor_#t~bitwise3_18| () Int)
(declare-fun bor_~res~0_18 () Int)
(declare-fun |bor_#t~mem2_19| () Int)
(declare-fun bor_~res~0_19 () Int)
(declare-fun |bor_#t~bitwise3_19| () Int)
(declare-fun |bor_#t~post4_19| () Int)
(declare-fun bor_~i~0_19 () Int)
(declare-fun bor_~i~0_20 () Int)
(declare-fun bor_~res~0_21 () Int)
(declare-fun |bor_#res_21| () Int)
(declare-fun |main_#t~ret7_22| () Int)
(declare-fun |bor_#res_22| () Int)
(declare-fun |main_#t~ret7_23| () Int)
(declare-fun |main_#t~mem8_23| () Int)
(declare-fun main_~ret~0_23 () Int)
(declare-fun |#memory_int#1_23| () (Array Int (Array Int Int)))
(declare-fun |main_#t~mem9_23| () Int)
(declare-fun v_ArrVal_84_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_86_fresh_1 () Int)
(declare-fun v_main_~temp~0_13_fresh_1 () Int)
(declare-fun v_ArrVal_85_fresh_1 () Int)
(declare-fun |main_~#x~0.offset_24| () Int)
(declare-fun |bor_#in~x.base_24| () Int)
(declare-fun |bor_#in~x.offset_24| () Int)
(declare-fun |main_~#x~0.base_24| () Int)
(declare-fun |bor_#t~mem1_25| () Int)
(declare-fun bor_~x.base_25 () Int)
(declare-fun bor_~res~0_25 () Int)
(declare-fun bor_~i~0_25 () Int)
(declare-fun bor_~x.offset_25 () Int)
(declare-fun |bor_#t~mem2_26| () Int)
(declare-fun |bor_#t~mem2_27| () Int)
(declare-fun |bor_#t~bitwise3_27| () Int)
(declare-fun bor_~res~0_27 () Int)
(declare-fun |bor_#t~mem2_28| () Int)
(declare-fun bor_~res~0_28 () Int)
(declare-fun |bor_#t~bitwise3_28| () Int)
(declare-fun |bor_#t~post4_28| () Int)
(declare-fun bor_~i~0_28 () Int)
(declare-fun |bor_#t~mem2_29| () Int)
(declare-fun |bor_#t~mem2_30| () Int)
(declare-fun |bor_#t~bitwise3_30| () Int)
(declare-fun bor_~res~0_30 () Int)
(declare-fun |bor_#t~mem2_31| () Int)
(declare-fun bor_~res~0_31 () Int)
(declare-fun |bor_#t~bitwise3_31| () Int)
(declare-fun |bor_#t~post4_31| () Int)
(declare-fun bor_~i~0_31 () Int)
(declare-fun |bor_#t~mem2_32| () Int)
(declare-fun |bor_#t~mem2_33| () Int)
(declare-fun |bor_#t~bitwise3_33| () Int)
(declare-fun bor_~res~0_33 () Int)
(declare-fun |bor_#t~mem2_34| () Int)
(declare-fun bor_~res~0_34 () Int)
(declare-fun |bor_#t~bitwise3_34| () Int)
(declare-fun |bor_#t~post4_34| () Int)
(declare-fun bor_~i~0_34 () Int)
(declare-fun bor_~i~0_35 () Int)
(declare-fun bor_~res~0_36 () Int)
(declare-fun |bor_#res_36| () Int)
(declare-fun |main_#t~ret10_37| () Int)
(declare-fun |bor_#res_37| () Int)
(declare-fun main_~temp~0_38 () Int)
(declare-fun |main_#t~mem11_38| () Int)
(declare-fun |main_#t~ret10_38| () Int)
(declare-fun main_~i~2_38 () Int)
(declare-fun main_~ret2~0_38 () Int)
(declare-fun |main_#t~mem12_39| () Int)
(declare-fun main_~i~2_39 () Int)
(declare-fun |#memory_int#1_39| () (Array Int (Array Int Int)))
(declare-fun |main_#t~post13_39| () Int)
(declare-fun v_ArrVal_87_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_88_fresh_1 () Int)
(declare-fun |main_#t~mem12_40| () Int)
(declare-fun main_~i~2_40 () Int)
(declare-fun |#memory_int#1_40| () (Array Int (Array Int Int)))
(declare-fun |main_#t~post13_40| () Int)
(declare-fun v_ArrVal_90_fresh_1 () Int)
(declare-fun v_ArrVal_89_fresh_1 () (Array Int Int))
(declare-fun main_~i~2_41 () Int)
(declare-fun main_~temp~0_42 () Int)
(declare-fun main_~i~2_42 () Int)
(declare-fun |#memory_int#1_42| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_92_fresh_1 () Int)
(declare-fun v_ArrVal_91_fresh_1 () (Array Int Int))
(declare-fun |main_~#x~0.offset_43| () Int)
(declare-fun |bor_#in~x.base_43| () Int)
(declare-fun |bor_#in~x.offset_43| () Int)
(declare-fun |main_~#x~0.base_43| () Int)
(declare-fun |bor_#t~mem1_44| () Int)
(declare-fun bor_~x.base_44 () Int)
(declare-fun bor_~res~0_44 () Int)
(declare-fun bor_~i~0_44 () Int)
(declare-fun bor_~x.offset_44 () Int)
(declare-fun |bor_#t~mem2_45| () Int)
(declare-fun |bor_#t~mem2_46| () Int)
(declare-fun |bor_#t~bitwise3_46| () Int)
(declare-fun bor_~res~0_46 () Int)
(declare-fun |bor_#t~mem2_47| () Int)
(declare-fun bor_~res~0_47 () Int)
(declare-fun |bor_#t~bitwise3_47| () Int)
(declare-fun |bor_#t~post4_47| () Int)
(declare-fun bor_~i~0_47 () Int)
(declare-fun |bor_#t~mem2_48| () Int)
(declare-fun |bor_#t~mem2_49| () Int)
(declare-fun |bor_#t~bitwise3_49| () Int)
(declare-fun bor_~res~0_49 () Int)
(declare-fun |bor_#t~mem2_50| () Int)
(declare-fun bor_~res~0_50 () Int)
(declare-fun |bor_#t~bitwise3_50| () Int)
(declare-fun |bor_#t~post4_50| () Int)
(declare-fun bor_~i~0_50 () Int)
(declare-fun |bor_#t~mem2_51| () Int)
(declare-fun |bor_#t~mem2_52| () Int)
(declare-fun |bor_#t~bitwise3_52| () Int)
(declare-fun bor_~res~0_52 () Int)
(declare-fun |bor_#t~mem2_53| () Int)
(declare-fun bor_~res~0_53 () Int)
(declare-fun |bor_#t~bitwise3_53| () Int)
(declare-fun |bor_#t~post4_53| () Int)
(declare-fun bor_~i~0_53 () Int)
(declare-fun bor_~i~0_54 () Int)
(declare-fun bor_~res~0_55 () Int)
(declare-fun |bor_#res_55| () Int)
(declare-fun |main_#t~ret14_56| () Int)
(declare-fun |bor_#res_56| () Int)
(declare-fun main_~ret5~0_57 () Int)
(declare-fun |main_#t~ret14_57| () Int)
(declare-fun main_~ret5~0_58 () Int)
(declare-fun main_~ret~0_58 () Int)
(declare-fun main_~ret2~0_58 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (= (select (select |#memory_int#2_-1| 2) 4) 46) (= (select (select |#memory_int#2_-1| 2) 2) 114) (< 0 |#StackHeapBarrier_-1|) (= (select (select |#memory_int#2_-1| 2) 5) 99) (= 98 (select (select |#memory_int#2_-1| 2) 0)) (= (select |#length_-1| 2) 7) (= (select |#valid_-1| 0) 0) (= (select (select |#memory_int#2_-1| 2) 6) 0) (= (select |#length_-1| 1) 2) (= 111 (select (select |#memory_int#2_-1| 2) 1)) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= 49 (select (select |#memory_int#2_-1| 2) 3)) (= (select (select |#memory_int#0_-1| 1) 0) 48)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= main_~i~1_4 0) (< |#StackHeapBarrier_-1| |main_~#x~0.base_4|) (= v_ArrVal_78_fresh_1 1) (= |main_~#x~0.offset_4| 0) (= (store |#valid_3| |main_~#x~0.base_4| v_ArrVal_78_fresh_1) |#valid_4|) (not (= |main_~#x~0.base_4| 0)) (= 400 v_ArrVal_79_fresh_1) (= (select |#valid_3| |main_~#x~0.base_4|) 0) (= (store |#length_3| |main_~#x~0.base_4| v_ArrVal_79_fresh_1) |#length_4|)) :named ssa_4))
(assert (! (and (< main_~i~1_4 100) (<= |v_main_#t~nondet5_19_fresh_1| 2147483647) (= |v_main_#t~nondet5_19_fresh_1| v_ArrVal_81_fresh_1) (= (store |#memory_int#1_3| |main_~#x~0.base_4| v_ArrVal_80_fresh_1) |#memory_int#1_5|) (= (store (select |#memory_int#1_3| |main_~#x~0.base_4|) (+ (* main_~i~1_4 4) |main_~#x~0.offset_4|) |v_main_#t~nondet5_19_fresh_1|) v_ArrVal_80_fresh_1) (<= 0 (+ |v_main_#t~nondet5_19_fresh_1| 2147483648)) (= main_~i~1_5 (+ main_~i~1_4 1))) :named ssa_5))
(assert (! (and (<= 0 (+ |v_main_#t~nondet5_20_fresh_1| 2147483648)) (< main_~i~1_5 100) (= |#memory_int#1_6| (store |#memory_int#1_5| |main_~#x~0.base_4| v_ArrVal_83_fresh_1)) (<= |v_main_#t~nondet5_20_fresh_1| 2147483647) (= (store (select |#memory_int#1_5| |main_~#x~0.base_4|) (+ (* main_~i~1_5 4) |main_~#x~0.offset_4|) v_ArrVal_82_fresh_1) v_ArrVal_83_fresh_1) (= |v_main_#t~nondet5_20_fresh_1| v_ArrVal_82_fresh_1) (= main_~i~1_6 (+ main_~i~1_5 1))) :named ssa_6))
(assert (! (<= 100 main_~i~1_6) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! true :named ssa_9_GlobVarAssigCall))
(assert (! (and (= |main_~#x~0.base_4| |bor_#in~x.base_9|) (= |bor_#in~x.offset_9| |main_~#x~0.offset_4|)) :named ssa_9_LocVarAssigCall))
(assert (! true :named ssa_9_OldVarAssigCall))
(assert (! (and (= bor_~i~0_10 1) (= bor_~x.offset_10 |bor_#in~x.offset_9|) (= bor_~x.base_10 |bor_#in~x.base_9|) (= (select (select |#memory_int#1_6| bor_~x.base_10) bor_~x.offset_10) bor_~res~0_10)) :named ssa_10))
(assert (! (and (< bor_~i~0_10 100) (= (select (select |#memory_int#1_6| bor_~x.base_10) (+ bor_~x.offset_10 (* 4 bor_~i~0_10))) |bor_#t~mem2_11|)) :named ssa_11))
(assert (! (and (or (= bor_~res~0_10 0) (= |bor_#t~mem2_11| bor_~res~0_10)) (= |bor_#t~mem2_11| |bor_#t~bitwise3_12|)) :named ssa_12))
(assert (! (and (= bor_~res~0_13 |bor_#t~bitwise3_12|) (= (+ bor_~i~0_10 1) bor_~i~0_13)) :named ssa_13))
(assert (! (and (< bor_~i~0_13 100) (= (select (select |#memory_int#1_6| bor_~x.base_10) (+ bor_~x.offset_10 (* 4 bor_~i~0_13))) |bor_#t~mem2_14|)) :named ssa_14))
(assert (! (and (or (= bor_~res~0_13 0) (= |bor_#t~mem2_14| bor_~res~0_13)) (= |bor_#t~mem2_14| |bor_#t~bitwise3_15|)) :named ssa_15))
(assert (! (and (= bor_~res~0_16 |bor_#t~bitwise3_15|) (= (+ bor_~i~0_13 1) bor_~i~0_16)) :named ssa_16))
(assert (! (and (< bor_~i~0_16 100) (= (select (select |#memory_int#1_6| bor_~x.base_10) (+ bor_~x.offset_10 (* 4 bor_~i~0_16))) |bor_#t~mem2_17|)) :named ssa_17))
(assert (! (and (or (= bor_~res~0_16 0) (= |bor_#t~mem2_17| bor_~res~0_16)) (= |bor_#t~mem2_17| |bor_#t~bitwise3_18|)) :named ssa_18))
(assert (! (and (= bor_~res~0_19 |bor_#t~bitwise3_18|) (= (+ bor_~i~0_16 1) bor_~i~0_19)) :named ssa_19))
(assert (! (<= 100 bor_~i~0_19) :named ssa_20))
(assert (! (= |bor_#res_21| (ite (<= (mod bor_~res~0_19 4294967296) 2147483647) (mod bor_~res~0_19 4294967296) (+ (mod bor_~res~0_19 4294967296) (- 4294967296)))) :named ssa_21))
(assert (! (= |bor_#res_21| |main_#t~ret7_22|) :named ssa_22_return))
(assert (! (and (= v_ArrVal_85_fresh_1 (select (select |#memory_int#1_6| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4))) (= (store |#memory_int#1_6| |main_~#x~0.base_4| v_ArrVal_84_fresh_1) |#memory_int#1_23|) (<= |main_#t~ret7_22| 2147483647) (= v_main_~temp~0_13_fresh_1 v_ArrVal_86_fresh_1) (= v_main_~temp~0_13_fresh_1 (select (select |#memory_int#1_6| |main_~#x~0.base_4|) |main_~#x~0.offset_4|)) (<= 0 (+ |main_#t~ret7_22| 2147483648)) (= (store (store (select |#memory_int#1_6| |main_~#x~0.base_4|) |main_~#x~0.offset_4| (select (select |#memory_int#1_6| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4))) (+ |main_~#x~0.offset_4| 4) v_main_~temp~0_13_fresh_1) v_ArrVal_84_fresh_1) (= |main_#t~ret7_22| main_~ret~0_23)) :named ssa_23))
(assert (! true :named ssa_24_GlobVarAssigCall))
(assert (! (and (= |main_~#x~0.base_4| |bor_#in~x.base_24|) (= |bor_#in~x.offset_24| |main_~#x~0.offset_4|)) :named ssa_24_LocVarAssigCall))
(assert (! true :named ssa_24_OldVarAssigCall))
(assert (! (and (= bor_~i~0_25 1) (= bor_~x.offset_25 |bor_#in~x.offset_24|) (= bor_~x.base_25 |bor_#in~x.base_24|) (= (select (select |#memory_int#1_23| bor_~x.base_25) bor_~x.offset_25) bor_~res~0_25)) :named ssa_25))
(assert (! (and (< bor_~i~0_25 100) (= (select (select |#memory_int#1_23| bor_~x.base_25) (+ bor_~x.offset_25 (* 4 bor_~i~0_25))) |bor_#t~mem2_26|)) :named ssa_26))
(assert (! (and (or (= bor_~res~0_25 0) (= |bor_#t~mem2_26| bor_~res~0_25)) (= |bor_#t~mem2_26| |bor_#t~bitwise3_27|)) :named ssa_27))
(assert (! (and (= bor_~res~0_28 |bor_#t~bitwise3_27|) (= (+ bor_~i~0_25 1) bor_~i~0_28)) :named ssa_28))
(assert (! (and (< bor_~i~0_28 100) (= (select (select |#memory_int#1_23| bor_~x.base_25) (+ bor_~x.offset_25 (* 4 bor_~i~0_28))) |bor_#t~mem2_29|)) :named ssa_29))
(assert (! (and (or (= bor_~res~0_28 0) (= |bor_#t~mem2_29| bor_~res~0_28)) (= |bor_#t~mem2_29| |bor_#t~bitwise3_30|)) :named ssa_30))
(assert (! (and (= bor_~res~0_31 |bor_#t~bitwise3_30|) (= (+ bor_~i~0_28 1) bor_~i~0_31)) :named ssa_31))
(assert (! (and (< bor_~i~0_31 100) (= (select (select |#memory_int#1_23| bor_~x.base_25) (+ bor_~x.offset_25 (* 4 bor_~i~0_31))) |bor_#t~mem2_32|)) :named ssa_32))
(assert (! (and (or (= bor_~res~0_31 0) (= |bor_#t~mem2_32| bor_~res~0_31)) (= |bor_#t~mem2_32| |bor_#t~bitwise3_33|)) :named ssa_33))
(assert (! (and (= bor_~res~0_34 |bor_#t~bitwise3_33|) (= (+ bor_~i~0_31 1) bor_~i~0_34)) :named ssa_34))
(assert (! (<= 100 bor_~i~0_34) :named ssa_35))
(assert (! (= |bor_#res_36| (ite (<= (mod bor_~res~0_34 4294967296) 2147483647) (mod bor_~res~0_34 4294967296) (+ (mod bor_~res~0_34 4294967296) (- 4294967296)))) :named ssa_36))
(assert (! (= |bor_#res_36| |main_#t~ret10_37|) :named ssa_37_return))
(assert (! (and (<= |main_#t~ret10_37| 2147483647) (= main_~temp~0_38 (select (select |#memory_int#1_23| |main_~#x~0.base_4|) |main_~#x~0.offset_4|)) (= main_~i~2_38 0) (= main_~ret2~0_38 |main_#t~ret10_37|) (<= 0 (+ |main_#t~ret10_37| 2147483648))) :named ssa_38))
(assert (! (and (= (store (select |#memory_int#1_23| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| (* main_~i~2_38 4)) (select (select |#memory_int#1_23| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4 (* main_~i~2_38 4)))) v_ArrVal_87_fresh_1) (= |#memory_int#1_39| (store |#memory_int#1_23| |main_~#x~0.base_4| v_ArrVal_87_fresh_1)) (= main_~i~2_39 (+ main_~i~2_38 1)) (= (select (select |#memory_int#1_23| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4 (* main_~i~2_38 4))) v_ArrVal_88_fresh_1) (< main_~i~2_38 99)) :named ssa_39))
(assert (! (and (= (store (select |#memory_int#1_39| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| (* main_~i~2_39 4)) (select (select |#memory_int#1_39| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4 (* main_~i~2_39 4)))) v_ArrVal_89_fresh_1) (= (store |#memory_int#1_39| |main_~#x~0.base_4| v_ArrVal_89_fresh_1) |#memory_int#1_40|) (= main_~i~2_40 (+ main_~i~2_39 1)) (= (select (select |#memory_int#1_39| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4 (* main_~i~2_39 4))) v_ArrVal_90_fresh_1) (< main_~i~2_39 99)) :named ssa_40))
(assert (! (<= 99 main_~i~2_40) :named ssa_41))
(assert (! (and (= (store (select |#memory_int#1_40| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 396) main_~temp~0_38) v_ArrVal_91_fresh_1) (= main_~temp~0_38 v_ArrVal_92_fresh_1) (= (store |#memory_int#1_40| |main_~#x~0.base_4| v_ArrVal_91_fresh_1) |#memory_int#1_42|)) :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (and (= |bor_#in~x.offset_43| |main_~#x~0.offset_4|) (= |main_~#x~0.base_4| |bor_#in~x.base_43|)) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (and (= bor_~i~0_44 1) (= bor_~x.offset_44 |bor_#in~x.offset_43|) (= bor_~x.base_44 |bor_#in~x.base_43|) (= (select (select |#memory_int#1_42| bor_~x.base_44) bor_~x.offset_44) bor_~res~0_44)) :named ssa_44))
(assert (! (and (< bor_~i~0_44 100) (= (select (select |#memory_int#1_42| bor_~x.base_44) (+ bor_~x.offset_44 (* 4 bor_~i~0_44))) |bor_#t~mem2_45|)) :named ssa_45))
(assert (! (and (or (= bor_~res~0_44 0) (= |bor_#t~mem2_45| bor_~res~0_44)) (= |bor_#t~mem2_45| |bor_#t~bitwise3_46|)) :named ssa_46))
(assert (! (and (= bor_~res~0_47 |bor_#t~bitwise3_46|) (= (+ bor_~i~0_44 1) bor_~i~0_47)) :named ssa_47))
(assert (! (and (< bor_~i~0_47 100) (= (select (select |#memory_int#1_42| bor_~x.base_44) (+ bor_~x.offset_44 (* 4 bor_~i~0_47))) |bor_#t~mem2_48|)) :named ssa_48))
(assert (! (and (or (= bor_~res~0_47 0) (= |bor_#t~mem2_48| bor_~res~0_47)) (= |bor_#t~mem2_48| |bor_#t~bitwise3_49|)) :named ssa_49))
(assert (! (and (= bor_~res~0_50 |bor_#t~bitwise3_49|) (= (+ bor_~i~0_47 1) bor_~i~0_50)) :named ssa_50))
(assert (! (and (< bor_~i~0_50 100) (= (select (select |#memory_int#1_42| bor_~x.base_44) (+ bor_~x.offset_44 (* 4 bor_~i~0_50))) |bor_#t~mem2_51|)) :named ssa_51))
(assert (! (and (or (= bor_~res~0_50 0) (= |bor_#t~mem2_51| bor_~res~0_50)) (= |bor_#t~mem2_51| |bor_#t~bitwise3_52|)) :named ssa_52))
(assert (! (and (= bor_~res~0_53 |bor_#t~bitwise3_52|) (= (+ bor_~i~0_50 1) bor_~i~0_53)) :named ssa_53))
(assert (! (<= 100 bor_~i~0_53) :named ssa_54))
(assert (! (= |bor_#res_55| (ite (<= (mod bor_~res~0_53 4294967296) 2147483647) (mod bor_~res~0_53 4294967296) (+ (mod bor_~res~0_53 4294967296) (- 4294967296)))) :named ssa_55))
(assert (! (= |bor_#res_55| |main_#t~ret14_56|) :named ssa_56_return))
(assert (! (and (= main_~ret5~0_57 |main_#t~ret14_56|) (<= |main_#t~ret14_56| 2147483647) (<= 0 (+ |main_#t~ret14_56| 2147483648))) :named ssa_57))
(assert (! (or (not (= main_~ret5~0_57 main_~ret~0_23)) (not (= main_~ret2~0_38 main_~ret~0_23))) :named ssa_58))
(assert (! true :named ssa_59))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 (and ssa_13 ssa_20 ssa_16 ssa_10 ssa_14 ssa_19 ssa_22_return ssa_12 ssa_11 ssa_15 ssa_21 ssa_18 ssa_17 ssa_9_LocVarAssigCall ssa_9_OldVarAssigCall ssa_9_GlobVarAssigCall) ssa_23 (and ssa_24_GlobVarAssigCall ssa_27 ssa_31 ssa_26 ssa_34 ssa_24_LocVarAssigCall ssa_25 ssa_24_OldVarAssigCall ssa_32 ssa_28 ssa_36 ssa_29 ssa_37_return ssa_30 ssa_33 ssa_35) ssa_38 ssa_39 ssa_40 ssa_41 ssa_42 (and ssa_43_OldVarAssigCall ssa_44 ssa_55 ssa_45 ssa_46 ssa_47 ssa_53 ssa_43_GlobVarAssigCall ssa_56_return ssa_50 ssa_48 ssa_54 ssa_51 ssa_49 ssa_52 ssa_43_LocVarAssigCall) ssa_57 ssa_58 (and ssa_59 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#valid_-2| 1) 1) (= (select |#valid_-2| 2) 1) (= (select (select |#memory_int#2_-2| 2) 4) 46) (= (select (select |#memory_int#2_-2| 2) 2) 114) (< 0 |#StackHeapBarrier_-1|) (= (select (select |#memory_int#2_-2| 2) 5) 99) (= 98 (select (select |#memory_int#2_-2| 2) 0)) (= (select |#length_-2| 2) 7) (= (select |#valid_-2| 0) 0) (= (select (select |#memory_int#2_-2| 2) 6) 0) (= (select |#length_-2| 1) 2) (= 111 (select (select |#memory_int#2_-2| 2) 1)) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= 49 (select (select |#memory_int#2_-2| 2) 3)) (= (select (select |#memory_int#0_-2| 1) 0) 48)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |bor_#in~x.base_-1| () Int)
(declare-fun |bor_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun |bor_#t~mem1_0| () Int)
(declare-fun bor_~x.base_0 () Int)
(declare-fun bor_~res~0_0 () Int)
(declare-fun bor_~i~0_0 () Int)
(declare-fun bor_~x.offset_0 () Int)
(declare-fun |bor_#t~mem2_1| () Int)
(declare-fun |bor_#t~mem2_2| () Int)
(declare-fun |bor_#t~bitwise3_2| () Int)
(declare-fun bor_~res~0_2 () Int)
(declare-fun |bor_#t~mem2_3| () Int)
(declare-fun bor_~res~0_3 () Int)
(declare-fun |bor_#t~bitwise3_3| () Int)
(declare-fun |bor_#t~post4_3| () Int)
(declare-fun bor_~i~0_3 () Int)
(declare-fun |bor_#t~mem2_4| () Int)
(declare-fun |bor_#t~mem2_5| () Int)
(declare-fun |bor_#t~bitwise3_5| () Int)
(declare-fun bor_~res~0_5 () Int)
(declare-fun |bor_#t~mem2_6| () Int)
(declare-fun bor_~res~0_6 () Int)
(declare-fun |bor_#t~bitwise3_6| () Int)
(declare-fun |bor_#t~post4_6| () Int)
(declare-fun bor_~i~0_6 () Int)
(declare-fun |bor_#t~mem2_7| () Int)
(declare-fun |bor_#t~mem2_8| () Int)
(declare-fun |bor_#t~bitwise3_8| () Int)
(declare-fun bor_~res~0_8 () Int)
(declare-fun |bor_#t~mem2_9| () Int)
(declare-fun bor_~res~0_9 () Int)
(declare-fun |bor_#t~bitwise3_9| () Int)
(declare-fun |bor_#t~post4_9| () Int)
(declare-fun bor_~i~0_9 () Int)
(declare-fun bor_~i~0_10 () Int)
(declare-fun bor_~res~0_11 () Int)
(declare-fun |bor_#res_11| () Int)
(declare-fun |main_#t~ret7_12| () Int)
(declare-fun |bor_#res_12| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= bor_~i~0_0 1) (= bor_~x.offset_0 |bor_#in~x.offset_-1|) (= bor_~x.base_0 |bor_#in~x.base_-1|) (= (select (select |#memory_int#1_-2| bor_~x.base_0) bor_~x.offset_0) bor_~res~0_0)) :named ssa_0))
(assert (! (and (< bor_~i~0_0 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_0))) |bor_#t~mem2_1|)) :named ssa_1))
(assert (! (and (or (= bor_~res~0_0 0) (= |bor_#t~mem2_1| bor_~res~0_0)) (= |bor_#t~mem2_1| |bor_#t~bitwise3_2|)) :named ssa_2))
(assert (! (and (= bor_~res~0_3 |bor_#t~bitwise3_2|) (= (+ bor_~i~0_0 1) bor_~i~0_3)) :named ssa_3))
(assert (! (and (< bor_~i~0_3 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_3))) |bor_#t~mem2_4|)) :named ssa_4))
(assert (! (and (or (= bor_~res~0_3 0) (= |bor_#t~mem2_4| bor_~res~0_3)) (= |bor_#t~mem2_4| |bor_#t~bitwise3_5|)) :named ssa_5))
(assert (! (and (= bor_~res~0_6 |bor_#t~bitwise3_5|) (= (+ bor_~i~0_3 1) bor_~i~0_6)) :named ssa_6))
(assert (! (and (< bor_~i~0_6 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_6))) |bor_#t~mem2_7|)) :named ssa_7))
(assert (! (and (or (= bor_~res~0_6 0) (= |bor_#t~mem2_7| bor_~res~0_6)) (= |bor_#t~mem2_7| |bor_#t~bitwise3_8|)) :named ssa_8))
(assert (! (and (= bor_~res~0_9 |bor_#t~bitwise3_8|) (= (+ bor_~i~0_6 1) bor_~i~0_9)) :named ssa_9))
(assert (! (<= 100 bor_~i~0_9) :named ssa_10))
(assert (! (= |bor_#res_11| (ite (<= (mod bor_~res~0_9 4294967296) 2147483647) (mod bor_~res~0_9 4294967296) (+ (mod bor_~res~0_9 4294967296) (- 4294967296)))) :named ssa_11))
(assert (! (= |bor_#res_11| |main_#t~ret7_12|) :named ssa_12_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |main_~#x~0.base_-2| |bor_#in~x.base_-1|) (= |bor_#in~x.offset_-1| |main_~#x~0.offset_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_12_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |bor_#in~x.base_-1| () Int)
(declare-fun |bor_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun |bor_#t~mem1_0| () Int)
(declare-fun bor_~x.base_0 () Int)
(declare-fun bor_~res~0_0 () Int)
(declare-fun bor_~i~0_0 () Int)
(declare-fun bor_~x.offset_0 () Int)
(declare-fun |bor_#t~mem2_1| () Int)
(declare-fun |bor_#t~mem2_2| () Int)
(declare-fun |bor_#t~bitwise3_2| () Int)
(declare-fun bor_~res~0_2 () Int)
(declare-fun |bor_#t~mem2_3| () Int)
(declare-fun bor_~res~0_3 () Int)
(declare-fun |bor_#t~bitwise3_3| () Int)
(declare-fun |bor_#t~post4_3| () Int)
(declare-fun bor_~i~0_3 () Int)
(declare-fun |bor_#t~mem2_4| () Int)
(declare-fun |bor_#t~mem2_5| () Int)
(declare-fun |bor_#t~bitwise3_5| () Int)
(declare-fun bor_~res~0_5 () Int)
(declare-fun |bor_#t~mem2_6| () Int)
(declare-fun bor_~res~0_6 () Int)
(declare-fun |bor_#t~bitwise3_6| () Int)
(declare-fun |bor_#t~post4_6| () Int)
(declare-fun bor_~i~0_6 () Int)
(declare-fun |bor_#t~mem2_7| () Int)
(declare-fun |bor_#t~mem2_8| () Int)
(declare-fun |bor_#t~bitwise3_8| () Int)
(declare-fun bor_~res~0_8 () Int)
(declare-fun |bor_#t~mem2_9| () Int)
(declare-fun bor_~res~0_9 () Int)
(declare-fun |bor_#t~bitwise3_9| () Int)
(declare-fun |bor_#t~post4_9| () Int)
(declare-fun bor_~i~0_9 () Int)
(declare-fun bor_~i~0_10 () Int)
(declare-fun bor_~res~0_11 () Int)
(declare-fun |bor_#res_11| () Int)
(declare-fun |main_#t~ret10_12| () Int)
(declare-fun |bor_#res_12| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= bor_~i~0_0 1) (= bor_~x.offset_0 |bor_#in~x.offset_-1|) (= bor_~x.base_0 |bor_#in~x.base_-1|) (= (select (select |#memory_int#1_-2| bor_~x.base_0) bor_~x.offset_0) bor_~res~0_0)) :named ssa_0))
(assert (! (and (< bor_~i~0_0 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_0))) |bor_#t~mem2_1|)) :named ssa_1))
(assert (! (and (or (= bor_~res~0_0 0) (= |bor_#t~mem2_1| bor_~res~0_0)) (= |bor_#t~mem2_1| |bor_#t~bitwise3_2|)) :named ssa_2))
(assert (! (and (= bor_~res~0_3 |bor_#t~bitwise3_2|) (= (+ bor_~i~0_0 1) bor_~i~0_3)) :named ssa_3))
(assert (! (and (< bor_~i~0_3 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_3))) |bor_#t~mem2_4|)) :named ssa_4))
(assert (! (and (or (= bor_~res~0_3 0) (= |bor_#t~mem2_4| bor_~res~0_3)) (= |bor_#t~mem2_4| |bor_#t~bitwise3_5|)) :named ssa_5))
(assert (! (and (= bor_~res~0_6 |bor_#t~bitwise3_5|) (= (+ bor_~i~0_3 1) bor_~i~0_6)) :named ssa_6))
(assert (! (and (< bor_~i~0_6 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_6))) |bor_#t~mem2_7|)) :named ssa_7))
(assert (! (and (or (= bor_~res~0_6 0) (= |bor_#t~mem2_7| bor_~res~0_6)) (= |bor_#t~mem2_7| |bor_#t~bitwise3_8|)) :named ssa_8))
(assert (! (and (= bor_~res~0_9 |bor_#t~bitwise3_8|) (= (+ bor_~i~0_6 1) bor_~i~0_9)) :named ssa_9))
(assert (! (<= 100 bor_~i~0_9) :named ssa_10))
(assert (! (= |bor_#res_11| (ite (<= (mod bor_~res~0_9 4294967296) 2147483647) (mod bor_~res~0_9 4294967296) (+ (mod bor_~res~0_9 4294967296) (- 4294967296)))) :named ssa_11))
(assert (! (= |bor_#res_11| |main_#t~ret10_12|) :named ssa_12_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |main_~#x~0.base_-2| |bor_#in~x.base_-1|) (= |bor_#in~x.offset_-1| |main_~#x~0.offset_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_12_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |bor_#in~x.base_-1| () Int)
(declare-fun |bor_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun |bor_#t~mem1_0| () Int)
(declare-fun bor_~x.base_0 () Int)
(declare-fun bor_~res~0_0 () Int)
(declare-fun bor_~i~0_0 () Int)
(declare-fun bor_~x.offset_0 () Int)
(declare-fun |bor_#t~mem2_1| () Int)
(declare-fun |bor_#t~mem2_2| () Int)
(declare-fun |bor_#t~bitwise3_2| () Int)
(declare-fun bor_~res~0_2 () Int)
(declare-fun |bor_#t~mem2_3| () Int)
(declare-fun bor_~res~0_3 () Int)
(declare-fun |bor_#t~bitwise3_3| () Int)
(declare-fun |bor_#t~post4_3| () Int)
(declare-fun bor_~i~0_3 () Int)
(declare-fun |bor_#t~mem2_4| () Int)
(declare-fun |bor_#t~mem2_5| () Int)
(declare-fun |bor_#t~bitwise3_5| () Int)
(declare-fun bor_~res~0_5 () Int)
(declare-fun |bor_#t~mem2_6| () Int)
(declare-fun bor_~res~0_6 () Int)
(declare-fun |bor_#t~bitwise3_6| () Int)
(declare-fun |bor_#t~post4_6| () Int)
(declare-fun bor_~i~0_6 () Int)
(declare-fun |bor_#t~mem2_7| () Int)
(declare-fun |bor_#t~mem2_8| () Int)
(declare-fun |bor_#t~bitwise3_8| () Int)
(declare-fun bor_~res~0_8 () Int)
(declare-fun |bor_#t~mem2_9| () Int)
(declare-fun bor_~res~0_9 () Int)
(declare-fun |bor_#t~bitwise3_9| () Int)
(declare-fun |bor_#t~post4_9| () Int)
(declare-fun bor_~i~0_9 () Int)
(declare-fun bor_~i~0_10 () Int)
(declare-fun bor_~res~0_11 () Int)
(declare-fun |bor_#res_11| () Int)
(declare-fun |main_#t~ret14_12| () Int)
(declare-fun |bor_#res_12| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= bor_~i~0_0 1) (= bor_~x.offset_0 |bor_#in~x.offset_-1|) (= bor_~x.base_0 |bor_#in~x.base_-1|) (= (select (select |#memory_int#1_-2| bor_~x.base_0) bor_~x.offset_0) bor_~res~0_0)) :named ssa_0))
(assert (! (and (< bor_~i~0_0 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_0))) |bor_#t~mem2_1|)) :named ssa_1))
(assert (! (and (or (= bor_~res~0_0 0) (= |bor_#t~mem2_1| bor_~res~0_0)) (= |bor_#t~mem2_1| |bor_#t~bitwise3_2|)) :named ssa_2))
(assert (! (and (= bor_~res~0_3 |bor_#t~bitwise3_2|) (= (+ bor_~i~0_0 1) bor_~i~0_3)) :named ssa_3))
(assert (! (and (< bor_~i~0_3 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_3))) |bor_#t~mem2_4|)) :named ssa_4))
(assert (! (and (or (= bor_~res~0_3 0) (= |bor_#t~mem2_4| bor_~res~0_3)) (= |bor_#t~mem2_4| |bor_#t~bitwise3_5|)) :named ssa_5))
(assert (! (and (= bor_~res~0_6 |bor_#t~bitwise3_5|) (= (+ bor_~i~0_3 1) bor_~i~0_6)) :named ssa_6))
(assert (! (and (< bor_~i~0_6 100) (= (select (select |#memory_int#1_-2| bor_~x.base_0) (+ bor_~x.offset_0 (* 4 bor_~i~0_6))) |bor_#t~mem2_7|)) :named ssa_7))
(assert (! (and (or (= bor_~res~0_6 0) (= |bor_#t~mem2_7| bor_~res~0_6)) (= |bor_#t~mem2_7| |bor_#t~bitwise3_8|)) :named ssa_8))
(assert (! (and (= bor_~res~0_9 |bor_#t~bitwise3_8|) (= (+ bor_~i~0_6 1) bor_~i~0_9)) :named ssa_9))
(assert (! (<= 100 bor_~i~0_9) :named ssa_10))
(assert (! (= |bor_#res_11| (ite (<= (mod bor_~res~0_9 4294967296) 2147483647) (mod bor_~res~0_9 4294967296) (+ (mod bor_~res~0_9 4294967296) (- 4294967296)))) :named ssa_11))
(assert (! (= |bor_#res_11| |main_#t~ret14_12|) :named ssa_12_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |bor_#in~x.offset_-1| |main_~#x~0.offset_-2|) (= |main_~#x~0.base_-2| |bor_#in~x.base_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 ssa_7 ssa_8 ssa_9 ssa_10 ssa_11 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_12_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
