(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:53:05+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id pr5.c_AllErrorsAtOnce_Iteration26)
(declare-fun |c_old(~CELLCOUNT~0)| () Int)
(declare-fun |c_old(~CELLCOUNT~0)_primed| () Int)
(declare-fun c_~CELLCOUNT~0 () Int)
(declare-fun c_~CELLCOUNT~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~post5| () Int)
(declare-fun |c_main_#t~post5_primed| () Int)
(declare-fun |c_main_#t~mem6| () Int)
(declare-fun |c_main_#t~mem6_primed| () Int)
(declare-fun |c_main_#t~mem7| () Int)
(declare-fun |c_main_#t~mem7_primed| () Int)
(declare-fun |c_main_#t~short8| () Bool)
(declare-fun |c_main_#t~short8_primed| () Bool)
(declare-fun |c_main_#t~post9| () Int)
(declare-fun |c_main_#t~post9_primed| () Int)
(declare-fun c_main_~MINVAL~0 () Int)
(declare-fun c_main_~MINVAL~0_primed () Int)
(declare-fun c_main_~i~0 () Int)
(declare-fun c_main_~i~0_primed () Int)
(declare-fun |c_main_~#volArray~0.base| () Int)
(declare-fun |c_main_~#volArray~0.base_primed| () Int)
(declare-fun |c_main_~#volArray~0.offset| () Int)
(declare-fun |c_main_~#volArray~0.offset_primed| () Int)
(declare-fun c_main_~CCCELVOL5~0 () Int)
(declare-fun c_main_~CCCELVOL5~0_primed () Int)
(declare-fun c_main_~CCCELVOL4~0 () Int)
(declare-fun c_main_~CCCELVOL4~0_primed () Int)
(declare-fun c_main_~CCCELVOL3~0 () Int)
(declare-fun c_main_~CCCELVOL3~0_primed () Int)
(declare-fun c_main_~CCCELVOL2~0 () Int)
(declare-fun c_main_~CCCELVOL2~0_primed () Int)
(declare-fun c_main_~CCCELVOL1~0 () Int)
(declare-fun c_main_~CCCELVOL1~0_primed () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~mem6_3| () Int)
(declare-fun |c_aux_v_main_#t~mem7_3| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret10_3| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun |c_aux_v_main_#t~mem6_6| () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_3 () Int)
(declare-fun |c_aux_v_main_#t~mem6_7| () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun c_aux_v_ArrVal_6 () Int)
(declare-fun |c_aux_v_main_#t~mem6_8| () Int)
(declare-fun |c_aux_v_main_#t~mem7_6| () Int)
(declare-fun c_aux_v_ArrVal_8 () Int)
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun c_aux_v_ArrVal_9 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_10 () Int)
(declare-fun c_aux_v_ArrVal_11 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_12 () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_14 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_16 () Int)
(declare-fun c_aux_v_ArrVal_15 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_18 () Int)
(declare-fun c_aux_v_ArrVal_17 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_9| () Int)
(declare-fun |c_aux_v_main_#t~mem7_7| () Int)
(declare-fun c_aux_v_ArrVal_19 () Int)
(declare-fun c_aux_v_ArrVal_20 () Int)
(declare-fun c_aux_v_ArrVal_21 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_22 () Int)
(declare-fun c_aux_v_ArrVal_24 () Int)
(declare-fun c_aux_v_ArrVal_23 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_25 () Int)
(declare-fun c_aux_v_ArrVal_26 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_28 () Int)
(declare-fun c_aux_v_ArrVal_27 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_29 () Int)
(declare-fun c_aux_v_ArrVal_30 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_10| () Int)
(declare-fun |c_aux_v_main_#t~mem7_8| () Int)
(declare-fun c_aux_v_ArrVal_31 () Int)
(declare-fun c_aux_v_ArrVal_32 () Int)
(declare-fun c_aux_v_ArrVal_33 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_34 () Int)
(declare-fun c_aux_v_ArrVal_36 () Int)
(declare-fun c_aux_v_ArrVal_35 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_37 () Int)
(declare-fun c_aux_v_ArrVal_38 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_39 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_40 () Int)
(declare-fun c_aux_v_ArrVal_41 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_42 () Int)
(declare-fun |c_aux_v_main_#t~mem6_11| () Int)
(declare-fun |c_aux_v_main_#t~mem7_9| () Int)
(declare-fun c_aux_v_ArrVal_43 () Int)
(declare-fun c_aux_v_ArrVal_44 () Int)
(declare-fun c_aux_v_ArrVal_46 () Int)
(declare-fun c_aux_v_ArrVal_45 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_48 () Int)
(declare-fun c_aux_v_ArrVal_47 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_50 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_49 () Int)
(declare-fun c_aux_v_ArrVal_51 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_52 () Int)
(declare-fun c_aux_v_ArrVal_54 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_53 () Int)
(declare-fun |c_aux_v_main_#t~mem6_12| () Int)
(declare-fun |c_aux_v_main_#t~mem7_10| () Int)
(declare-fun c_aux_v_ArrVal_55 () Int)
(declare-fun c_aux_v_ArrVal_56 () Int)
(declare-fun c_aux_v_ArrVal_58 () Int)
(declare-fun c_aux_v_ArrVal_57 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_59 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_60 () Int)
(declare-fun c_aux_v_ArrVal_62 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_61 () Int)
(declare-fun c_aux_v_ArrVal_63 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_64 () Int)
(declare-fun c_aux_v_ArrVal_66 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_65 () Int)
(declare-fun |c_aux_v_main_#t~mem6_13| () Int)
(declare-fun |c_aux_v_main_#t~mem6_14| () Int)
(declare-fun |c_aux_v_main_#t~mem7_11| () Int)
(declare-fun c_aux_v_ArrVal_68 () Int)
(declare-fun c_aux_v_ArrVal_67 () Int)
(declare-fun c_aux_v_ArrVal_70 () Int)
(declare-fun c_aux_v_ArrVal_69 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_71 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_72 () Int)
(declare-fun c_aux_v_ArrVal_74 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_73 () Int)
(declare-fun c_aux_v_ArrVal_76 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_75 () Int)
(declare-fun c_aux_v_ArrVal_78 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_77 () Int)
(declare-fun |c_aux_v_main_#t~mem6_15| () Int)
(declare-fun |c_aux_v_main_#t~mem6_16| () Int)
(declare-fun |c_aux_v_main_#t~mem7_12| () Int)
(declare-fun c_aux_v_ArrVal_80 () Int)
(declare-fun c_aux_v_ArrVal_79 () Int)
(declare-fun c_aux_v_ArrVal_82 () Int)
(declare-fun c_aux_v_ArrVal_81 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_83 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_84 () Int)
(declare-fun c_aux_v_ArrVal_86 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_85 () Int)
(declare-fun c_aux_v_ArrVal_87 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_88 () Int)
(declare-fun c_aux_v_ArrVal_89 () Int)
(declare-fun c_aux_v_ArrVal_90 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_17| () Int)
(declare-fun |c_aux_v_main_#t~mem6_18| () Int)
(declare-fun |c_aux_v_main_#t~mem7_13| () Int)
(declare-fun c_aux_v_ArrVal_91 () Int)
(declare-fun c_aux_v_ArrVal_92 () Int)
(declare-fun c_aux_v_ArrVal_93 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_94 () Int)
(declare-fun c_aux_v_ArrVal_95 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_96 () Int)
(declare-fun c_aux_v_ArrVal_98 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_97 () Int)
(declare-fun c_aux_v_ArrVal_99 () Int)
(declare-fun c_aux_v_ArrVal_100 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_101 () Int)
(declare-fun c_aux_v_ArrVal_102 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_19| () Int)
(declare-fun |c_aux_v_main_#t~mem6_20| () Int)
(declare-fun |c_aux_v_main_#t~mem7_14| () Int)
(declare-fun c_aux_v_ArrVal_104 () Int)
(declare-fun c_aux_v_ArrVal_103 () Int)
(declare-fun c_aux_v_ArrVal_105 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_106 () Int)
(declare-fun c_aux_v_ArrVal_107 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_108 () Int)
(declare-fun c_aux_v_ArrVal_109 () Int)
(declare-fun c_aux_v_ArrVal_110 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_112 () Int)
(declare-fun c_aux_v_ArrVal_111 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_113 () Int)
(declare-fun c_aux_v_ArrVal_114 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_21| () Int)
(declare-fun |c_aux_v_main_#t~mem6_22| () Int)
(declare-fun |c_aux_v_main_#t~mem6_23| () Int)
(declare-fun |c_aux_v_main_#t~mem7_15| () Int)
(declare-fun c_aux_v_ArrVal_115 () Int)
(declare-fun c_aux_v_ArrVal_116 () Int)
(declare-fun c_aux_v_ArrVal_117 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_118 () Int)
(declare-fun c_aux_v_ArrVal_119 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_120 () Int)
(declare-fun c_aux_v_ArrVal_121 () Int)
(declare-fun c_aux_v_ArrVal_122 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_123 () Int)
(declare-fun c_aux_v_ArrVal_124 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_125 () Int)
(declare-fun c_aux_v_ArrVal_126 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_24| () Int)
(declare-fun |c_aux_v_main_#t~mem6_25| () Int)
(declare-fun |c_aux_v_main_#t~mem6_26| () Int)
(declare-fun |c_aux_v_main_#t~mem7_16| () Int)
(declare-fun c_aux_v_ArrVal_128 () Int)
(declare-fun c_aux_v_ArrVal_127 () Int)
(declare-fun c_aux_v_ArrVal_129 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_130 () Int)
(declare-fun c_aux_v_ArrVal_132 () Int)
(declare-fun c_aux_v_ArrVal_131 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_133 () Int)
(declare-fun c_aux_v_ArrVal_134 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_135 () Int)
(declare-fun c_aux_v_ArrVal_136 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_137 () Int)
(declare-fun c_aux_v_ArrVal_138 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_27| () Int)
(declare-fun |c_aux_v_main_#t~mem6_28| () Int)
(declare-fun |c_aux_v_main_#t~mem6_29| () Int)
(declare-fun |c_aux_v_main_#t~mem7_17| () Int)
(declare-fun c_aux_v_ArrVal_140 () Int)
(declare-fun c_aux_v_ArrVal_139 () Int)
(declare-fun c_aux_v_ArrVal_142 () Int)
(declare-fun c_aux_v_ArrVal_141 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_144 () Int)
(declare-fun c_aux_v_ArrVal_143 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_145 () Int)
(declare-fun c_aux_v_ArrVal_146 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_147 () Int)
(declare-fun c_aux_v_ArrVal_148 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_150 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_149 () Int)
(declare-fun |c_aux_v_main_#t~mem6_30| () Int)
(declare-fun |c_aux_v_main_#t~mem6_31| () Int)
(declare-fun |c_aux_v_main_#t~mem6_32| () Int)
(declare-fun |c_aux_v_main_#t~mem7_18| () Int)
(declare-fun c_aux_v_ArrVal_152 () Int)
(declare-fun c_aux_v_ArrVal_151 () Int)
(declare-fun c_aux_v_ArrVal_154 () Int)
(declare-fun c_aux_v_ArrVal_153 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_156 () Int)
(declare-fun c_aux_v_ArrVal_155 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_157 () Int)
(declare-fun c_aux_v_ArrVal_158 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_160 () Int)
(declare-fun c_aux_v_ArrVal_159 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_162 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_161 () Int)
(declare-fun |c_aux_v_main_#t~mem6_33| () Int)
(declare-fun |c_aux_v_main_#t~mem6_34| () Int)
(declare-fun |c_aux_v_main_#t~mem6_35| () Int)
(declare-fun |c_aux_v_main_#t~mem6_36| () Int)
(declare-fun |c_aux_v_main_#t~mem7_19| () Int)
(declare-fun c_aux_v_ArrVal_164 () Int)
(declare-fun c_aux_v_ArrVal_163 () Int)
(declare-fun c_aux_v_ArrVal_166 () Int)
(declare-fun c_aux_v_ArrVal_165 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_168 () Int)
(declare-fun c_aux_v_ArrVal_167 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_169 () Int)
(declare-fun c_aux_v_ArrVal_170 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_171 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_172 () Int)
(declare-fun c_aux_v_ArrVal_173 () Int)
(declare-fun c_aux_v_ArrVal_174 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_176 () Int)
(declare-fun c_aux_v_ArrVal_175 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_178 () Int)
(declare-fun c_aux_v_ArrVal_177 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_179 () Int)
(declare-fun c_aux_v_ArrVal_180 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_181 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_182 () Int)
(declare-fun c_aux_v_ArrVal_184 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_183 () Int)
(declare-fun |c_aux_v_main_#t~mem6_37| () Int)
(declare-fun |c_aux_v_main_#t~mem6_38| () Int)
(declare-fun |c_aux_v_main_#t~mem6_39| () Int)
(declare-fun |c_aux_v_main_#t~mem7_20| () Int)
(declare-fun c_aux_v_ArrVal_186 () Int)
(declare-fun c_aux_v_ArrVal_185 () Int)
(declare-fun c_aux_v_ArrVal_188 () Int)
(declare-fun c_aux_v_ArrVal_187 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_189 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_190 () Int)
(declare-fun c_aux_v_ArrVal_192 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_191 () Int)
(declare-fun c_aux_v_ArrVal_194 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_193 () Int)
(declare-fun c_aux_v_ArrVal_195 () Int)
(declare-fun c_aux_v_ArrVal_196 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_40| () Int)
(declare-fun |c_aux_v_main_#t~mem6_41| () Int)
(declare-fun |c_aux_v_main_#t~mem6_42| () Int)
(declare-fun |c_aux_v_main_#t~mem6_43| () Int)
(declare-fun |c_aux_v_main_#t~mem7_21| () Int)
(declare-fun c_aux_v_ArrVal_198 () Int)
(declare-fun c_aux_v_ArrVal_197 () Int)
(declare-fun c_aux_v_ArrVal_200 () Int)
(declare-fun c_aux_v_ArrVal_199 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_202 () Int)
(declare-fun c_aux_v_ArrVal_201 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_203 () Int)
(declare-fun c_aux_v_ArrVal_204 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_206 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_205 () Int)
(declare-fun c_aux_v_ArrVal_208 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_207 () Int)
(declare-fun c_aux_v_ArrVal_209 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_210 () Int)
(declare-fun c_aux_v_ArrVal_212 () Int)
(declare-fun c_aux_v_ArrVal_211 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_213 () Int)
(declare-fun c_aux_v_ArrVal_214 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_216 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_215 () Int)
(declare-fun c_aux_v_ArrVal_218 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_217 () Int)
(declare-fun |c_aux_v_main_#t~mem6_44| () Int)
(declare-fun |c_aux_v_main_#t~mem6_45| () Int)
(declare-fun |c_aux_v_main_#t~mem6_46| () Int)
(declare-fun |c_aux_v_main_#t~mem7_22| () Int)
(declare-fun c_aux_v_ArrVal_220 () Int)
(declare-fun c_aux_v_ArrVal_219 () Int)
(declare-fun c_aux_v_ArrVal_222 () Int)
(declare-fun c_aux_v_ArrVal_221 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_224 () Int)
(declare-fun c_aux_v_ArrVal_223 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_225 () Int)
(declare-fun c_aux_v_ArrVal_226 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_227 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_228 () Int)
(declare-fun c_aux_v_ArrVal_230 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_229 () Int)
(declare-fun |c_aux_v_main_#t~mem6_47| () Int)
(declare-fun |c_aux_v_main_#t~mem6_48| () Int)
(declare-fun |c_aux_v_main_#t~mem6_49| () Int)
(declare-fun |c_aux_v_main_#t~mem6_50| () Int)
(declare-fun |c_aux_v_main_#t~mem6_51| () Int)
(declare-fun |c_aux_v_main_#t~mem7_23| () Int)
(declare-fun c_aux_v_ArrVal_232 () Int)
(declare-fun c_aux_v_ArrVal_231 () Int)
(declare-fun c_aux_v_ArrVal_234 () Int)
(declare-fun c_aux_v_ArrVal_233 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_236 () Int)
(declare-fun c_aux_v_ArrVal_235 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_238 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_237 () Int)
(declare-fun c_aux_v_ArrVal_239 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_240 () Int)
(declare-fun c_aux_v_ArrVal_242 () Int)
(declare-fun c_aux_v_ArrVal_241 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_52| () Int)
(declare-fun |c_aux_v_main_#t~mem6_53| () Int)
(declare-fun |c_aux_v_main_#t~mem6_54| () Int)
(declare-fun |c_aux_v_main_#t~mem6_55| () Int)
(declare-fun |c_aux_v_main_#t~mem6_56| () Int)
(declare-fun |c_aux_v_main_#t~mem7_24| () Int)
(declare-fun c_aux_v_ArrVal_244 () Int)
(declare-fun c_aux_v_ArrVal_243 () Int)
(declare-fun c_aux_v_ArrVal_246 () Int)
(declare-fun c_aux_v_ArrVal_245 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_247 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_248 () Int)
(declare-fun c_aux_v_ArrVal_250 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_249 () Int)
(declare-fun c_aux_v_ArrVal_252 () Int)
(declare-fun c_aux_v_ArrVal_251 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_253 () Int)
(declare-fun c_aux_v_ArrVal_254 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_57| () Int)
(declare-fun |c_aux_v_main_#t~mem6_58| () Int)
(declare-fun |c_aux_v_main_#t~mem6_59| () Int)
(declare-fun |c_aux_v_main_#t~mem6_60| () Int)
(declare-fun |c_aux_v_main_#t~mem6_61| () Int)
(declare-fun |c_aux_v_main_#t~mem6_62| () Int)
(declare-fun |c_aux_v_main_#t~mem7_25| () Int)
(declare-fun c_aux_v_ArrVal_256 () Int)
(declare-fun c_aux_v_ArrVal_255 () Int)
(declare-fun c_aux_v_ArrVal_258 () Int)
(declare-fun c_aux_v_ArrVal_257 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_259 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_260 () Int)
(declare-fun c_aux_v_ArrVal_261 () Int)
(declare-fun c_aux_v_ArrVal_262 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_264 () Int)
(declare-fun c_aux_v_ArrVal_263 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_265 () Int)
(declare-fun c_aux_v_ArrVal_266 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_268 () Int)
(declare-fun c_aux_v_ArrVal_267 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_270 () Int)
(declare-fun c_aux_v_ArrVal_269 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_272 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_271 () Int)
(declare-fun c_aux_v_ArrVal_274 () Int)
(declare-fun c_aux_v_ArrVal_273 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_276 () Int)
(declare-fun c_aux_v_ArrVal_275 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_63| () Int)
(declare-fun |c_aux_v_main_#t~mem6_64| () Int)
(declare-fun |c_aux_v_main_#t~mem6_65| () Int)
(declare-fun |c_aux_v_main_#t~mem6_66| () Int)
(declare-fun |c_aux_v_main_#t~mem6_67| () Int)
(declare-fun |c_aux_v_main_#t~mem7_26| () Int)
(declare-fun c_aux_v_ArrVal_278 () Int)
(declare-fun c_aux_v_ArrVal_277 () Int)
(declare-fun c_aux_v_ArrVal_280 () Int)
(declare-fun c_aux_v_ArrVal_279 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_281 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_282 () Int)
(declare-fun c_aux_v_ArrVal_283 () Int)
(declare-fun c_aux_v_ArrVal_284 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_286 () Int)
(declare-fun c_aux_v_ArrVal_285 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_287 () Int)
(declare-fun c_aux_v_ArrVal_288 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_289 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_290 () Int)
(declare-fun c_aux_v_ArrVal_291 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_292 () Int)
(declare-fun c_aux_v_ArrVal_294 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_293 () Int)
(declare-fun c_aux_v_ArrVal_296 () Int)
(declare-fun c_aux_v_ArrVal_295 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_297 () Int)
(declare-fun c_aux_v_ArrVal_298 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem6_68| () Int)
(declare-fun |c_aux_v_main_#t~mem6_69| () Int)
(declare-fun |c_aux_v_main_#t~mem6_70| () Int)
(declare-fun |c_aux_v_main_#t~mem6_71| () Int)
(declare-fun |c_aux_v_main_#t~mem6_72| () Int)
(declare-fun |c_aux_v_main_#t~mem6_73| () Int)
(declare-fun |c_aux_v_main_#t~mem7_27| () Int)
(declare-fun c_aux_v_ArrVal_300 () Int)
(declare-fun c_aux_v_ArrVal_299 () Int)
(declare-fun c_aux_v_ArrVal_302 () Int)
(declare-fun c_aux_v_ArrVal_301 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_303 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_304 () Int)
(declare-fun c_aux_v_ArrVal_306 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_305 () Int)
(declare-fun c_aux_v_ArrVal_308 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_307 () Int)
(declare-fun c_aux_v_ArrVal_309 () Int)
(declare-fun c_aux_v_ArrVal_310 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_312 () Int)
(declare-fun c_aux_v_ArrVal_311 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_313 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_314 () Int)
(declare-fun c_aux_v_ArrVal_316 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_315 () Int)
(declare-fun c_aux_v_ArrVal_317 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_318 () Int)
(declare-fun c_aux_v_ArrVal_319 () Int)
(declare-fun c_aux_v_ArrVal_320 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_322 () Int)
(declare-fun c_aux_v_ArrVal_321 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_324 () Int)
(declare-fun c_aux_v_ArrVal_323 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_326 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_325 () Int)
(declare-fun c_aux_v_ArrVal_327 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_328 () Int)
(declare-fun c_aux_v_ArrVal_329 () Int)
(declare-fun c_aux_v_ArrVal_330 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_332 () Int)
(declare-fun c_aux_v_ArrVal_331 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_334 () Int)
(declare-fun c_aux_v_ArrVal_333 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_335 () Int)
(declare-fun c_aux_v_ArrVal_336 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_337 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_338 () Int)
(declare-fun c_aux_v_ArrVal_340 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_339 () Int)
(declare-fun |c_aux_v_main_#t~mem6_74| () Int)
(declare-fun |c_aux_v_main_#t~mem6_75| () Int)
(declare-fun |c_aux_v_main_#t~mem6_76| () Int)
(declare-fun |c_aux_v_main_#t~mem6_77| () Int)
(declare-fun |c_aux_v_main_#t~mem7_28| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_0| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_1 () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_3| () Int)
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_3 () Int)
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun ~CELLCOUNT~0_4 () Int)
(declare-fun main_~MINVAL~0_5 () Int)
(declare-fun main_~CCCELVOL1~0_5 () Int)
(declare-fun main_~CCCELVOL3~0_5 () Int)
(declare-fun |main_~#volArray~0.offset_5| () Int)
(declare-fun main_~CCCELVOL5~0_5 () Int)
(declare-fun main_~CCCELVOL4~0_5 () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun main_~i~0_5 () Int)
(declare-fun main_~CCCELVOL2~0_5 () Int)
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |main_~#volArray~0.base_5| () Int)
(declare-fun v_ArrVal_342_fresh_1 () Int)
(declare-fun v_ArrVal_341_fresh_1 () Int)
(declare-fun |assume_abort_if_not_#in~cond_7| () Int)
(declare-fun assume_abort_if_not_~cond_8 () Int)
(declare-fun assume_abort_if_not_~cond_9 () Int)
(declare-fun main_~i~0_12 () Int)
(declare-fun |#memory_int#1_14| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_344_fresh_1 () Int)
(declare-fun v_ArrVal_343_fresh_1 () (Array Int Int))
(declare-fun |#memory_int#1_15| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_346_fresh_1 () Int)
(declare-fun v_ArrVal_345_fresh_1 () (Array Int Int))
(declare-fun |#memory_int#1_16| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_348_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_347_fresh_1 () Int)
(declare-fun |#memory_int#1_17| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_349_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_350_fresh_1 () Int)
(declare-fun |#memory_int#1_18| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_352_fresh_1 () Int)
(declare-fun v_ArrVal_351_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_19 () Int)
(declare-fun |main_#t~post5_19| () Int)
(declare-fun |#memory_int#1_21| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_354_fresh_1 () Int)
(declare-fun v_ArrVal_353_fresh_1 () (Array Int Int))
(declare-fun |#memory_int#1_22| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_356_fresh_1 () Int)
(declare-fun v_ArrVal_355_fresh_1 () (Array Int Int))
(declare-fun |#memory_int#1_23| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_357_fresh_1 () Int)
(declare-fun v_ArrVal_358_fresh_1 () (Array Int Int))
(declare-fun |#memory_int#1_24| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_359_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_360_fresh_1 () Int)
(declare-fun |#memory_int#1_25| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_362_fresh_1 () Int)
(declare-fun v_ArrVal_361_fresh_1 () (Array Int Int))
(declare-fun main_~i~0_26 () Int)
(declare-fun |main_#t~post5_26| () Int)
(declare-fun main_~i~0_27 () Int)
(declare-fun main_~i~0_28 () Int)
(declare-fun |main_#t~short8_29| () Bool)
(declare-fun |v_main_#t~mem6_78_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_31| () Int)
(declare-fun |main_#t~short8_31| () Bool)
(declare-fun __VERIFIER_assert_~cond_32 () Int)
(declare-fun __VERIFIER_assert_~cond_33 () Int)
(declare-fun main_~i~0_36 () Int)
(declare-fun |main_#t~mem7_36| () Int)
(declare-fun |main_#t~mem6_36| () Int)
(declare-fun |main_#t~post9_36| () Int)
(declare-fun |main_#t~short8_36| () Bool)
(declare-fun |main_#t~short8_37| () Bool)
(declare-fun |v_main_#t~mem6_79_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_39| () Int)
(declare-fun |main_#t~short8_39| () Bool)
(declare-fun __VERIFIER_assert_~cond_40 () Int)
(declare-fun __VERIFIER_assert_~cond_41 () Int)
(declare-fun main_~i~0_44 () Int)
(declare-fun |main_#t~mem7_44| () Int)
(declare-fun |main_#t~mem6_44| () Int)
(declare-fun |main_#t~post9_44| () Int)
(declare-fun |main_#t~short8_44| () Bool)
(declare-fun |main_#t~short8_45| () Bool)
(declare-fun |v_main_#t~mem6_80_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_47| () Int)
(declare-fun |main_#t~short8_47| () Bool)
(declare-fun __VERIFIER_assert_~cond_48 () Int)
(declare-fun __VERIFIER_assert_~cond_49 () Int)
(declare-fun main_~i~0_52 () Int)
(declare-fun |main_#t~mem7_52| () Int)
(declare-fun |main_#t~mem6_52| () Int)
(declare-fun |main_#t~post9_52| () Int)
(declare-fun |main_#t~short8_52| () Bool)
(declare-fun |main_#t~short8_53| () Bool)
(declare-fun |v_main_#t~mem6_81_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_55| () Int)
(declare-fun |main_#t~short8_55| () Bool)
(declare-fun __VERIFIER_assert_~cond_56 () Int)
(declare-fun __VERIFIER_assert_~cond_57 () Int)
(declare-fun main_~i~0_60 () Int)
(declare-fun |main_#t~mem7_60| () Int)
(declare-fun |main_#t~mem6_60| () Int)
(declare-fun |main_#t~post9_60| () Int)
(declare-fun |main_#t~short8_60| () Bool)
(declare-fun |main_#t~short8_61| () Bool)
(declare-fun |v_main_#t~mem6_82_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_63| () Int)
(declare-fun |main_#t~short8_63| () Bool)
(declare-fun __VERIFIER_assert_~cond_64 () Int)
(declare-fun __VERIFIER_assert_~cond_65 () Int)
(declare-fun main_~i~0_68 () Int)
(declare-fun |main_#t~mem7_68| () Int)
(declare-fun |main_#t~mem6_68| () Int)
(declare-fun |main_#t~post9_68| () Int)
(declare-fun |main_#t~short8_68| () Bool)
(declare-fun |main_#t~short8_69| () Bool)
(declare-fun |v_main_#t~mem6_83_fresh_1| () Int)
(declare-fun |main_#t~short8_70| () Bool)
(declare-fun |v_main_#t~mem7_29_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_71| () Int)
(declare-fun |main_#t~short8_71| () Bool)
(declare-fun __VERIFIER_assert_~cond_72 () Int)
(declare-fun __VERIFIER_assert_~cond_73 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_0) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_-1) :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#valid_-1| 0) 0) (= 46 (select (select |#memory_int#2_-1| 2) 3)) (= (select |#valid_-1| 2) 1) (= (select |#length_-1| 2) 6) (= (select |#valid_-1| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= 53 (select (select |#memory_int#2_-1| 2) 2)) (= (select |#valid_-1| 1) 1) (= (select |#length_-1| 1) 2) (= 112 (select (select |#memory_int#2_-1| 2) 0)) (= (select |#length_-1| 3) 12) (= (select (select |#memory_int#2_-1| 2) 1) 114) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select (select |#memory_int#2_-1| 2) 5) 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select (select |#memory_int#2_-1| 2) 4) 99) (= ~CELLCOUNT~0_1 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_1) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= ~CELLCOUNT~0_4 2147483647) (<= 0 (+ ~CELLCOUNT~0_4 2147483648))) :named ssa_4))
(assert (! (and (= 2 main_~CCCELVOL5~0_5) (= (store |#valid_3| |main_~#volArray~0.base_5| v_ArrVal_341_fresh_1) |#valid_5|) (= |main_~#volArray~0.offset_5| 0) (< |#StackHeapBarrier_-1| |main_~#volArray~0.base_5|) (= 7 main_~CCCELVOL3~0_5) (= (select |#valid_3| |main_~#volArray~0.base_5|) 0) (= 5 main_~CCCELVOL4~0_5) (< 1 ~CELLCOUNT~0_4) (= (store |#length_3| |main_~#volArray~0.base_5| v_ArrVal_342_fresh_1) |#length_5|) (= 3 main_~CCCELVOL2~0_5) (= v_ArrVal_341_fresh_1 1) (= main_~CCCELVOL1~0_5 1) (not (= |main_~#volArray~0.base_5| 0)) (= v_ArrVal_342_fresh_1 (* (mod ~CELLCOUNT~0_4 1073741824) 4))) :named ssa_5))
(assert (! (= (ite (and (not (= (mod ~CELLCOUNT~0_4 5) 0)) (< ~CELLCOUNT~0_4 0)) (+ (mod ~CELLCOUNT~0_4 5) (- 5)) (mod ~CELLCOUNT~0_4 5)) 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (= (ite (= 0 (ite (and (not (= (mod ~CELLCOUNT~0_4 5) 0)) (< ~CELLCOUNT~0_4 0)) (+ (mod ~CELLCOUNT~0_4 5) (- 5)) (mod ~CELLCOUNT~0_4 5))) 1 0) |assume_abort_if_not_#in~cond_7|) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_7| assume_abort_if_not_~cond_8) :named ssa_8))
(assert (! (not (= assume_abort_if_not_~cond_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! true :named ssa_11_return))
(assert (! (= main_~i~0_12 1) :named ssa_12))
(assert (! (<= main_~i~0_12 (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 5) 0))) (+ (div ~CELLCOUNT~0_4 5) 1) (div ~CELLCOUNT~0_4 5))) :named ssa_13))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL5~0_5) (= v_ArrVal_344_fresh_1 main_~CCCELVOL5~0_5) (= v_ArrVal_343_fresh_1 (store (select |#memory_int#1_3| |main_~#volArray~0.base_5|) (+ (- 20) |main_~#volArray~0.offset_5| (* main_~i~0_12 20)) main_~CCCELVOL5~0_5)) (= (store |#memory_int#1_3| |main_~#volArray~0.base_5| v_ArrVal_343_fresh_1) |#memory_int#1_14|)) :named ssa_14))
(assert (! (and (= v_ArrVal_345_fresh_1 (store (select |#memory_int#1_14| |main_~#volArray~0.base_5|) (+ (* main_~i~0_12 20) |main_~#volArray~0.offset_5| (- 16)) main_~CCCELVOL4~0_5)) (= |#memory_int#1_15| (store |#memory_int#1_14| |main_~#volArray~0.base_5| v_ArrVal_345_fresh_1)) (= v_ArrVal_346_fresh_1 main_~CCCELVOL4~0_5) (<= main_~MINVAL~0_5 main_~CCCELVOL4~0_5)) :named ssa_15))
(assert (! (and (= v_ArrVal_348_fresh_1 (store (select |#memory_int#1_15| |main_~#volArray~0.base_5|) (+ (* main_~i~0_12 20) |main_~#volArray~0.offset_5| (- 12)) v_ArrVal_347_fresh_1)) (= |#memory_int#1_16| (store |#memory_int#1_15| |main_~#volArray~0.base_5| v_ArrVal_348_fresh_1)) (= v_ArrVal_347_fresh_1 main_~CCCELVOL3~0_5) (<= main_~MINVAL~0_5 main_~CCCELVOL3~0_5)) :named ssa_16))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL2~0_5) (= (store |#memory_int#1_16| |main_~#volArray~0.base_5| v_ArrVal_349_fresh_1) |#memory_int#1_17|) (= v_ArrVal_349_fresh_1 (store (select |#memory_int#1_16| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_12 20) (- 8)) main_~CCCELVOL2~0_5)) (= v_ArrVal_350_fresh_1 main_~CCCELVOL2~0_5)) :named ssa_17))
(assert (! (and (= v_ArrVal_352_fresh_1 main_~CCCELVOL1~0_5) (<= main_~MINVAL~0_5 main_~CCCELVOL1~0_5) (= v_ArrVal_351_fresh_1 (store (select |#memory_int#1_17| |main_~#volArray~0.base_5|) (+ (* main_~i~0_12 20) |main_~#volArray~0.offset_5| (- 4)) main_~CCCELVOL1~0_5)) (= |#memory_int#1_18| (store |#memory_int#1_17| |main_~#volArray~0.base_5| v_ArrVal_351_fresh_1))) :named ssa_18))
(assert (! (= main_~i~0_19 (+ main_~i~0_12 1)) :named ssa_19))
(assert (! (<= main_~i~0_19 (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 5) 0))) (+ (div ~CELLCOUNT~0_4 5) 1) (div ~CELLCOUNT~0_4 5))) :named ssa_20))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL5~0_5) (= (store |#memory_int#1_18| |main_~#volArray~0.base_5| v_ArrVal_353_fresh_1) |#memory_int#1_21|) (= v_ArrVal_353_fresh_1 (store (select |#memory_int#1_18| |main_~#volArray~0.base_5|) (+ (- 20) |main_~#volArray~0.offset_5| (* main_~i~0_19 20)) main_~CCCELVOL5~0_5)) (= v_ArrVal_354_fresh_1 main_~CCCELVOL5~0_5)) :named ssa_21))
(assert (! (and (= v_ArrVal_355_fresh_1 (store (select |#memory_int#1_21| |main_~#volArray~0.base_5|) (+ (* main_~i~0_19 20) |main_~#volArray~0.offset_5| (- 16)) main_~CCCELVOL4~0_5)) (= v_ArrVal_356_fresh_1 main_~CCCELVOL4~0_5) (= (store |#memory_int#1_21| |main_~#volArray~0.base_5| v_ArrVal_355_fresh_1) |#memory_int#1_22|) (<= main_~MINVAL~0_5 main_~CCCELVOL4~0_5)) :named ssa_22))
(assert (! (and (= (store |#memory_int#1_22| |main_~#volArray~0.base_5| v_ArrVal_358_fresh_1) |#memory_int#1_23|) (<= main_~MINVAL~0_5 main_~CCCELVOL3~0_5) (= v_ArrVal_358_fresh_1 (store (select |#memory_int#1_22| |main_~#volArray~0.base_5|) (+ (* main_~i~0_19 20) |main_~#volArray~0.offset_5| (- 12)) v_ArrVal_357_fresh_1)) (= v_ArrVal_357_fresh_1 main_~CCCELVOL3~0_5)) :named ssa_23))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL2~0_5) (= |#memory_int#1_24| (store |#memory_int#1_23| |main_~#volArray~0.base_5| v_ArrVal_359_fresh_1)) (= v_ArrVal_360_fresh_1 main_~CCCELVOL2~0_5) (= v_ArrVal_359_fresh_1 (store (select |#memory_int#1_23| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_19 20) (- 8)) main_~CCCELVOL2~0_5))) :named ssa_24))
(assert (! (and (<= main_~MINVAL~0_5 main_~CCCELVOL1~0_5) (= v_ArrVal_361_fresh_1 (store (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ (* main_~i~0_19 20) |main_~#volArray~0.offset_5| (- 4)) main_~CCCELVOL1~0_5)) (= v_ArrVal_362_fresh_1 main_~CCCELVOL1~0_5) (= (store |#memory_int#1_24| |main_~#volArray~0.base_5| v_ArrVal_361_fresh_1) |#memory_int#1_25|)) :named ssa_25))
(assert (! (= main_~i~0_26 (+ main_~i~0_19 1)) :named ssa_26))
(assert (! (< (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 5) 0))) (+ (div ~CELLCOUNT~0_4 5) 1) (div ~CELLCOUNT~0_4 5)) main_~i~0_26) :named ssa_27))
(assert (! (= main_~i~0_28 0) :named ssa_28))
(assert (! (and (or (and (not |main_#t~short8_29|) (< |v_main_#t~mem6_78_fresh_1| main_~MINVAL~0_5)) (and |main_#t~short8_29| (<= main_~MINVAL~0_5 |v_main_#t~mem6_78_fresh_1|))) (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_28 4))) |v_main_#t~mem6_78_fresh_1|) (< main_~i~0_28 ~CELLCOUNT~0_4)) :named ssa_29))
(assert (! |main_#t~short8_29| :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_29| 1 0) |__VERIFIER_assert_#in~cond_31|) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_32 |__VERIFIER_assert_#in~cond_31|) :named ssa_32))
(assert (! (not (= __VERIFIER_assert_~cond_32 0)) :named ssa_33))
(assert (! true :named ssa_34))
(assert (! true :named ssa_35_return))
(assert (! (= main_~i~0_36 (+ main_~i~0_28 1)) :named ssa_36))
(assert (! (and (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_36 4))) |v_main_#t~mem6_79_fresh_1|) (< main_~i~0_36 ~CELLCOUNT~0_4) (or (and |main_#t~short8_37| (<= main_~MINVAL~0_5 |v_main_#t~mem6_79_fresh_1|)) (and (not |main_#t~short8_37|) (< |v_main_#t~mem6_79_fresh_1| main_~MINVAL~0_5)))) :named ssa_37))
(assert (! |main_#t~short8_37| :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_37| 1 0) |__VERIFIER_assert_#in~cond_39|) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_40 |__VERIFIER_assert_#in~cond_39|) :named ssa_40))
(assert (! (not (= __VERIFIER_assert_~cond_40 0)) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! true :named ssa_43_return))
(assert (! (= main_~i~0_44 (+ main_~i~0_36 1)) :named ssa_44))
(assert (! (and (or (and (< |v_main_#t~mem6_80_fresh_1| main_~MINVAL~0_5) (not |main_#t~short8_45|)) (and |main_#t~short8_45| (<= main_~MINVAL~0_5 |v_main_#t~mem6_80_fresh_1|))) (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_44 4))) |v_main_#t~mem6_80_fresh_1|) (< main_~i~0_44 ~CELLCOUNT~0_4)) :named ssa_45))
(assert (! |main_#t~short8_45| :named ssa_46))
(assert (! true :named ssa_47_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_45| 1 0) |__VERIFIER_assert_#in~cond_47|) :named ssa_47_LocVarAssigCall))
(assert (! true :named ssa_47_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_48 |__VERIFIER_assert_#in~cond_47|) :named ssa_48))
(assert (! (not (= __VERIFIER_assert_~cond_48 0)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! true :named ssa_51_return))
(assert (! (= main_~i~0_52 (+ main_~i~0_44 1)) :named ssa_52))
(assert (! (and (or (and |main_#t~short8_53| (<= main_~MINVAL~0_5 |v_main_#t~mem6_81_fresh_1|)) (and (not |main_#t~short8_53|) (< |v_main_#t~mem6_81_fresh_1| main_~MINVAL~0_5))) (< main_~i~0_52 ~CELLCOUNT~0_4) (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_52 4))) |v_main_#t~mem6_81_fresh_1|)) :named ssa_53))
(assert (! |main_#t~short8_53| :named ssa_54))
(assert (! true :named ssa_55_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_53| 1 0) |__VERIFIER_assert_#in~cond_55|) :named ssa_55_LocVarAssigCall))
(assert (! true :named ssa_55_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_56 |__VERIFIER_assert_#in~cond_55|) :named ssa_56))
(assert (! (not (= __VERIFIER_assert_~cond_56 0)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! true :named ssa_59_return))
(assert (! (= main_~i~0_60 (+ main_~i~0_52 1)) :named ssa_60))
(assert (! (and (or (and (< |v_main_#t~mem6_82_fresh_1| main_~MINVAL~0_5) (not |main_#t~short8_61|)) (and |main_#t~short8_61| (<= main_~MINVAL~0_5 |v_main_#t~mem6_82_fresh_1|))) (< main_~i~0_60 ~CELLCOUNT~0_4) (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_60 4))) |v_main_#t~mem6_82_fresh_1|)) :named ssa_61))
(assert (! |main_#t~short8_61| :named ssa_62))
(assert (! true :named ssa_63_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_61| 1 0) |__VERIFIER_assert_#in~cond_63|) :named ssa_63_LocVarAssigCall))
(assert (! true :named ssa_63_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_64 |__VERIFIER_assert_#in~cond_63|) :named ssa_64))
(assert (! (not (= __VERIFIER_assert_~cond_64 0)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! true :named ssa_67_return))
(assert (! (= main_~i~0_68 (+ main_~i~0_60 1)) :named ssa_68))
(assert (! (and (= (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_68 4))) |v_main_#t~mem6_83_fresh_1|) (< main_~i~0_68 ~CELLCOUNT~0_4) (or (and |main_#t~short8_69| (<= main_~MINVAL~0_5 |v_main_#t~mem6_83_fresh_1|)) (and (not |main_#t~short8_69|) (< |v_main_#t~mem6_83_fresh_1| main_~MINVAL~0_5)))) :named ssa_69))
(assert (! (and (or (and |main_#t~short8_70| (= |v_main_#t~mem7_29_fresh_1| 0)) (and (not (= |v_main_#t~mem7_29_fresh_1| 0)) (not |main_#t~short8_70|))) (= |v_main_#t~mem7_29_fresh_1| (select (select |#memory_int#1_25| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_68 4)))) (not |main_#t~short8_69|)) :named ssa_70))
(assert (! true :named ssa_71_GlobVarAssigCall))
(assert (! (= (ite |main_#t~short8_70| 1 0) |__VERIFIER_assert_#in~cond_71|) :named ssa_71_LocVarAssigCall))
(assert (! true :named ssa_71_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_72 |__VERIFIER_assert_#in~cond_71|) :named ssa_72))
(assert (! (= __VERIFIER_assert_~cond_72 0) :named ssa_73))
(assert (! true :named ssa_74))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_11_return ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_7_OldVarAssigCall ssa_7_GlobVarAssigCall) ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 ssa_19 ssa_20 ssa_21 ssa_22 ssa_23 ssa_24 ssa_25 ssa_26 ssa_27 ssa_28 ssa_29 ssa_30 (and ssa_31_LocVarAssigCall ssa_34 ssa_31_OldVarAssigCall ssa_32 ssa_31_GlobVarAssigCall ssa_35_return ssa_33) ssa_36 ssa_37 ssa_38 (and ssa_40 ssa_39_OldVarAssigCall ssa_39_GlobVarAssigCall ssa_43_return ssa_39_LocVarAssigCall ssa_41 ssa_42) ssa_44 ssa_45 ssa_46 (and ssa_47_GlobVarAssigCall ssa_51_return ssa_47_OldVarAssigCall ssa_50 ssa_48 ssa_49 ssa_47_LocVarAssigCall) ssa_52 ssa_53 ssa_54 (and ssa_57 ssa_55_OldVarAssigCall ssa_59_return ssa_58 ssa_55_GlobVarAssigCall ssa_55_LocVarAssigCall ssa_56) ssa_60 ssa_61 ssa_62 (and ssa_64 ssa_63_OldVarAssigCall ssa_67_return ssa_63_LocVarAssigCall ssa_63_GlobVarAssigCall ssa_65 ssa_66) ssa_68 ssa_69 ssa_70 (and ssa_71_LocVarAssigCall ssa_71_OldVarAssigCall ssa_71_GlobVarAssigCall) ssa_72 ssa_73 (and ssa_74 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-1) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#valid_-2| 0) 0) (= 46 (select (select |#memory_int#2_-2| 2) 3)) (= (select |#valid_-2| 2) 1) (= (select |#length_-2| 2) 6) (= (select |#valid_-2| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= 53 (select (select |#memory_int#2_-2| 2) 2)) (= (select |#valid_-2| 1) 1) (= (select |#length_-2| 1) 2) (= 112 (select (select |#memory_int#2_-2| 2) 0)) (= (select |#length_-2| 3) 12) (= (select (select |#memory_int#2_-2| 2) 1) 114) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select (select |#memory_int#2_-2| 2) 5) 0) (= (select (select |#memory_int#0_-2| 1) 0) 48) (= (select (select |#memory_int#2_-2| 2) 4) 99) (= ~CELLCOUNT~0_0 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~CCCELVOL1~0_-2 () Int)
(declare-fun main_~CCCELVOL5~0_-2 () Int)
(declare-fun |assume_abort_if_not_#in~cond_-1| () Int)
(declare-fun assume_abort_if_not_~cond_0 () Int)
(declare-fun assume_abort_if_not_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= main_~CCCELVOL1~0_-2 1) (= 2 main_~CCCELVOL5~0_-2))) :named ssa_postcond))
(assert (! (= |assume_abort_if_not_#in~cond_-1| assume_abort_if_not_~cond_0) :named ssa_0))
(assert (! (not (= assume_abort_if_not_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= main_~CCCELVOL1~0_-2 1) (= 2 main_~CCCELVOL5~0_-2)) :named ssa_-2_PendingContext))
(assert (! (= (ite (= 0 (ite (and (not (= (mod ~CELLCOUNT~0_-2 5) 0)) (< ~CELLCOUNT~0_-2 0)) (+ (mod ~CELLCOUNT~0_-2 5) (- 5)) (mod ~CELLCOUNT~0_-2 5))) 1 0) |assume_abort_if_not_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short8_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short8_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 20)) 2) (<= main_~MINVAL~0_-2 1) (= main_~i~0_-2 0))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 20)) 2) (<= main_~MINVAL~0_-2 1) (= main_~i~0_-2 0)) :named ssa_-2_PendingContext))
(assert (! (= (ite |main_#t~short8_-2| 1 0) |__VERIFIER_assert_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short8_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short8_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 16 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 16 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1)) :named ssa_-2_PendingContext))
(assert (! (= (ite |main_#t~short8_-2| 1 0) |__VERIFIER_assert_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short8_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short8_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 12 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 12 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1)) :named ssa_-2_PendingContext))
(assert (! (= (ite |main_#t~short8_-2| 1 0) |__VERIFIER_assert_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short8_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short8_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 8 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= 2 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 8 (* main_~i~0_-2 4)))) (<= main_~MINVAL~0_-2 1)) :named ssa_-2_PendingContext))
(assert (! (= (ite |main_#t~short8_-2| 1 0) |__VERIFIER_assert_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short8_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short8_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (<= main_~MINVAL~0_-2 1) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 4 (* main_~i~0_-2 4))) 2))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (<= main_~MINVAL~0_-2 1) (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 4 (* main_~i~0_-2 4))) 2)) :named ssa_-2_PendingContext))
(assert (! (= (ite |main_#t~short8_-2| 1 0) |__VERIFIER_assert_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
