(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:53:50+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id Problem05_label46+token_ring.02.cil-1.c_AllErrorsAtOnce_Iteration1)
(declare-fun |c_old(~d~0)| () Int)
(declare-fun |c_old(~d~0)_primed| () Int)
(declare-fun c_~d~0 () Int)
(declare-fun c_~d~0_primed () Int)
(declare-fun |c_old(~c~0)| () Int)
(declare-fun |c_old(~c~0)_primed| () Int)
(declare-fun c_~c~0 () Int)
(declare-fun c_~c~0_primed () Int)
(declare-fun |c_old(~e~0)| () Int)
(declare-fun |c_old(~e~0)_primed| () Int)
(declare-fun c_~e~0 () Int)
(declare-fun c_~e~0_primed () Int)
(declare-fun |c_old(~a~0)| () Int)
(declare-fun |c_old(~a~0)_primed| () Int)
(declare-fun c_~a~0 () Int)
(declare-fun c_~a~0_primed () Int)
(declare-fun |c_old(~f~0)| () Int)
(declare-fun |c_old(~f~0)_primed| () Int)
(declare-fun c_~f~0 () Int)
(declare-fun c_~f~0_primed () Int)
(declare-fun |c_old(~b~0)| () Int)
(declare-fun |c_old(~b~0)_primed| () Int)
(declare-fun c_~b~0 () Int)
(declare-fun c_~b~0_primed () Int)
(declare-fun |c_old(~a9~0)| () Int)
(declare-fun |c_old(~a9~0)_primed| () Int)
(declare-fun c_~a9~0 () Int)
(declare-fun c_~a9~0_primed () Int)
(declare-fun |c_old(~a27~0)| () Int)
(declare-fun |c_old(~a27~0)_primed| () Int)
(declare-fun c_~a27~0 () Int)
(declare-fun c_~a27~0_primed () Int)
(declare-fun |c_old(~a2~0)| () Int)
(declare-fun |c_old(~a2~0)_primed| () Int)
(declare-fun c_~a2~0 () Int)
(declare-fun c_~a2~0_primed () Int)
(declare-fun |c_old(~a16~0)| () Int)
(declare-fun |c_old(~a16~0)_primed| () Int)
(declare-fun c_~a16~0 () Int)
(declare-fun c_~a16~0_primed () Int)
(declare-fun |c_old(~a15~0)| () Int)
(declare-fun |c_old(~a15~0)_primed| () Int)
(declare-fun c_~a15~0 () Int)
(declare-fun c_~a15~0_primed () Int)
(declare-fun |c_old(~a12~0)| () Int)
(declare-fun |c_old(~a12~0)_primed| () Int)
(declare-fun c_~a12~0 () Int)
(declare-fun c_~a12~0_primed () Int)
(declare-fun |c_old(~a25~0)| () Int)
(declare-fun |c_old(~a25~0)_primed| () Int)
(declare-fun c_~a25~0 () Int)
(declare-fun c_~a25~0_primed () Int)
(declare-fun |c_old(~a20~0)| () Int)
(declare-fun |c_old(~a20~0)_primed| () Int)
(declare-fun c_~a20~0 () Int)
(declare-fun c_~a20~0_primed () Int)
(declare-fun |c_old(~m_pc~0)| () Int)
(declare-fun |c_old(~m_pc~0)_primed| () Int)
(declare-fun c_~m_pc~0 () Int)
(declare-fun c_~m_pc~0_primed () Int)
(declare-fun |c_old(~t1_pc~0)| () Int)
(declare-fun |c_old(~t1_pc~0)_primed| () Int)
(declare-fun c_~t1_pc~0 () Int)
(declare-fun c_~t1_pc~0_primed () Int)
(declare-fun |c_old(~t2_pc~0)| () Int)
(declare-fun |c_old(~t2_pc~0)_primed| () Int)
(declare-fun c_~t2_pc~0 () Int)
(declare-fun c_~t2_pc~0_primed () Int)
(declare-fun |c_old(~m_st~0)| () Int)
(declare-fun |c_old(~m_st~0)_primed| () Int)
(declare-fun c_~m_st~0 () Int)
(declare-fun c_~m_st~0_primed () Int)
(declare-fun |c_old(~t1_st~0)| () Int)
(declare-fun |c_old(~t1_st~0)_primed| () Int)
(declare-fun c_~t1_st~0 () Int)
(declare-fun c_~t1_st~0_primed () Int)
(declare-fun |c_old(~t2_st~0)| () Int)
(declare-fun |c_old(~t2_st~0)_primed| () Int)
(declare-fun c_~t2_st~0 () Int)
(declare-fun c_~t2_st~0_primed () Int)
(declare-fun |c_old(~m_i~0)| () Int)
(declare-fun |c_old(~m_i~0)_primed| () Int)
(declare-fun c_~m_i~0 () Int)
(declare-fun c_~m_i~0_primed () Int)
(declare-fun |c_old(~t1_i~0)| () Int)
(declare-fun |c_old(~t1_i~0)_primed| () Int)
(declare-fun c_~t1_i~0 () Int)
(declare-fun c_~t1_i~0_primed () Int)
(declare-fun |c_old(~t2_i~0)| () Int)
(declare-fun |c_old(~t2_i~0)_primed| () Int)
(declare-fun c_~t2_i~0 () Int)
(declare-fun c_~t2_i~0_primed () Int)
(declare-fun |c_old(~M_E~0)| () Int)
(declare-fun |c_old(~M_E~0)_primed| () Int)
(declare-fun c_~M_E~0 () Int)
(declare-fun c_~M_E~0_primed () Int)
(declare-fun |c_old(~T1_E~0)| () Int)
(declare-fun |c_old(~T1_E~0)_primed| () Int)
(declare-fun c_~T1_E~0 () Int)
(declare-fun c_~T1_E~0_primed () Int)
(declare-fun |c_old(~T2_E~0)| () Int)
(declare-fun |c_old(~T2_E~0)_primed| () Int)
(declare-fun c_~T2_E~0 () Int)
(declare-fun c_~T2_E~0_primed () Int)
(declare-fun |c_old(~E_M~0)| () Int)
(declare-fun |c_old(~E_M~0)_primed| () Int)
(declare-fun c_~E_M~0 () Int)
(declare-fun c_~E_M~0_primed () Int)
(declare-fun |c_old(~E_1~0)| () Int)
(declare-fun |c_old(~E_1~0)_primed| () Int)
(declare-fun c_~E_1~0 () Int)
(declare-fun c_~E_1~0_primed () Int)
(declare-fun |c_old(~E_2~0)| () Int)
(declare-fun |c_old(~E_2~0)_primed| () Int)
(declare-fun c_~E_2~0 () Int)
(declare-fun c_~E_2~0_primed () Int)
(declare-fun |c_old(~token~0)| () Int)
(declare-fun |c_old(~token~0)_primed| () Int)
(declare-fun c_~token~0 () Int)
(declare-fun c_~token~0_primed () Int)
(declare-fun |c_old(~local~0)| () Int)
(declare-fun |c_old(~local~0)_primed| () Int)
(declare-fun c_~local~0 () Int)
(declare-fun c_~local~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c___VERIFIER_nondet_ulong_#res| () Int)
(declare-fun |c___VERIFIER_nondet_ulong_#res_primed| () Int)
(declare-fun |c___VERIFIER_nondet_float_#res| () Real)
(declare-fun |c___VERIFIER_nondet_float_#res_primed| () Real)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet38| () Int)
(declare-fun |c_main_#t~nondet38_primed| () Int)
(declare-fun |c_main_#t~ret39| () Int)
(declare-fun |c_main_#t~ret39_primed| () Int)
(declare-fun |c_main_#t~ret40| () Int)
(declare-fun |c_main_#t~ret40_primed| () Int)
(declare-fun |c___VERIFIER_nondet_long_#res| () Int)
(declare-fun |c___VERIFIER_nondet_long_#res_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_calculate_output8_#in~input| () Int)
(declare-fun |c_calculate_output8_#in~input_primed| () Int)
(declare-fun |c_calculate_output8_#res| () Int)
(declare-fun |c_calculate_output8_#res_primed| () Int)
(declare-fun c_calculate_output8_~input () Int)
(declare-fun c_calculate_output8_~input_primed () Int)
(declare-fun |c_calculate_output7_#in~input| () Int)
(declare-fun |c_calculate_output7_#in~input_primed| () Int)
(declare-fun |c_calculate_output7_#res| () Int)
(declare-fun |c_calculate_output7_#res_primed| () Int)
(declare-fun |c_calculate_output7_#t~ret20| () Int)
(declare-fun |c_calculate_output7_#t~ret20_primed| () Int)
(declare-fun c_calculate_output7_~input () Int)
(declare-fun c_calculate_output7_~input_primed () Int)
(declare-fun |c_calculate_output6_#in~input| () Int)
(declare-fun |c_calculate_output6_#in~input_primed| () Int)
(declare-fun |c_calculate_output6_#res| () Int)
(declare-fun |c_calculate_output6_#res_primed| () Int)
(declare-fun |c_calculate_output6_#t~ret19| () Int)
(declare-fun |c_calculate_output6_#t~ret19_primed| () Int)
(declare-fun c_calculate_output6_~input () Int)
(declare-fun c_calculate_output6_~input_primed () Int)
(declare-fun |c_stop_simulation_#res| () Int)
(declare-fun |c_stop_simulation_#res_primed| () Int)
(declare-fun |c_stop_simulation_#t~ret35| () Int)
(declare-fun |c_stop_simulation_#t~ret35_primed| () Int)
(declare-fun c_stop_simulation_~tmp~2 () Int)
(declare-fun c_stop_simulation_~tmp~2_primed () Int)
(declare-fun c_stop_simulation_~__retres2~0 () Int)
(declare-fun c_stop_simulation_~__retres2~0_primed () Int)
(declare-fun |c_calculate_output5_#in~input| () Int)
(declare-fun |c_calculate_output5_#in~input_primed| () Int)
(declare-fun |c_calculate_output5_#res| () Int)
(declare-fun |c_calculate_output5_#res_primed| () Int)
(declare-fun |c_calculate_output5_#t~ret18| () Int)
(declare-fun |c_calculate_output5_#t~ret18_primed| () Int)
(declare-fun c_calculate_output5_~input () Int)
(declare-fun c_calculate_output5_~input_primed () Int)
(declare-fun |c_calculate_output4_#in~input| () Int)
(declare-fun |c_calculate_output4_#in~input_primed| () Int)
(declare-fun |c_calculate_output4_#res| () Int)
(declare-fun |c_calculate_output4_#res_primed| () Int)
(declare-fun |c_calculate_output4_#t~ret17| () Int)
(declare-fun |c_calculate_output4_#t~ret17_primed| () Int)
(declare-fun c_calculate_output4_~input () Int)
(declare-fun c_calculate_output4_~input_primed () Int)
(declare-fun |c_is_transmit2_triggered_#res| () Int)
(declare-fun |c_is_transmit2_triggered_#res_primed| () Int)
(declare-fun c_is_transmit2_triggered_~__retres1~2 () Int)
(declare-fun c_is_transmit2_triggered_~__retres1~2_primed () Int)
(declare-fun |c_calculate_output3_#in~input| () Int)
(declare-fun |c_calculate_output3_#in~input_primed| () Int)
(declare-fun |c_calculate_output3_#res| () Int)
(declare-fun |c_calculate_output3_#res_primed| () Int)
(declare-fun |c_calculate_output3_#t~ret16| () Int)
(declare-fun |c_calculate_output3_#t~ret16_primed| () Int)
(declare-fun c_calculate_output3_~input () Int)
(declare-fun c_calculate_output3_~input_primed () Int)
(declare-fun |c_calculate_output2_#in~input| () Int)
(declare-fun |c_calculate_output2_#in~input_primed| () Int)
(declare-fun |c_calculate_output2_#res| () Int)
(declare-fun |c_calculate_output2_#res_primed| () Int)
(declare-fun |c_calculate_output2_#t~ret15| () Int)
(declare-fun |c_calculate_output2_#t~ret15_primed| () Int)
(declare-fun c_calculate_output2_~input () Int)
(declare-fun c_calculate_output2_~input_primed () Int)
(declare-fun |c_calculate_output_#in~input| () Int)
(declare-fun |c_calculate_output_#in~input_primed| () Int)
(declare-fun |c_calculate_output_#res| () Int)
(declare-fun |c_calculate_output_#res_primed| () Int)
(declare-fun |c_calculate_output_#t~ret14| () Int)
(declare-fun |c_calculate_output_#t~ret14_primed| () Int)
(declare-fun c_calculate_output_~input () Int)
(declare-fun c_calculate_output_~input_primed () Int)
(declare-fun |c_is_master_triggered_#res| () Int)
(declare-fun |c_is_master_triggered_#res_primed| () Int)
(declare-fun c_is_master_triggered_~__retres1~0 () Int)
(declare-fun c_is_master_triggered_~__retres1~0_primed () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_activate_threads_#t~ret32| () Int)
(declare-fun |c_activate_threads_#t~ret32_primed| () Int)
(declare-fun |c_activate_threads_#t~ret33| () Int)
(declare-fun |c_activate_threads_#t~ret33_primed| () Int)
(declare-fun |c_activate_threads_#t~ret34| () Int)
(declare-fun |c_activate_threads_#t~ret34_primed| () Int)
(declare-fun c_activate_threads_~tmp~1 () Int)
(declare-fun c_activate_threads_~tmp~1_primed () Int)
(declare-fun c_activate_threads_~tmp___0~0 () Int)
(declare-fun c_activate_threads_~tmp___0~0_primed () Int)
(declare-fun c_activate_threads_~tmp___1~0 () Int)
(declare-fun c_activate_threads_~tmp___1~0_primed () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res| () Int)
(declare-fun |c___VERIFIER_nondet_uint_#res_primed| () Int)
(declare-fun |c_exists_runnable_thread_#res| () Int)
(declare-fun |c_exists_runnable_thread_#res_primed| () Int)
(declare-fun c_exists_runnable_thread_~__retres1~3 () Int)
(declare-fun c_exists_runnable_thread_~__retres1~3_primed () Int)
(declare-fun |c___VERIFIER_nondet_char_#res| () Int)
(declare-fun |c___VERIFIER_nondet_char_#res_primed| () Int)
(declare-fun |c_is_transmit1_triggered_#res| () Int)
(declare-fun |c_is_transmit1_triggered_#res_primed| () Int)
(declare-fun c_is_transmit1_triggered_~__retres1~1 () Int)
(declare-fun c_is_transmit1_triggered_~__retres1~1_primed () Int)
(declare-fun |c_master_#t~nondet27| () Int)
(declare-fun |c_master_#t~nondet27_primed| () Int)
(declare-fun |c_exit_#in~13| () Int)
(declare-fun |c_exit_#in~13_primed| () Int)
(declare-fun |c_eval_#t~ret28| () Int)
(declare-fun |c_eval_#t~ret28_primed| () Int)
(declare-fun |c_eval_#t~nondet29| () Int)
(declare-fun |c_eval_#t~nondet29_primed| () Int)
(declare-fun c_eval_~tmp_ndt_1~0 () Int)
(declare-fun c_eval_~tmp_ndt_1~0_primed () Int)
(declare-fun |c_eval_#t~nondet30| () Int)
(declare-fun |c_eval_#t~nondet30_primed| () Int)
(declare-fun c_eval_~tmp_ndt_2~0 () Int)
(declare-fun c_eval_~tmp_ndt_2~0_primed () Int)
(declare-fun |c_eval_#t~nondet31| () Int)
(declare-fun |c_eval_#t~nondet31_primed| () Int)
(declare-fun c_eval_~tmp_ndt_3~0 () Int)
(declare-fun c_eval_~tmp_ndt_3~0_primed () Int)
(declare-fun c_eval_~tmp~0 () Int)
(declare-fun c_eval_~tmp~0_primed () Int)
(declare-fun |c_main2_#res| () Int)
(declare-fun |c_main2_#res_primed| () Int)
(declare-fun c_main2_~__retres1~4 () Int)
(declare-fun c_main2_~__retres1~4_primed () Int)
(declare-fun |c_main1_#res| () Int)
(declare-fun |c_main1_#res_primed| () Int)
(declare-fun |c_main1_#t~nondet21| () Int)
(declare-fun |c_main1_#t~nondet21_primed| () Int)
(declare-fun |c_main1_#t~ret22| () Int)
(declare-fun |c_main1_#t~ret22_primed| () Int)
(declare-fun c_main1_~input~0 () Int)
(declare-fun c_main1_~input~0_primed () Int)
(declare-fun c_main1_~output~0 () Int)
(declare-fun c_main1_~output~0_primed () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_start_simulation_#t~ret36| () Int)
(declare-fun |c_start_simulation_#t~ret36_primed| () Int)
(declare-fun |c_start_simulation_#t~ret37| () Int)
(declare-fun |c_start_simulation_#t~ret37_primed| () Int)
(declare-fun c_start_simulation_~kernel_st~0 () Int)
(declare-fun c_start_simulation_~kernel_st~0_primed () Int)
(declare-fun c_start_simulation_~tmp~3 () Int)
(declare-fun c_start_simulation_~tmp~3_primed () Int)
(declare-fun c_start_simulation_~tmp___0~1 () Int)
(declare-fun c_start_simulation_~tmp___0~1_primed () Int)
(declare-fun |c_ULTIMATE.start_#t~ret41| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret41_primed| () Int)
(declare-fun |c___assert_fail_#in~23.base| () Int)
(declare-fun |c___assert_fail_#in~23.base_primed| () Int)
(declare-fun |c___assert_fail_#in~23.offset| () Int)
(declare-fun |c___assert_fail_#in~23.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~24.base| () Int)
(declare-fun |c___assert_fail_#in~24.base_primed| () Int)
(declare-fun |c___assert_fail_#in~24.offset| () Int)
(declare-fun |c___assert_fail_#in~24.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~25| () Int)
(declare-fun |c___assert_fail_#in~25_primed| () Int)
(declare-fun |c___assert_fail_#in~26.base| () Int)
(declare-fun |c___assert_fail_#in~26.base_primed| () Int)
(declare-fun |c___assert_fail_#in~26.offset| () Int)
(declare-fun |c___assert_fail_#in~26.offset_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun c_aux_v_main2_~__retres1~4_3 () Int)
(declare-fun c_aux_v_main1_~output~0_3 () Int)
(declare-fun c_aux_v_main1_~output~0_4 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_7 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_8 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_9 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_10 () Int)
(declare-fun c_aux_v_start_simulation_~kernel_st~0_11 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret41_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun ~t1_pc~0_-1 () Int)
(declare-fun ~M_E~0_-1 () Int)
(declare-fun ~a15~0_-1 () Int)
(declare-fun ~t2_i~0_-1 () Int)
(declare-fun ~token~0_-1 () Int)
(declare-fun ~a~0_-1 () Int)
(declare-fun ~E_1~0_-1 () Int)
(declare-fun ~c~0_-1 () Int)
(declare-fun ~a27~0_-1 () Int)
(declare-fun ~T1_E~0_-1 () Int)
(declare-fun ~e~0_-1 () Int)
(declare-fun ~a25~0_-1 () Int)
(declare-fun ~t2_st~0_-1 () Int)
(declare-fun ~t2_pc~0_-1 () Int)
(declare-fun ~T2_E~0_-1 () Int)
(declare-fun ~a20~0_-1 () Int)
(declare-fun ~a16~0_-1 () Int)
(declare-fun ~t1_st~0_-1 () Int)
(declare-fun ~a12~0_-1 () Int)
(declare-fun ~m_i~0_-1 () Int)
(declare-fun ~a9~0_-1 () Int)
(declare-fun ~a2~0_-1 () Int)
(declare-fun ~b~0_-1 () Int)
(declare-fun ~E_M~0_-1 () Int)
(declare-fun ~E_2~0_-1 () Int)
(declare-fun ~d~0_-1 () Int)
(declare-fun ~f~0_-1 () Int)
(declare-fun ~local~0_-1 () Int)
(declare-fun ~t1_i~0_-1 () Int)
(declare-fun ~m_st~0_-1 () Int)
(declare-fun ~m_pc~0_-1 () Int)
(declare-fun |old(~t1_pc~0)_-1| () Int)
(declare-fun |old(~M_E~0)_-1| () Int)
(declare-fun |old(~a15~0)_-1| () Int)
(declare-fun |old(~t2_i~0)_-1| () Int)
(declare-fun |old(~token~0)_-1| () Int)
(declare-fun |old(~a~0)_-1| () Int)
(declare-fun |old(~E_1~0)_-1| () Int)
(declare-fun |old(~c~0)_-1| () Int)
(declare-fun |old(~a27~0)_-1| () Int)
(declare-fun |old(~T1_E~0)_-1| () Int)
(declare-fun |old(~e~0)_-1| () Int)
(declare-fun |old(~a25~0)_-1| () Int)
(declare-fun |old(~t2_st~0)_-1| () Int)
(declare-fun |old(~t2_pc~0)_-1| () Int)
(declare-fun |old(~T2_E~0)_-1| () Int)
(declare-fun |old(~a20~0)_-1| () Int)
(declare-fun |old(~a16~0)_-1| () Int)
(declare-fun |old(~t1_st~0)_-1| () Int)
(declare-fun |old(~a12~0)_-1| () Int)
(declare-fun |old(~m_i~0)_-1| () Int)
(declare-fun |old(~a9~0)_-1| () Int)
(declare-fun |old(~a2~0)_-1| () Int)
(declare-fun |old(~b~0)_-1| () Int)
(declare-fun |old(~E_M~0)_-1| () Int)
(declare-fun |old(~E_2~0)_-1| () Int)
(declare-fun |old(~d~0)_-1| () Int)
(declare-fun |old(~f~0)_-1| () Int)
(declare-fun |old(~local~0)_-1| () Int)
(declare-fun |old(~t1_i~0)_-1| () Int)
(declare-fun |old(~m_st~0)_-1| () Int)
(declare-fun |old(~m_pc~0)_-1| () Int)
(declare-fun |old(~t1_pc~0)_0| () Int)
(declare-fun |old(~M_E~0)_0| () Int)
(declare-fun |old(~a15~0)_0| () Int)
(declare-fun |old(~t2_i~0)_0| () Int)
(declare-fun |old(~token~0)_0| () Int)
(declare-fun |old(~a~0)_0| () Int)
(declare-fun |old(~E_1~0)_0| () Int)
(declare-fun |old(~c~0)_0| () Int)
(declare-fun |old(~a27~0)_0| () Int)
(declare-fun |old(~T1_E~0)_0| () Int)
(declare-fun |old(~e~0)_0| () Int)
(declare-fun |old(~a25~0)_0| () Int)
(declare-fun |old(~t2_st~0)_0| () Int)
(declare-fun |old(~t2_pc~0)_0| () Int)
(declare-fun |old(~T2_E~0)_0| () Int)
(declare-fun |old(~a20~0)_0| () Int)
(declare-fun |old(~a16~0)_0| () Int)
(declare-fun |old(~t1_st~0)_0| () Int)
(declare-fun |old(~a12~0)_0| () Int)
(declare-fun |old(~m_i~0)_0| () Int)
(declare-fun |old(~a9~0)_0| () Int)
(declare-fun |old(~a2~0)_0| () Int)
(declare-fun |old(~E_M~0)_0| () Int)
(declare-fun |old(~b~0)_0| () Int)
(declare-fun |old(~E_2~0)_0| () Int)
(declare-fun |old(~d~0)_0| () Int)
(declare-fun |old(~local~0)_0| () Int)
(declare-fun |old(~f~0)_0| () Int)
(declare-fun |old(~t1_i~0)_0| () Int)
(declare-fun |old(~m_st~0)_0| () Int)
(declare-fun |old(~m_pc~0)_0| () Int)
(declare-fun ~t1_pc~0_0 () Int)
(declare-fun ~M_E~0_0 () Int)
(declare-fun ~a15~0_0 () Int)
(declare-fun ~t2_i~0_0 () Int)
(declare-fun ~token~0_0 () Int)
(declare-fun ~a~0_0 () Int)
(declare-fun ~E_1~0_0 () Int)
(declare-fun ~c~0_0 () Int)
(declare-fun ~a27~0_0 () Int)
(declare-fun ~T1_E~0_0 () Int)
(declare-fun ~e~0_0 () Int)
(declare-fun ~a25~0_0 () Int)
(declare-fun ~t2_st~0_0 () Int)
(declare-fun ~t2_pc~0_0 () Int)
(declare-fun ~T2_E~0_0 () Int)
(declare-fun ~a20~0_0 () Int)
(declare-fun ~a16~0_0 () Int)
(declare-fun ~t1_st~0_0 () Int)
(declare-fun ~a12~0_0 () Int)
(declare-fun ~m_i~0_0 () Int)
(declare-fun ~a9~0_0 () Int)
(declare-fun ~a2~0_0 () Int)
(declare-fun ~E_M~0_0 () Int)
(declare-fun ~b~0_0 () Int)
(declare-fun ~E_2~0_0 () Int)
(declare-fun ~d~0_0 () Int)
(declare-fun ~local~0_0 () Int)
(declare-fun ~f~0_0 () Int)
(declare-fun ~t1_i~0_0 () Int)
(declare-fun ~m_st~0_0 () Int)
(declare-fun ~m_pc~0_0 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~t1_pc~0_1 () Int)
(declare-fun ~M_E~0_1 () Int)
(declare-fun ~a15~0_1 () Int)
(declare-fun ~t2_i~0_1 () Int)
(declare-fun ~token~0_1 () Int)
(declare-fun ~a~0_1 () Int)
(declare-fun ~E_1~0_1 () Int)
(declare-fun ~c~0_1 () Int)
(declare-fun ~a27~0_1 () Int)
(declare-fun ~T1_E~0_1 () Int)
(declare-fun ~e~0_1 () Int)
(declare-fun ~a25~0_1 () Int)
(declare-fun ~t2_st~0_1 () Int)
(declare-fun ~t2_pc~0_1 () Int)
(declare-fun ~T2_E~0_1 () Int)
(declare-fun ~a20~0_1 () Int)
(declare-fun ~a16~0_1 () Int)
(declare-fun ~t1_st~0_1 () Int)
(declare-fun ~a12~0_1 () Int)
(declare-fun ~m_i~0_1 () Int)
(declare-fun ~a9~0_1 () Int)
(declare-fun ~a2~0_1 () Int)
(declare-fun ~E_M~0_1 () Int)
(declare-fun ~b~0_1 () Int)
(declare-fun ~E_2~0_1 () Int)
(declare-fun ~d~0_1 () Int)
(declare-fun ~local~0_1 () Int)
(declare-fun ~f~0_1 () Int)
(declare-fun ~t1_i~0_1 () Int)
(declare-fun ~m_st~0_1 () Int)
(declare-fun ~m_pc~0_1 () Int)
(declare-fun |old(~T2_E~0)_3| () Int)
(declare-fun |old(~a20~0)_3| () Int)
(declare-fun |old(~t1_pc~0)_3| () Int)
(declare-fun |old(~t1_st~0)_3| () Int)
(declare-fun |old(~M_E~0)_3| () Int)
(declare-fun |old(~a12~0)_3| () Int)
(declare-fun |old(~a15~0)_3| () Int)
(declare-fun |old(~m_i~0)_3| () Int)
(declare-fun |old(~t2_i~0)_3| () Int)
(declare-fun |old(~a9~0)_3| () Int)
(declare-fun |old(~token~0)_3| () Int)
(declare-fun |old(~a2~0)_3| () Int)
(declare-fun |old(~E_1~0)_3| () Int)
(declare-fun |old(~E_M~0)_3| () Int)
(declare-fun |old(~T1_E~0)_3| () Int)
(declare-fun |old(~E_2~0)_3| () Int)
(declare-fun |old(~a25~0)_3| () Int)
(declare-fun |old(~local~0)_3| () Int)
(declare-fun |old(~t1_i~0)_3| () Int)
(declare-fun |old(~m_st~0)_3| () Int)
(declare-fun |old(~m_pc~0)_3| () Int)
(declare-fun |old(~t2_pc~0)_3| () Int)
(declare-fun |old(~t2_st~0)_3| () Int)
(declare-fun ~T2_E~0_3 () Int)
(declare-fun ~a20~0_3 () Int)
(declare-fun ~t1_pc~0_3 () Int)
(declare-fun ~t1_st~0_3 () Int)
(declare-fun ~M_E~0_3 () Int)
(declare-fun ~a12~0_3 () Int)
(declare-fun ~a15~0_3 () Int)
(declare-fun ~m_i~0_3 () Int)
(declare-fun ~t2_i~0_3 () Int)
(declare-fun ~a9~0_3 () Int)
(declare-fun ~token~0_3 () Int)
(declare-fun ~a2~0_3 () Int)
(declare-fun ~E_1~0_3 () Int)
(declare-fun ~E_M~0_3 () Int)
(declare-fun ~T1_E~0_3 () Int)
(declare-fun ~E_2~0_3 () Int)
(declare-fun ~a25~0_3 () Int)
(declare-fun ~local~0_3 () Int)
(declare-fun ~t1_i~0_3 () Int)
(declare-fun ~m_st~0_3 () Int)
(declare-fun ~m_pc~0_3 () Int)
(declare-fun ~t2_pc~0_3 () Int)
(declare-fun ~t2_st~0_3 () Int)
(declare-fun |main_#t~nondet38_4| () Int)
(declare-fun |main_#t~nondet38_5| () Int)
(declare-fun |old(~T2_E~0)_6| () Int)
(declare-fun |old(~t1_pc~0)_6| () Int)
(declare-fun |old(~t1_st~0)_6| () Int)
(declare-fun |old(~M_E~0)_6| () Int)
(declare-fun |old(~m_i~0)_6| () Int)
(declare-fun |old(~t2_i~0)_6| () Int)
(declare-fun |old(~token~0)_6| () Int)
(declare-fun |old(~E_1~0)_6| () Int)
(declare-fun |old(~E_M~0)_6| () Int)
(declare-fun |old(~T1_E~0)_6| () Int)
(declare-fun |old(~E_2~0)_6| () Int)
(declare-fun |old(~local~0)_6| () Int)
(declare-fun |old(~t1_i~0)_6| () Int)
(declare-fun |old(~m_st~0)_6| () Int)
(declare-fun |old(~m_pc~0)_6| () Int)
(declare-fun |old(~t2_pc~0)_6| () Int)
(declare-fun |old(~t2_st~0)_6| () Int)
(declare-fun ~T2_E~0_6 () Int)
(declare-fun ~t1_pc~0_6 () Int)
(declare-fun ~t1_st~0_6 () Int)
(declare-fun ~M_E~0_6 () Int)
(declare-fun ~m_i~0_6 () Int)
(declare-fun ~t2_i~0_6 () Int)
(declare-fun ~token~0_6 () Int)
(declare-fun ~E_1~0_6 () Int)
(declare-fun ~E_M~0_6 () Int)
(declare-fun ~T1_E~0_6 () Int)
(declare-fun ~E_2~0_6 () Int)
(declare-fun ~local~0_6 () Int)
(declare-fun ~t1_i~0_6 () Int)
(declare-fun ~m_st~0_6 () Int)
(declare-fun ~m_pc~0_6 () Int)
(declare-fun ~t2_pc~0_6 () Int)
(declare-fun ~t2_st~0_6 () Int)
(declare-fun main2_~__retres1~4_7 () Int)
(declare-fun |old(~t1_i~0)_8| () Int)
(declare-fun |old(~m_i~0)_8| () Int)
(declare-fun |old(~t2_i~0)_8| () Int)
(declare-fun ~t1_i~0_8 () Int)
(declare-fun ~m_i~0_8 () Int)
(declare-fun ~t2_i~0_8 () Int)
(declare-fun ~t1_i~0_9 () Int)
(declare-fun ~m_i~0_9 () Int)
(declare-fun ~t2_i~0_9 () Int)
(declare-fun |old(~T2_E~0)_11| () Int)
(declare-fun |old(~t1_pc~0)_11| () Int)
(declare-fun |old(~t1_st~0)_11| () Int)
(declare-fun |old(~M_E~0)_11| () Int)
(declare-fun |old(~token~0)_11| () Int)
(declare-fun |old(~E_1~0)_11| () Int)
(declare-fun |old(~E_M~0)_11| () Int)
(declare-fun |old(~T1_E~0)_11| () Int)
(declare-fun |old(~E_2~0)_11| () Int)
(declare-fun |old(~local~0)_11| () Int)
(declare-fun |old(~m_st~0)_11| () Int)
(declare-fun |old(~m_pc~0)_11| () Int)
(declare-fun |old(~t2_pc~0)_11| () Int)
(declare-fun |old(~t2_st~0)_11| () Int)
(declare-fun ~T2_E~0_11 () Int)
(declare-fun ~t1_pc~0_11 () Int)
(declare-fun ~t1_st~0_11 () Int)
(declare-fun ~M_E~0_11 () Int)
(declare-fun ~token~0_11 () Int)
(declare-fun ~E_1~0_11 () Int)
(declare-fun ~E_M~0_11 () Int)
(declare-fun ~T1_E~0_11 () Int)
(declare-fun ~E_2~0_11 () Int)
(declare-fun ~local~0_11 () Int)
(declare-fun ~m_st~0_11 () Int)
(declare-fun ~m_pc~0_11 () Int)
(declare-fun ~t2_pc~0_11 () Int)
(declare-fun ~t2_st~0_11 () Int)
(declare-fun start_simulation_~tmp~3_12 () Int)
(declare-fun start_simulation_~tmp___0~1_12 () Int)
(declare-fun v_start_simulation_~kernel_st~0_14_fresh_1 () Int)
(declare-fun |old(~t1_st~0)_16| () Int)
(declare-fun |old(~m_st~0)_16| () Int)
(declare-fun |old(~t2_st~0)_16| () Int)
(declare-fun ~t1_st~0_16 () Int)
(declare-fun ~m_st~0_16 () Int)
(declare-fun ~t2_st~0_16 () Int)
(declare-fun ~m_st~0_17 () Int)
(declare-fun ~t1_st~0_18 () Int)
(declare-fun ~t2_st~0_19 () Int)
(declare-fun |old(~T2_E~0)_22| () Int)
(declare-fun |old(~E_1~0)_22| () Int)
(declare-fun |old(~E_M~0)_22| () Int)
(declare-fun |old(~T1_E~0)_22| () Int)
(declare-fun |old(~E_2~0)_22| () Int)
(declare-fun |old(~M_E~0)_22| () Int)
(declare-fun ~T2_E~0_22 () Int)
(declare-fun ~E_1~0_22 () Int)
(declare-fun ~E_M~0_22 () Int)
(declare-fun ~T1_E~0_22 () Int)
(declare-fun ~E_2~0_22 () Int)
(declare-fun ~M_E~0_22 () Int)
(declare-fun ~M_E~0_23 () Int)
(declare-fun ~T1_E~0_24 () Int)
(declare-fun ~T2_E~0_25 () Int)
(declare-fun ~E_M~0_26 () Int)
(declare-fun ~E_2~0_28 () Int)
(declare-fun |old(~t1_st~0)_31| () Int)
(declare-fun |old(~m_st~0)_31| () Int)
(declare-fun |old(~t2_st~0)_31| () Int)
(declare-fun ~t1_st~0_31 () Int)
(declare-fun ~m_st~0_31 () Int)
(declare-fun ~t2_st~0_31 () Int)
(declare-fun activate_threads_~tmp___1~0_32 () Int)
(declare-fun activate_threads_~tmp~1_32 () Int)
(declare-fun activate_threads_~tmp___0~0_32 () Int)
(declare-fun is_master_triggered_~__retres1~0_34 () Int)
(declare-fun is_master_triggered_~__retres1~0_36 () Int)
(declare-fun |is_master_triggered_#res_37| () Int)
(declare-fun is_master_triggered_~__retres1~0_37 () Int)
(declare-fun |is_master_triggered_#res_38| () Int)
(declare-fun |activate_threads_#t~ret32_38| () Int)
(declare-fun |activate_threads_#t~ret32_39| () Int)
(declare-fun activate_threads_~tmp~1_39 () Int)
(declare-fun activate_threads_~tmp~1_40 () Int)
(declare-fun ~m_st~0_40 () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_42 () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_44 () Int)
(declare-fun |is_transmit1_triggered_#res_45| () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_45 () Int)
(declare-fun |activate_threads_#t~ret33_46| () Int)
(declare-fun |is_transmit1_triggered_#res_46| () Int)
(declare-fun |activate_threads_#t~ret33_47| () Int)
(declare-fun activate_threads_~tmp___0~0_47 () Int)
(declare-fun ~t1_st~0_48 () Int)
(declare-fun activate_threads_~tmp___0~0_48 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_50 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_52 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_53 () Int)
(declare-fun |is_transmit2_triggered_#res_53| () Int)
(declare-fun |activate_threads_#t~ret34_54| () Int)
(declare-fun |is_transmit2_triggered_#res_54| () Int)
(declare-fun |activate_threads_#t~ret34_55| () Int)
(declare-fun activate_threads_~tmp___1~0_55 () Int)
(declare-fun activate_threads_~tmp___1~0_56 () Int)
(declare-fun ~t2_st~0_56 () Int)
(declare-fun |old(~T2_E~0)_59| () Int)
(declare-fun |old(~E_1~0)_59| () Int)
(declare-fun |old(~E_M~0)_59| () Int)
(declare-fun |old(~T1_E~0)_59| () Int)
(declare-fun |old(~E_2~0)_59| () Int)
(declare-fun |old(~M_E~0)_59| () Int)
(declare-fun ~T2_E~0_59 () Int)
(declare-fun ~E_1~0_59 () Int)
(declare-fun ~E_M~0_59 () Int)
(declare-fun ~T1_E~0_59 () Int)
(declare-fun ~E_2~0_59 () Int)
(declare-fun ~M_E~0_59 () Int)
(declare-fun ~T1_E~0_61 () Int)
(declare-fun ~T2_E~0_62 () Int)
(declare-fun ~E_M~0_63 () Int)
(declare-fun ~E_1~0_64 () Int)
(declare-fun ~E_2~0_65 () Int)
(declare-fun |old(~token~0)_69| () Int)
(declare-fun |old(~E_1~0)_69| () Int)
(declare-fun |old(~t1_st~0)_69| () Int)
(declare-fun |old(~t1_pc~0)_69| () Int)
(declare-fun |old(~E_M~0)_69| () Int)
(declare-fun |old(~E_2~0)_69| () Int)
(declare-fun |old(~local~0)_69| () Int)
(declare-fun |old(~m_st~0)_69| () Int)
(declare-fun |old(~m_pc~0)_69| () Int)
(declare-fun |old(~t2_pc~0)_69| () Int)
(declare-fun |old(~t2_st~0)_69| () Int)
(declare-fun ~token~0_69 () Int)
(declare-fun ~E_1~0_69 () Int)
(declare-fun ~t1_st~0_69 () Int)
(declare-fun ~t1_pc~0_69 () Int)
(declare-fun ~E_M~0_69 () Int)
(declare-fun ~E_2~0_69 () Int)
(declare-fun ~local~0_69 () Int)
(declare-fun ~m_st~0_69 () Int)
(declare-fun ~m_pc~0_69 () Int)
(declare-fun ~t2_pc~0_69 () Int)
(declare-fun ~t2_st~0_69 () Int)
(declare-fun eval_~tmp~0_70 () Int)
(declare-fun exists_runnable_thread_~__retres1~3_73 () Int)
(declare-fun exists_runnable_thread_~__retres1~3_74 () Int)
(declare-fun exists_runnable_thread_~__retres1~3_75 () Int)
(declare-fun |exists_runnable_thread_#res_75| () Int)
(declare-fun |eval_#t~ret28_76| () Int)
(declare-fun |exists_runnable_thread_#res_76| () Int)
(declare-fun |eval_#t~ret28_77| () Int)
(declare-fun eval_~tmp~0_77 () Int)
(declare-fun eval_~tmp~0_78 () Int)
(declare-fun eval_~tmp_ndt_1~0_79 () Int)
(declare-fun |eval_#t~nondet29_79| () Int)
(declare-fun eval_~tmp_ndt_1~0_80 () Int)
(declare-fun ~m_st~0_80 () Int)
(declare-fun |old(~token~0)_81| () Int)
(declare-fun |old(~E_1~0)_81| () Int)
(declare-fun |old(~t1_st~0)_81| () Int)
(declare-fun |old(~local~0)_81| () Int)
(declare-fun |old(~m_st~0)_81| () Int)
(declare-fun |old(~m_pc~0)_81| () Int)
(declare-fun |old(~t2_st~0)_81| () Int)
(declare-fun ~token~0_81 () Int)
(declare-fun ~E_1~0_81 () Int)
(declare-fun ~t1_st~0_81 () Int)
(declare-fun ~local~0_81 () Int)
(declare-fun ~m_st~0_81 () Int)
(declare-fun ~m_pc~0_81 () Int)
(declare-fun ~t2_st~0_81 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |old(~E_2~0)_0| ~E_2~0_0) (= ~t1_pc~0_0 |old(~t1_pc~0)_0|) (= |old(~M_E~0)_0| ~M_E~0_0) (= |old(~a12~0)_0| ~a12~0_0) (= |old(~T1_E~0)_0| ~T1_E~0_0) (= |old(~a15~0)_0| ~a15~0_0) (= ~token~0_0 |old(~token~0)_0|) (= ~E_M~0_0 |old(~E_M~0)_0|) (= |old(~e~0)_0| ~e~0_0) (= |old(~a16~0)_0| ~a16~0_0) (= |old(~f~0)_0| ~f~0_0) (= ~a25~0_0 |old(~a25~0)_0|) (= ~t1_st~0_0 |old(~t1_st~0)_0|) (= |old(~local~0)_0| ~local~0_0) (= |old(~a9~0)_0| ~a9~0_0) (= |old(~b~0)_0| ~b~0_0) (= |old(~t2_i~0)_0| ~t2_i~0_0) (= |old(~a~0)_0| ~a~0_0) (= |old(~a2~0)_0| ~a2~0_0) (= ~t2_pc~0_0 |old(~t2_pc~0)_0|) (= |old(~c~0)_0| ~c~0_0) (= |old(~a27~0)_0| ~a27~0_0) (= |old(~a20~0)_0| ~a20~0_0) (= |old(~m_i~0)_0| ~m_i~0_0) (= |old(~E_1~0)_0| ~E_1~0_0) (= |old(~m_pc~0)_0| ~m_pc~0_0) (= ~m_st~0_0 |old(~m_st~0)_0|) (= |old(~t2_st~0)_0| ~t2_st~0_0) (= |old(~t1_i~0)_0| ~t1_i~0_0) (= ~d~0_0 |old(~d~0)_0|) (= |old(~T2_E~0)_0| ~T2_E~0_0)) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (and (= |old(~a15~0)_0| ~a15~0_-1) (= ~a25~0_-1 |old(~a25~0)_0|) (= ~a2~0_-1 |old(~a2~0)_0|) (= ~a27~0_-1 |old(~a27~0)_0|) (= ~a9~0_-1 |old(~a9~0)_0|) (= |old(~t2_pc~0)_0| ~t2_pc~0_-1) (= |old(~token~0)_0| ~token~0_-1) (= ~E_2~0_-1 |old(~E_2~0)_0|) (= ~b~0_-1 |old(~b~0)_0|) (= ~m_pc~0_-1 |old(~m_pc~0)_0|) (= ~a16~0_-1 |old(~a16~0)_0|) (= ~a12~0_-1 |old(~a12~0)_0|) (= |old(~M_E~0)_0| ~M_E~0_-1) (= ~d~0_-1 |old(~d~0)_0|) (= |old(~f~0)_0| ~f~0_-1) (= |old(~T2_E~0)_0| ~T2_E~0_-1) (= ~t1_pc~0_-1 |old(~t1_pc~0)_0|) (= ~a20~0_-1 |old(~a20~0)_0|) (= |old(~m_st~0)_0| ~m_st~0_-1) (= ~t1_i~0_-1 |old(~t1_i~0)_0|) (= |old(~a~0)_0| ~a~0_-1) (= ~E_1~0_-1 |old(~E_1~0)_0|) (= ~e~0_-1 |old(~e~0)_0|) (= |old(~t1_st~0)_0| ~t1_st~0_-1) (= ~t2_i~0_-1 |old(~t2_i~0)_0|) (= ~T1_E~0_-1 |old(~T1_E~0)_0|) (= |old(~local~0)_0| ~local~0_-1) (= ~m_i~0_-1 |old(~m_i~0)_0|) (= |old(~c~0)_0| ~c~0_-1) (= ~E_M~0_-1 |old(~E_M~0)_0|) (= ~t2_st~0_-1 |old(~t2_st~0)_0|)) :named ssa_0_OldVarAssigCall))
(assert (! (and (= 2 ~T2_E~0_1) (= 2 ~b~0_1) (= ~t2_st~0_1 0) (= ~m_pc~0_1 0) (= ~a9~0_1 18) (= 0 ~t1_i~0_1) (< 0 |#StackHeapBarrier_-1|) (= 5 ~a20~0_1) (= ~T1_E~0_1 2) (= 12 (select |#length_-1| 3)) (= ~t1_pc~0_1 0) (= 2 ~E_1~0_1) (= 20 (select |#length_-1| 2)) (= 4 ~d~0_1) (= ~t2_pc~0_1 0) (= ~m_st~0_1 0) (= ~t1_st~0_1 0) (= ~a16~0_1 1) (= ~t2_i~0_1 0) (= 3 ~c~0_1) (= 2 ~E_M~0_1) (= ~a27~0_1 1) (= ~local~0_1 0) (= ~M_E~0_1 2) (= 6 ~f~0_1) (= ~a15~0_1 1) (= 1 ~a25~0_1) (= ~m_i~0_1 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~a2~0_1 10) (= ~a12~0_1 4) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= 2 ~E_2~0_1) (= (select |#length_-1| 1) 2) (= ~a~0_1 1) (= ~token~0_1 0) (= 5 ~e~0_1) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(~E_2~0)_3| ~E_2~0_3) (= ~t1_pc~0_3 |old(~t1_pc~0)_3|) (= |old(~M_E~0)_3| ~M_E~0_3) (= |old(~a12~0)_3| ~a12~0_3) (= |old(~T1_E~0)_3| ~T1_E~0_3) (= |old(~a15~0)_3| ~a15~0_3) (= ~token~0_3 |old(~token~0)_3|) (= ~E_M~0_3 |old(~E_M~0)_3|) (= ~a25~0_3 |old(~a25~0)_3|) (= ~t1_st~0_3 |old(~t1_st~0)_3|) (= |old(~local~0)_3| ~local~0_3) (= |old(~a9~0)_3| ~a9~0_3) (= |old(~t2_i~0)_3| ~t2_i~0_3) (= |old(~a2~0)_3| ~a2~0_3) (= ~t2_pc~0_3 |old(~t2_pc~0)_3|) (= |old(~a20~0)_3| ~a20~0_3) (= |old(~m_i~0)_3| ~m_i~0_3) (= |old(~E_1~0)_3| ~E_1~0_3) (= |old(~m_pc~0)_3| ~m_pc~0_3) (= ~m_st~0_3 |old(~m_st~0)_3|) (= |old(~t2_st~0)_3| ~t2_st~0_3) (= |old(~t1_i~0)_3| ~t1_i~0_3) (= |old(~T2_E~0)_3| ~T2_E~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(~a15~0)_3| ~a15~0_1) (= ~a25~0_1 |old(~a25~0)_3|) (= ~a2~0_1 |old(~a2~0)_3|) (= ~a9~0_1 |old(~a9~0)_3|) (= |old(~t2_pc~0)_3| ~t2_pc~0_1) (= |old(~token~0)_3| ~token~0_1) (= ~E_2~0_1 |old(~E_2~0)_3|) (= ~m_pc~0_1 |old(~m_pc~0)_3|) (= ~a12~0_1 |old(~a12~0)_3|) (= |old(~M_E~0)_3| ~M_E~0_1) (= |old(~T2_E~0)_3| ~T2_E~0_1) (= ~t1_pc~0_1 |old(~t1_pc~0)_3|) (= ~a20~0_1 |old(~a20~0)_3|) (= |old(~m_st~0)_3| ~m_st~0_1) (= ~t1_i~0_1 |old(~t1_i~0)_3|) (= ~E_1~0_1 |old(~E_1~0)_3|) (= |old(~t1_st~0)_3| ~t1_st~0_1) (= ~t2_i~0_1 |old(~t2_i~0)_3|) (= ~T1_E~0_1 |old(~T1_E~0)_3|) (= |old(~local~0)_3| ~local~0_1) (= ~m_i~0_1 |old(~m_i~0)_3|) (= ~E_M~0_1 |old(~E_M~0)_3|) (= ~t2_st~0_1 |old(~t2_st~0)_3|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= 0 (+ |main_#t~nondet38_4| 2147483648)) (<= |main_#t~nondet38_4| 2147483647)) :named ssa_4))
(assert (! (= |main_#t~nondet38_4| 0) :named ssa_5))
(assert (! (and (= |old(~E_2~0)_6| ~E_2~0_6) (= ~t1_pc~0_6 |old(~t1_pc~0)_6|) (= |old(~M_E~0)_6| ~M_E~0_6) (= |old(~T1_E~0)_6| ~T1_E~0_6) (= ~token~0_6 |old(~token~0)_6|) (= ~E_M~0_6 |old(~E_M~0)_6|) (= ~t1_st~0_6 |old(~t1_st~0)_6|) (= |old(~local~0)_6| ~local~0_6) (= |old(~t2_i~0)_6| ~t2_i~0_6) (= ~t2_pc~0_6 |old(~t2_pc~0)_6|) (= |old(~m_i~0)_6| ~m_i~0_6) (= |old(~E_1~0)_6| ~E_1~0_6) (= |old(~m_pc~0)_6| ~m_pc~0_6) (= ~m_st~0_6 |old(~m_st~0)_6|) (= |old(~t2_st~0)_6| ~t2_st~0_6) (= |old(~t1_i~0)_6| ~t1_i~0_6) (= |old(~T2_E~0)_6| ~T2_E~0_6)) :named ssa_6_GlobVarAssigCall))
(assert (! true :named ssa_6_LocVarAssigCall))
(assert (! (and (= |old(~t2_pc~0)_6| ~t2_pc~0_3) (= |old(~token~0)_6| ~token~0_3) (= ~E_2~0_3 |old(~E_2~0)_6|) (= ~m_pc~0_3 |old(~m_pc~0)_6|) (= |old(~M_E~0)_6| ~M_E~0_3) (= |old(~T2_E~0)_6| ~T2_E~0_3) (= ~t1_pc~0_3 |old(~t1_pc~0)_6|) (= |old(~m_st~0)_6| ~m_st~0_3) (= ~t1_i~0_3 |old(~t1_i~0)_6|) (= ~E_1~0_3 |old(~E_1~0)_6|) (= |old(~t1_st~0)_6| ~t1_st~0_3) (= ~t2_i~0_3 |old(~t2_i~0)_6|) (= ~T1_E~0_3 |old(~T1_E~0)_6|) (= |old(~local~0)_6| ~local~0_3) (= ~m_i~0_3 |old(~m_i~0)_6|) (= ~E_M~0_3 |old(~E_M~0)_6|) (= ~t2_st~0_3 |old(~t2_st~0)_6|)) :named ssa_6_OldVarAssigCall))
(assert (! true :named ssa_7))
(assert (! (and (= |old(~t2_i~0)_8| ~t2_i~0_8) (= |old(~m_i~0)_8| ~m_i~0_8) (= |old(~t1_i~0)_8| ~t1_i~0_8)) :named ssa_8_GlobVarAssigCall))
(assert (! true :named ssa_8_LocVarAssigCall))
(assert (! (and (= ~t1_i~0_6 |old(~t1_i~0)_8|) (= ~t2_i~0_6 |old(~t2_i~0)_8|) (= ~m_i~0_6 |old(~m_i~0)_8|)) :named ssa_8_OldVarAssigCall))
(assert (! (and (= ~t2_i~0_9 1) (= ~t1_i~0_9 1) (= ~m_i~0_9 1)) :named ssa_9))
(assert (! true :named ssa_10_return))
(assert (! (and (= |old(~E_2~0)_11| ~E_2~0_11) (= ~t1_pc~0_11 |old(~t1_pc~0)_11|) (= |old(~M_E~0)_11| ~M_E~0_11) (= |old(~T1_E~0)_11| ~T1_E~0_11) (= ~token~0_11 |old(~token~0)_11|) (= ~E_M~0_11 |old(~E_M~0)_11|) (= ~t1_st~0_11 |old(~t1_st~0)_11|) (= |old(~local~0)_11| ~local~0_11) (= ~t2_pc~0_11 |old(~t2_pc~0)_11|) (= |old(~E_1~0)_11| ~E_1~0_11) (= |old(~m_pc~0)_11| ~m_pc~0_11) (= ~m_st~0_11 |old(~m_st~0)_11|) (= |old(~t2_st~0)_11| ~t2_st~0_11) (= |old(~T2_E~0)_11| ~T2_E~0_11)) :named ssa_11_GlobVarAssigCall))
(assert (! true :named ssa_11_LocVarAssigCall))
(assert (! (and (= |old(~t2_pc~0)_11| ~t2_pc~0_6) (= |old(~token~0)_11| ~token~0_6) (= ~E_2~0_6 |old(~E_2~0)_11|) (= ~m_pc~0_6 |old(~m_pc~0)_11|) (= |old(~M_E~0)_11| ~M_E~0_6) (= |old(~T2_E~0)_11| ~T2_E~0_6) (= ~t1_pc~0_6 |old(~t1_pc~0)_11|) (= |old(~m_st~0)_11| ~m_st~0_6) (= ~E_1~0_6 |old(~E_1~0)_11|) (= |old(~t1_st~0)_11| ~t1_st~0_6) (= ~T1_E~0_6 |old(~T1_E~0)_11|) (= |old(~local~0)_11| ~local~0_6) (= ~E_M~0_6 |old(~E_M~0)_11|) (= ~t2_st~0_6 |old(~t2_st~0)_11|)) :named ssa_11_OldVarAssigCall))
(assert (! (= v_start_simulation_~kernel_st~0_14_fresh_1 0) :named ssa_12))
(assert (! true :named ssa_13_GlobVarAssigCall))
(assert (! true :named ssa_13_LocVarAssigCall))
(assert (! true :named ssa_13_OldVarAssigCall))
(assert (! true :named ssa_14))
(assert (! true :named ssa_15_return))
(assert (! (and (= ~t1_st~0_16 |old(~t1_st~0)_16|) (= ~m_st~0_16 |old(~m_st~0)_16|) (= |old(~t2_st~0)_16| ~t2_st~0_16)) :named ssa_16_GlobVarAssigCall))
(assert (! true :named ssa_16_LocVarAssigCall))
(assert (! (and (= |old(~m_st~0)_16| ~m_st~0_11) (= |old(~t1_st~0)_16| ~t1_st~0_11) (= ~t2_st~0_11 |old(~t2_st~0)_16|)) :named ssa_16_OldVarAssigCall))
(assert (! (and (= ~m_st~0_17 0) (= ~m_i~0_9 1)) :named ssa_17))
(assert (! (and (= ~t1_st~0_18 0) (= ~t1_i~0_9 1)) :named ssa_18))
(assert (! (and (= ~t2_st~0_19 0) (= ~t2_i~0_9 1)) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! true :named ssa_21_return))
(assert (! (and (= |old(~E_2~0)_22| ~E_2~0_22) (= |old(~M_E~0)_22| ~M_E~0_22) (= |old(~T1_E~0)_22| ~T1_E~0_22) (= ~E_M~0_22 |old(~E_M~0)_22|) (= |old(~E_1~0)_22| ~E_1~0_22) (= |old(~T2_E~0)_22| ~T2_E~0_22)) :named ssa_22_GlobVarAssigCall))
(assert (! true :named ssa_22_LocVarAssigCall))
(assert (! (and (= ~E_2~0_11 |old(~E_2~0)_22|) (= |old(~M_E~0)_22| ~M_E~0_11) (= |old(~T2_E~0)_22| ~T2_E~0_11) (= ~E_1~0_11 |old(~E_1~0)_22|) (= ~T1_E~0_11 |old(~T1_E~0)_22|) (= ~E_M~0_11 |old(~E_M~0)_22|)) :named ssa_22_OldVarAssigCall))
(assert (! (and (= ~M_E~0_23 1) (= ~M_E~0_22 0)) :named ssa_23))
(assert (! (and (= ~T1_E~0_22 0) (= ~T1_E~0_24 1)) :named ssa_24))
(assert (! (and (= ~T2_E~0_25 1) (= ~T2_E~0_22 0)) :named ssa_25))
(assert (! (and (= ~E_M~0_22 0) (= ~E_M~0_26 1)) :named ssa_26))
(assert (! (not (= ~E_1~0_22 0)) :named ssa_27))
(assert (! (and (= ~E_2~0_28 1) (= ~E_2~0_22 0)) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! true :named ssa_30_return))
(assert (! (and (= ~t1_st~0_31 |old(~t1_st~0)_31|) (= ~m_st~0_31 |old(~m_st~0)_31|) (= |old(~t2_st~0)_31| ~t2_st~0_31)) :named ssa_31_GlobVarAssigCall))
(assert (! true :named ssa_31_LocVarAssigCall))
(assert (! (and (= |old(~m_st~0)_31| ~m_st~0_17) (= |old(~t1_st~0)_31| ~t1_st~0_18) (= ~t2_st~0_19 |old(~t2_st~0)_31|)) :named ssa_31_OldVarAssigCall))
(assert (! true :named ssa_32))
(assert (! true :named ssa_33_GlobVarAssigCall))
(assert (! true :named ssa_33_LocVarAssigCall))
(assert (! true :named ssa_33_OldVarAssigCall))
(assert (! true :named ssa_34))
(assert (! (not (= ~m_pc~0_11 1)) :named ssa_35))
(assert (! (= is_master_triggered_~__retres1~0_36 0) :named ssa_36))
(assert (! (= |is_master_triggered_#res_37| is_master_triggered_~__retres1~0_36) :named ssa_37))
(assert (! (= |activate_threads_#t~ret32_38| |is_master_triggered_#res_37|) :named ssa_38_return))
(assert (! (and (<= 0 (+ |activate_threads_#t~ret32_38| 2147483648)) (<= |activate_threads_#t~ret32_38| 2147483647) (= activate_threads_~tmp~1_39 |activate_threads_#t~ret32_38|)) :named ssa_39))
(assert (! (and (not (= activate_threads_~tmp~1_39 0)) (= ~m_st~0_40 0)) :named ssa_40))
(assert (! true :named ssa_41_GlobVarAssigCall))
(assert (! true :named ssa_41_LocVarAssigCall))
(assert (! true :named ssa_41_OldVarAssigCall))
(assert (! true :named ssa_42))
(assert (! (= ~t1_pc~0_11 1) :named ssa_43))
(assert (! (and (= is_transmit1_triggered_~__retres1~1_44 1) (= ~E_1~0_22 1)) :named ssa_44))
(assert (! (= is_transmit1_triggered_~__retres1~1_44 |is_transmit1_triggered_#res_45|) :named ssa_45))
(assert (! (= |is_transmit1_triggered_#res_45| |activate_threads_#t~ret33_46|) :named ssa_46_return))
(assert (! (and (= activate_threads_~tmp___0~0_47 |activate_threads_#t~ret33_46|) (<= 0 (+ |activate_threads_#t~ret33_46| 2147483648)) (<= |activate_threads_#t~ret33_46| 2147483647)) :named ssa_47))
(assert (! (and (not (= activate_threads_~tmp___0~0_47 0)) (= ~t1_st~0_48 0)) :named ssa_48))
(assert (! true :named ssa_49_GlobVarAssigCall))
(assert (! true :named ssa_49_LocVarAssigCall))
(assert (! true :named ssa_49_OldVarAssigCall))
(assert (! true :named ssa_50))
(assert (! (not (= ~t2_pc~0_11 1)) :named ssa_51))
(assert (! (= is_transmit2_triggered_~__retres1~2_52 0) :named ssa_52))
(assert (! (= is_transmit2_triggered_~__retres1~2_52 |is_transmit2_triggered_#res_53|) :named ssa_53))
(assert (! (= |is_transmit2_triggered_#res_53| |activate_threads_#t~ret34_54|) :named ssa_54_return))
(assert (! (and (<= |activate_threads_#t~ret34_54| 2147483647) (= activate_threads_~tmp___1~0_55 |activate_threads_#t~ret34_54|) (<= 0 (+ |activate_threads_#t~ret34_54| 2147483648))) :named ssa_55))
(assert (! (and (not (= activate_threads_~tmp___1~0_55 0)) (= ~t2_st~0_56 0)) :named ssa_56))
(assert (! true :named ssa_57))
(assert (! true :named ssa_58_return))
(assert (! (and (= |old(~E_2~0)_59| ~E_2~0_59) (= |old(~M_E~0)_59| ~M_E~0_59) (= |old(~T1_E~0)_59| ~T1_E~0_59) (= ~E_M~0_59 |old(~E_M~0)_59|) (= |old(~E_1~0)_59| ~E_1~0_59) (= |old(~T2_E~0)_59| ~T2_E~0_59)) :named ssa_59_GlobVarAssigCall))
(assert (! true :named ssa_59_LocVarAssigCall))
(assert (! (and (= ~E_2~0_28 |old(~E_2~0)_59|) (= |old(~M_E~0)_59| ~M_E~0_23) (= |old(~T2_E~0)_59| ~T2_E~0_25) (= ~E_1~0_22 |old(~E_1~0)_59|) (= ~T1_E~0_24 |old(~T1_E~0)_59|) (= ~E_M~0_26 |old(~E_M~0)_59|)) :named ssa_59_OldVarAssigCall))
(assert (! (not (= ~M_E~0_59 1)) :named ssa_60))
(assert (! (and (= 2 ~T1_E~0_61) (= ~T1_E~0_59 1)) :named ssa_61))
(assert (! (and (= 2 ~T2_E~0_62) (= ~T2_E~0_59 1)) :named ssa_62))
(assert (! (and (= ~E_M~0_59 1) (= 2 ~E_M~0_63)) :named ssa_63))
(assert (! (and (= ~E_1~0_59 1) (= 2 ~E_1~0_64)) :named ssa_64))
(assert (! (and (= ~E_2~0_59 1) (= 2 ~E_2~0_65)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! true :named ssa_67_return))
(assert (! true :named ssa_68))
(assert (! (and (= |old(~E_2~0)_69| ~E_2~0_69) (= ~t1_pc~0_69 |old(~t1_pc~0)_69|) (= ~token~0_69 |old(~token~0)_69|) (= ~E_M~0_69 |old(~E_M~0)_69|) (= ~t1_st~0_69 |old(~t1_st~0)_69|) (= |old(~local~0)_69| ~local~0_69) (= ~t2_pc~0_69 |old(~t2_pc~0)_69|) (= |old(~E_1~0)_69| ~E_1~0_69) (= |old(~m_pc~0)_69| ~m_pc~0_69) (= ~m_st~0_69 |old(~m_st~0)_69|) (= |old(~t2_st~0)_69| ~t2_st~0_69)) :named ssa_69_GlobVarAssigCall))
(assert (! true :named ssa_69_LocVarAssigCall))
(assert (! (and (= |old(~t2_pc~0)_69| ~t2_pc~0_11) (= |old(~token~0)_69| ~token~0_11) (= ~E_2~0_65 |old(~E_2~0)_69|) (= ~m_pc~0_11 |old(~m_pc~0)_69|) (= ~t1_pc~0_11 |old(~t1_pc~0)_69|) (= |old(~m_st~0)_69| ~m_st~0_40) (= ~E_1~0_64 |old(~E_1~0)_69|) (= |old(~t1_st~0)_69| ~t1_st~0_48) (= |old(~local~0)_69| ~local~0_11) (= ~E_M~0_63 |old(~E_M~0)_69|) (= ~t2_st~0_56 |old(~t2_st~0)_69|)) :named ssa_69_OldVarAssigCall))
(assert (! true :named ssa_70))
(assert (! true :named ssa_71))
(assert (! true :named ssa_72_GlobVarAssigCall))
(assert (! true :named ssa_72_LocVarAssigCall))
(assert (! true :named ssa_72_OldVarAssigCall))
(assert (! true :named ssa_73))
(assert (! (and (= ~m_st~0_69 0) (= exists_runnable_thread_~__retres1~3_74 1)) :named ssa_74))
(assert (! (= |exists_runnable_thread_#res_75| exists_runnable_thread_~__retres1~3_74) :named ssa_75))
(assert (! (= |exists_runnable_thread_#res_75| |eval_#t~ret28_76|) :named ssa_76_return))
(assert (! (and (<= 0 (+ |eval_#t~ret28_76| 2147483648)) (= eval_~tmp~0_77 |eval_#t~ret28_76|) (<= |eval_#t~ret28_76| 2147483647)) :named ssa_77))
(assert (! (not (= eval_~tmp~0_77 0)) :named ssa_78))
(assert (! (and (<= eval_~tmp_ndt_1~0_79 2147483647) (= ~m_st~0_69 0) (<= 0 (+ eval_~tmp_ndt_1~0_79 2147483648))) :named ssa_79))
(assert (! (and (not (= eval_~tmp_ndt_1~0_79 0)) (= ~m_st~0_80 1)) :named ssa_80))
(assert (! (and (= ~token~0_81 |old(~token~0)_81|) (= ~t1_st~0_81 |old(~t1_st~0)_81|) (= |old(~local~0)_81| ~local~0_81) (= |old(~E_1~0)_81| ~E_1~0_81) (= |old(~m_pc~0)_81| ~m_pc~0_81) (= ~m_st~0_81 |old(~m_st~0)_81|) (= |old(~t2_st~0)_81| ~t2_st~0_81)) :named ssa_81_GlobVarAssigCall))
(assert (! true :named ssa_81_LocVarAssigCall))
(assert (! (and (= |old(~token~0)_81| ~token~0_69) (= ~m_pc~0_69 |old(~m_pc~0)_81|) (= |old(~m_st~0)_81| ~m_st~0_80) (= ~E_1~0_69 |old(~E_1~0)_81|) (= |old(~t1_st~0)_81| ~t1_st~0_69) (= |old(~local~0)_81| ~local~0_69) (= ~t2_st~0_69 |old(~t2_st~0)_81|)) :named ssa_81_OldVarAssigCall))
(assert (! (not (= ~m_pc~0_81 0)) :named ssa_82))
(assert (! (= ~m_pc~0_81 1) :named ssa_83))
(assert (! (not (= (+ ~local~0_81 2) ~token~0_81)) :named ssa_84))
(assert (! true :named ssa_85_GlobVarAssigCall))
(assert (! true :named ssa_85_LocVarAssigCall))
(assert (! true :named ssa_85_OldVarAssigCall))
(assert (! true :named ssa_86))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 (and ssa_6_OldVarAssigCall ssa_6_GlobVarAssigCall ssa_6_LocVarAssigCall) ssa_7 (and ssa_8_GlobVarAssigCall ssa_10_return ssa_9 ssa_8_OldVarAssigCall ssa_8_LocVarAssigCall) (and ssa_11_LocVarAssigCall ssa_11_OldVarAssigCall ssa_11_GlobVarAssigCall) ssa_12 (and ssa_14 ssa_13_LocVarAssigCall ssa_13_OldVarAssigCall ssa_13_GlobVarAssigCall ssa_15_return) (and ssa_20 ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_16_GlobVarAssigCall ssa_18 ssa_21_return ssa_17) (and ssa_27 ssa_22_OldVarAssigCall ssa_26 ssa_25 ssa_22_LocVarAssigCall ssa_22_GlobVarAssigCall ssa_28 ssa_29 ssa_30_return ssa_23 ssa_24) (and ssa_41_GlobVarAssigCall ssa_44 ssa_57 ssa_31_LocVarAssigCall ssa_55 ssa_34 ssa_40 ssa_38_return ssa_45 ssa_47 ssa_53 ssa_49_LocVarAssigCall ssa_33_GlobVarAssigCall ssa_33_LocVarAssigCall ssa_39 ssa_54_return ssa_43 ssa_37 ssa_41_OldVarAssigCall ssa_31_OldVarAssigCall ssa_32 ssa_50 ssa_31_GlobVarAssigCall ssa_41_LocVarAssigCall ssa_48 ssa_51 ssa_36 ssa_52 ssa_49_GlobVarAssigCall ssa_56 ssa_35 ssa_33_OldVarAssigCall ssa_58_return ssa_49_OldVarAssigCall ssa_42 ssa_46_return) (and ssa_64 ssa_60 ssa_59_OldVarAssigCall ssa_67_return ssa_59_LocVarAssigCall ssa_61 ssa_59_GlobVarAssigCall ssa_62 ssa_65 ssa_63 ssa_66) ssa_68 (and ssa_69_OldVarAssigCall ssa_69_GlobVarAssigCall ssa_69_LocVarAssigCall) ssa_70 ssa_71 (and ssa_75 ssa_74 ssa_72_GlobVarAssigCall ssa_72_OldVarAssigCall ssa_72_LocVarAssigCall ssa_76_return ssa_73) ssa_77 ssa_78 ssa_79 ssa_80 (and ssa_81_LocVarAssigCall ssa_81_GlobVarAssigCall ssa_81_OldVarAssigCall) ssa_82 ssa_83 ssa_84 (and ssa_85_OldVarAssigCall ssa_85_GlobVarAssigCall ssa_85_LocVarAssigCall) (and ssa_86 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~a15~0_-2 () Int)
(declare-fun ~t2_i~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~a~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~c~0_-2 () Int)
(declare-fun ~a27~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~e~0_-2 () Int)
(declare-fun ~a25~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~a20~0_-2 () Int)
(declare-fun ~a16~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~a12~0_-2 () Int)
(declare-fun ~m_i~0_-2 () Int)
(declare-fun ~a9~0_-2 () Int)
(declare-fun ~a2~0_-2 () Int)
(declare-fun ~b~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~d~0_-2 () Int)
(declare-fun ~f~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~t1_i~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~a15~0)_-2| () Int)
(declare-fun |old(~t2_i~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~a~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~c~0)_-2| () Int)
(declare-fun |old(~a27~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~e~0)_-2| () Int)
(declare-fun |old(~a25~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~a20~0)_-2| () Int)
(declare-fun |old(~a16~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~a12~0)_-2| () Int)
(declare-fun |old(~m_i~0)_-2| () Int)
(declare-fun |old(~a9~0)_-2| () Int)
(declare-fun |old(~a2~0)_-2| () Int)
(declare-fun |old(~b~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~d~0)_-2| () Int)
(declare-fun |old(~f~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~t1_i~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-1| () Int)
(declare-fun |old(~M_E~0)_-1| () Int)
(declare-fun |old(~a15~0)_-1| () Int)
(declare-fun |old(~t2_i~0)_-1| () Int)
(declare-fun |old(~token~0)_-1| () Int)
(declare-fun |old(~a~0)_-1| () Int)
(declare-fun |old(~E_1~0)_-1| () Int)
(declare-fun |old(~c~0)_-1| () Int)
(declare-fun |old(~a27~0)_-1| () Int)
(declare-fun |old(~T1_E~0)_-1| () Int)
(declare-fun |old(~e~0)_-1| () Int)
(declare-fun |old(~a25~0)_-1| () Int)
(declare-fun |old(~t2_st~0)_-1| () Int)
(declare-fun |old(~t2_pc~0)_-1| () Int)
(declare-fun |old(~T2_E~0)_-1| () Int)
(declare-fun |old(~a20~0)_-1| () Int)
(declare-fun |old(~a16~0)_-1| () Int)
(declare-fun |old(~t1_st~0)_-1| () Int)
(declare-fun |old(~a12~0)_-1| () Int)
(declare-fun |old(~m_i~0)_-1| () Int)
(declare-fun |old(~a9~0)_-1| () Int)
(declare-fun |old(~a2~0)_-1| () Int)
(declare-fun |old(~E_M~0)_-1| () Int)
(declare-fun |old(~b~0)_-1| () Int)
(declare-fun |old(~E_2~0)_-1| () Int)
(declare-fun |old(~d~0)_-1| () Int)
(declare-fun |old(~local~0)_-1| () Int)
(declare-fun |old(~f~0)_-1| () Int)
(declare-fun |old(~t1_i~0)_-1| () Int)
(declare-fun |old(~m_st~0)_-1| () Int)
(declare-fun |old(~m_pc~0)_-1| () Int)
(declare-fun ~t1_pc~0_-1 () Int)
(declare-fun ~M_E~0_-1 () Int)
(declare-fun ~a15~0_-1 () Int)
(declare-fun ~t2_i~0_-1 () Int)
(declare-fun ~token~0_-1 () Int)
(declare-fun ~a~0_-1 () Int)
(declare-fun ~E_1~0_-1 () Int)
(declare-fun ~c~0_-1 () Int)
(declare-fun ~a27~0_-1 () Int)
(declare-fun ~T1_E~0_-1 () Int)
(declare-fun ~e~0_-1 () Int)
(declare-fun ~a25~0_-1 () Int)
(declare-fun ~t2_st~0_-1 () Int)
(declare-fun ~t2_pc~0_-1 () Int)
(declare-fun ~T2_E~0_-1 () Int)
(declare-fun ~a20~0_-1 () Int)
(declare-fun ~a16~0_-1 () Int)
(declare-fun ~t1_st~0_-1 () Int)
(declare-fun ~a12~0_-1 () Int)
(declare-fun ~m_i~0_-1 () Int)
(declare-fun ~a9~0_-1 () Int)
(declare-fun ~a2~0_-1 () Int)
(declare-fun ~b~0_-1 () Int)
(declare-fun ~E_M~0_-1 () Int)
(declare-fun ~E_2~0_-1 () Int)
(declare-fun ~d~0_-1 () Int)
(declare-fun ~f~0_-1 () Int)
(declare-fun ~local~0_-1 () Int)
(declare-fun ~t1_i~0_-1 () Int)
(declare-fun ~m_st~0_-1 () Int)
(declare-fun ~m_pc~0_-1 () Int)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~t1_pc~0_0 () Int)
(declare-fun ~M_E~0_0 () Int)
(declare-fun ~a15~0_0 () Int)
(declare-fun ~t2_i~0_0 () Int)
(declare-fun ~token~0_0 () Int)
(declare-fun ~a~0_0 () Int)
(declare-fun ~E_1~0_0 () Int)
(declare-fun ~c~0_0 () Int)
(declare-fun ~a27~0_0 () Int)
(declare-fun ~T1_E~0_0 () Int)
(declare-fun ~e~0_0 () Int)
(declare-fun ~a25~0_0 () Int)
(declare-fun ~t2_st~0_0 () Int)
(declare-fun ~t2_pc~0_0 () Int)
(declare-fun ~T2_E~0_0 () Int)
(declare-fun ~a20~0_0 () Int)
(declare-fun ~a16~0_0 () Int)
(declare-fun ~t1_st~0_0 () Int)
(declare-fun ~a12~0_0 () Int)
(declare-fun ~m_i~0_0 () Int)
(declare-fun ~a9~0_0 () Int)
(declare-fun ~a2~0_0 () Int)
(declare-fun ~E_M~0_0 () Int)
(declare-fun ~b~0_0 () Int)
(declare-fun ~E_2~0_0 () Int)
(declare-fun ~d~0_0 () Int)
(declare-fun ~local~0_0 () Int)
(declare-fun ~f~0_0 () Int)
(declare-fun ~t1_i~0_0 () Int)
(declare-fun ~m_st~0_0 () Int)
(declare-fun ~m_pc~0_0 () Int)
(assert (! (and (= ~b~0_-1 |old(~b~0)_-1|) (= ~a9~0_-1 |old(~a9~0)_-1|) (= |old(~t1_pc~0)_-1| ~t1_pc~0_-1) (= ~a27~0_-1 |old(~a27~0)_-1|) (= ~c~0_-1 |old(~c~0)_-1|) (= ~M_E~0_-1 |old(~M_E~0)_-1|) (= ~a2~0_-1 |old(~a2~0)_-1|) (= |old(~m_i~0)_-1| ~m_i~0_-1) (= |old(~T1_E~0)_-1| ~T1_E~0_-1) (= |old(~t1_st~0)_-1| ~t1_st~0_-1) (= ~E_M~0_-1 |old(~E_M~0)_-1|) (= ~t1_i~0_-1 |old(~t1_i~0)_-1|) (= ~m_st~0_-1 |old(~m_st~0)_-1|) (= |old(~T2_E~0)_-1| ~T2_E~0_-1) (= ~local~0_-1 |old(~local~0)_-1|) (= ~e~0_-1 |old(~e~0)_-1|) (= |old(~t2_st~0)_-1| ~t2_st~0_-1) (= ~f~0_-1 |old(~f~0)_-1|) (= ~a~0_-1 |old(~a~0)_-1|) (= ~a15~0_-1 |old(~a15~0)_-1|) (= |old(~token~0)_-1| ~token~0_-1) (= ~a12~0_-1 |old(~a12~0)_-1|) (= |old(~t2_pc~0)_-1| ~t2_pc~0_-1) (= ~a16~0_-1 |old(~a16~0)_-1|) (= ~t2_i~0_-1 |old(~t2_i~0)_-1|) (= ~E_1~0_-1 |old(~E_1~0)_-1|) (= ~a25~0_-1 |old(~a25~0)_-1|) (= ~m_pc~0_-1 |old(~m_pc~0)_-1|) (= ~E_2~0_-1 |old(~E_2~0)_-1|) (= ~d~0_-1 |old(~d~0)_-1|) (= ~a20~0_-1 |old(~a20~0)_-1|)) :named ssa_precond))
(assert (! (not (= ~M_E~0_0 2)) :named ssa_postcond))
(assert (! (and (= 2 ~T2_E~0_0) (= 2 ~b~0_0) (= ~t2_st~0_0 0) (= ~m_pc~0_0 0) (= ~a9~0_0 18) (= 0 ~t1_i~0_0) (< 0 |#StackHeapBarrier_-1|) (= 5 ~a20~0_0) (= ~T1_E~0_0 2) (= 12 (select |#length_-1| 3)) (= ~t1_pc~0_0 0) (= 2 ~E_1~0_0) (= 20 (select |#length_-1| 2)) (= 4 ~d~0_0) (= ~t2_pc~0_0 0) (= ~m_st~0_0 0) (= ~t1_st~0_0 0) (= ~a16~0_0 1) (= ~t2_i~0_0 0) (= 3 ~c~0_0) (= 2 ~E_M~0_0) (= ~a27~0_0 1) (= ~local~0_0 0) (= ~M_E~0_0 2) (= 6 ~f~0_0) (= ~a15~0_0 1) (= 1 ~a25~0_0) (= ~m_i~0_0 0) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= ~a2~0_0 10) (= ~a12~0_0 4) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= 2 ~E_2~0_0) (= (select |#length_-1| 1) 2) (= ~a~0_0 1) (= ~token~0_0 0) (= 5 ~e~0_0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~a15~0)_-1| ~a15~0_-2) (= ~a25~0_-2 |old(~a25~0)_-1|) (= ~a2~0_-2 |old(~a2~0)_-1|) (= ~a27~0_-2 |old(~a27~0)_-1|) (= ~a9~0_-2 |old(~a9~0)_-1|) (= |old(~t2_pc~0)_-1| ~t2_pc~0_-2) (= |old(~token~0)_-1| ~token~0_-2) (= ~E_2~0_-2 |old(~E_2~0)_-1|) (= ~b~0_-2 |old(~b~0)_-1|) (= ~m_pc~0_-2 |old(~m_pc~0)_-1|) (= ~a16~0_-2 |old(~a16~0)_-1|) (= ~a12~0_-2 |old(~a12~0)_-1|) (= |old(~M_E~0)_-1| ~M_E~0_-2) (= ~d~0_-2 |old(~d~0)_-1|) (= |old(~f~0)_-1| ~f~0_-2) (= |old(~T2_E~0)_-1| ~T2_E~0_-2) (= ~t1_pc~0_-2 |old(~t1_pc~0)_-1|) (= ~a20~0_-2 |old(~a20~0)_-1|) (= |old(~m_st~0)_-1| ~m_st~0_-2) (= ~t1_i~0_-2 |old(~t1_i~0)_-1|) (= |old(~a~0)_-1| ~a~0_-2) (= ~E_1~0_-2 |old(~E_1~0)_-1|) (= ~e~0_-2 |old(~e~0)_-1|) (= |old(~t1_st~0)_-1| ~t1_st~0_-2) (= ~t2_i~0_-2 |old(~t2_i~0)_-1|) (= ~T1_E~0_-2 |old(~T1_E~0)_-1|) (= |old(~local~0)_-1| ~local~0_-2) (= ~m_i~0_-2 |old(~m_i~0)_-1|) (= |old(~c~0)_-1| ~c~0_-2) (= ~E_M~0_-2 |old(~E_M~0)_-1|) (= ~t2_st~0_-2 |old(~t2_st~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~m_i~0_-2 () Int)
(declare-fun ~t2_i~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~t1_i~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~m_i~0)_-2| () Int)
(declare-fun |old(~t2_i~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~t1_i~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~t1_i~0)_-1| () Int)
(declare-fun |old(~m_i~0)_-1| () Int)
(declare-fun |old(~t2_i~0)_-1| () Int)
(declare-fun ~t1_i~0_-1 () Int)
(declare-fun ~m_i~0_-1 () Int)
(declare-fun ~t2_i~0_-1 () Int)
(declare-fun ~t1_i~0_0 () Int)
(declare-fun ~m_i~0_0 () Int)
(declare-fun ~t2_i~0_0 () Int)
(assert (! (and (= |old(~m_i~0)_-1| ~m_i~0_-1) (= ~t1_i~0_-1 |old(~t1_i~0)_-1|) (= ~t2_i~0_-1 |old(~t2_i~0)_-1|)) :named ssa_precond))
(assert (! (not (= ~M_E~0_-2 2)) :named ssa_postcond))
(assert (! (and (= ~t2_i~0_0 1) (= ~t1_i~0_0 1) (= ~m_i~0_0 1)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! (= ~M_E~0_-2 2) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~t1_i~0_-2 |old(~t1_i~0)_-1|) (= ~t2_i~0_-2 |old(~t2_i~0)_-1|) (= ~m_i~0_-2 |old(~m_i~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= ~M_E~0_-2 2)) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! (= ~M_E~0_-2 2) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-1| () Int)
(declare-fun |old(~m_st~0)_-1| () Int)
(declare-fun |old(~t2_st~0)_-1| () Int)
(declare-fun ~t1_st~0_-1 () Int)
(declare-fun ~m_st~0_-1 () Int)
(declare-fun ~t2_st~0_-1 () Int)
(declare-fun ~m_i~0_-1 () Int)
(declare-fun ~m_st~0_0 () Int)
(declare-fun ~t1_i~0_-1 () Int)
(declare-fun ~t1_st~0_1 () Int)
(declare-fun ~t2_i~0_-1 () Int)
(declare-fun ~t2_st~0_2 () Int)
(assert (! (and (= |old(~t1_st~0)_-1| ~t1_st~0_-1) (= ~m_st~0_-1 |old(~m_st~0)_-1|) (= |old(~t2_st~0)_-1| ~t2_st~0_-1)) :named ssa_precond))
(assert (! (not (= ~M_E~0_-2 2)) :named ssa_postcond))
(assert (! (and (= ~m_st~0_0 0) (= ~m_i~0_-1 1)) :named ssa_0))
(assert (! (and (= ~t1_st~0_1 0) (= ~t1_i~0_-1 1)) :named ssa_1))
(assert (! (and (= ~t2_st~0_2 0) (= ~t2_i~0_-1 1)) :named ssa_2))
(assert (! true :named ssa_3))
(assert (! true :named ssa_4_return))
(assert (! (= ~M_E~0_-2 2) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~m_st~0)_-1| ~m_st~0_-2) (= |old(~t1_st~0)_-1| ~t1_st~0_-2) (= ~t2_st~0_-2 |old(~t2_st~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 (and ssa_-2_PendingContext ssa_4_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~T2_E~0)_-1| () Int)
(declare-fun |old(~E_1~0)_-1| () Int)
(declare-fun |old(~E_M~0)_-1| () Int)
(declare-fun |old(~T1_E~0)_-1| () Int)
(declare-fun |old(~E_2~0)_-1| () Int)
(declare-fun |old(~M_E~0)_-1| () Int)
(declare-fun ~T2_E~0_-1 () Int)
(declare-fun ~E_1~0_-1 () Int)
(declare-fun ~E_M~0_-1 () Int)
(declare-fun ~T1_E~0_-1 () Int)
(declare-fun ~E_2~0_-1 () Int)
(declare-fun ~M_E~0_-1 () Int)
(declare-fun ~M_E~0_0 () Int)
(declare-fun ~T1_E~0_1 () Int)
(declare-fun ~T2_E~0_2 () Int)
(declare-fun ~E_M~0_3 () Int)
(declare-fun ~E_2~0_5 () Int)
(assert (! (and (= ~M_E~0_-1 |old(~M_E~0)_-1|) (= |old(~T1_E~0)_-1| ~T1_E~0_-1) (= ~E_M~0_-1 |old(~E_M~0)_-1|) (= |old(~T2_E~0)_-1| ~T2_E~0_-1) (= ~E_1~0_-1 |old(~E_1~0)_-1|) (= ~E_2~0_-1 |old(~E_2~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ~M_E~0_0 1) (= ~M_E~0_-1 0)) :named ssa_0))
(assert (! (and (= ~T1_E~0_-1 0) (= ~T1_E~0_1 1)) :named ssa_1))
(assert (! (and (= ~T2_E~0_2 1) (= ~T2_E~0_-1 0)) :named ssa_2))
(assert (! (and (= ~E_M~0_-1 0) (= ~E_M~0_3 1)) :named ssa_3))
(assert (! (not (= ~E_1~0_-1 0)) :named ssa_4))
(assert (! (and (= ~E_2~0_5 1) (= ~E_2~0_-1 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! true :named ssa_7_return))
(assert (! (= ~M_E~0_-2 2) :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~E_2~0_-2 |old(~E_2~0)_-1|) (= |old(~M_E~0)_-1| ~M_E~0_-2) (= |old(~T2_E~0)_-1| ~T2_E~0_-2) (= ~E_1~0_-2 |old(~E_1~0)_-1|) (= ~T1_E~0_-2 |old(~T1_E~0)_-1|) (= ~E_M~0_-2 |old(~E_M~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 (and ssa_7_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-1| () Int)
(declare-fun |old(~m_st~0)_-1| () Int)
(declare-fun |old(~t2_st~0)_-1| () Int)
(declare-fun ~t1_st~0_-1 () Int)
(declare-fun ~m_st~0_-1 () Int)
(declare-fun ~t2_st~0_-1 () Int)
(declare-fun activate_threads_~tmp___1~0_0 () Int)
(declare-fun activate_threads_~tmp~1_0 () Int)
(declare-fun activate_threads_~tmp___0~0_0 () Int)
(declare-fun is_master_triggered_~__retres1~0_2 () Int)
(declare-fun is_master_triggered_~__retres1~0_4 () Int)
(declare-fun |is_master_triggered_#res_5| () Int)
(declare-fun is_master_triggered_~__retres1~0_5 () Int)
(declare-fun |is_master_triggered_#res_6| () Int)
(declare-fun |activate_threads_#t~ret32_6| () Int)
(declare-fun |activate_threads_#t~ret32_7| () Int)
(declare-fun activate_threads_~tmp~1_7 () Int)
(declare-fun activate_threads_~tmp~1_8 () Int)
(declare-fun ~m_st~0_8 () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_10 () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_12 () Int)
(declare-fun |is_transmit1_triggered_#res_13| () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_13 () Int)
(declare-fun |activate_threads_#t~ret33_14| () Int)
(declare-fun |is_transmit1_triggered_#res_14| () Int)
(declare-fun |activate_threads_#t~ret33_15| () Int)
(declare-fun activate_threads_~tmp___0~0_15 () Int)
(declare-fun ~t1_st~0_16 () Int)
(declare-fun activate_threads_~tmp___0~0_16 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_18 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_20 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_21 () Int)
(declare-fun |is_transmit2_triggered_#res_21| () Int)
(declare-fun |activate_threads_#t~ret34_22| () Int)
(declare-fun |is_transmit2_triggered_#res_22| () Int)
(declare-fun |activate_threads_#t~ret34_23| () Int)
(declare-fun activate_threads_~tmp___1~0_23 () Int)
(declare-fun activate_threads_~tmp___1~0_24 () Int)
(declare-fun ~t2_st~0_24 () Int)
(assert (! (and (= |old(~t1_st~0)_-1| ~t1_st~0_-1) (= ~m_st~0_-1 |old(~m_st~0)_-1|) (= |old(~t2_st~0)_-1| ~t2_st~0_-1)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! true :named ssa_1_GlobVarAssigCall))
(assert (! true :named ssa_1_LocVarAssigCall))
(assert (! true :named ssa_1_OldVarAssigCall))
(assert (! true :named ssa_2))
(assert (! (not (= ~m_pc~0_-2 1)) :named ssa_3))
(assert (! (= is_master_triggered_~__retres1~0_4 0) :named ssa_4))
(assert (! (= |is_master_triggered_#res_5| is_master_triggered_~__retres1~0_4) :named ssa_5))
(assert (! (= |activate_threads_#t~ret32_6| |is_master_triggered_#res_5|) :named ssa_6_return))
(assert (! (and (<= 0 (+ |activate_threads_#t~ret32_6| 2147483648)) (<= |activate_threads_#t~ret32_6| 2147483647) (= activate_threads_~tmp~1_7 |activate_threads_#t~ret32_6|)) :named ssa_7))
(assert (! (and (not (= activate_threads_~tmp~1_7 0)) (= ~m_st~0_8 0)) :named ssa_8))
(assert (! true :named ssa_9_GlobVarAssigCall))
(assert (! true :named ssa_9_LocVarAssigCall))
(assert (! true :named ssa_9_OldVarAssigCall))
(assert (! true :named ssa_10))
(assert (! (= ~t1_pc~0_-2 1) :named ssa_11))
(assert (! (and (= is_transmit1_triggered_~__retres1~1_12 1) (= ~E_1~0_-2 1)) :named ssa_12))
(assert (! (= is_transmit1_triggered_~__retres1~1_12 |is_transmit1_triggered_#res_13|) :named ssa_13))
(assert (! (= |is_transmit1_triggered_#res_13| |activate_threads_#t~ret33_14|) :named ssa_14_return))
(assert (! (and (= activate_threads_~tmp___0~0_15 |activate_threads_#t~ret33_14|) (<= 0 (+ |activate_threads_#t~ret33_14| 2147483648)) (<= |activate_threads_#t~ret33_14| 2147483647)) :named ssa_15))
(assert (! (and (not (= activate_threads_~tmp___0~0_15 0)) (= ~t1_st~0_16 0)) :named ssa_16))
(assert (! true :named ssa_17_GlobVarAssigCall))
(assert (! true :named ssa_17_LocVarAssigCall))
(assert (! true :named ssa_17_OldVarAssigCall))
(assert (! true :named ssa_18))
(assert (! (not (= ~t2_pc~0_-2 1)) :named ssa_19))
(assert (! (= is_transmit2_triggered_~__retres1~2_20 0) :named ssa_20))
(assert (! (= is_transmit2_triggered_~__retres1~2_20 |is_transmit2_triggered_#res_21|) :named ssa_21))
(assert (! (= |is_transmit2_triggered_#res_21| |activate_threads_#t~ret34_22|) :named ssa_22_return))
(assert (! (and (<= |activate_threads_#t~ret34_22| 2147483647) (= activate_threads_~tmp___1~0_23 |activate_threads_#t~ret34_22|) (<= 0 (+ |activate_threads_#t~ret34_22| 2147483648))) :named ssa_23))
(assert (! (and (not (= activate_threads_~tmp___1~0_23 0)) (= ~t2_st~0_24 0)) :named ssa_24))
(assert (! true :named ssa_25))
(assert (! true :named ssa_26_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= |old(~m_st~0)_-1| ~m_st~0_-2) (= |old(~t1_st~0)_-1| ~t1_st~0_-2) (= ~t2_st~0_-2 |old(~t2_st~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_1_GlobVarAssigCall ssa_6_return ssa_3 ssa_1_OldVarAssigCall ssa_5 ssa_4 ssa_1_LocVarAssigCall ssa_2) ssa_7 ssa_8 (and ssa_13 ssa_10 ssa_12 ssa_11 ssa_9_LocVarAssigCall ssa_9_OldVarAssigCall ssa_14_return ssa_9_GlobVarAssigCall) ssa_15 ssa_16 (and ssa_20 ssa_17_LocVarAssigCall ssa_17_GlobVarAssigCall ssa_19 ssa_17_OldVarAssigCall ssa_22_return ssa_21 ssa_18) ssa_23 ssa_24 ssa_25 (and ssa_-2_PendingContext ssa_26_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun is_master_triggered_~__retres1~0_0 () Int)
(declare-fun ~m_pc~0_-1 () Int)
(declare-fun is_master_triggered_~__retres1~0_2 () Int)
(declare-fun |is_master_triggered_#res_3| () Int)
(declare-fun is_master_triggered_~__retres1~0_3 () Int)
(declare-fun |is_master_triggered_#res_4| () Int)
(declare-fun |activate_threads_#t~ret32_4| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (not (= ~m_pc~0_-1 1)) :named ssa_1))
(assert (! (= is_master_triggered_~__retres1~0_2 0) :named ssa_2))
(assert (! (= |is_master_triggered_#res_3| is_master_triggered_~__retres1~0_2) :named ssa_3))
(assert (! (= |activate_threads_#t~ret32_4| |is_master_triggered_#res_3|) :named ssa_4_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 (and ssa_-2_PendingContext ssa_4_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_0 () Int)
(declare-fun ~t1_pc~0_-1 () Int)
(declare-fun ~E_1~0_-1 () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_2 () Int)
(declare-fun |is_transmit1_triggered_#res_3| () Int)
(declare-fun is_transmit1_triggered_~__retres1~1_3 () Int)
(declare-fun |activate_threads_#t~ret33_4| () Int)
(declare-fun |is_transmit1_triggered_#res_4| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (= ~t1_pc~0_-1 1) :named ssa_1))
(assert (! (and (= is_transmit1_triggered_~__retres1~1_2 1) (= ~E_1~0_-1 1)) :named ssa_2))
(assert (! (= is_transmit1_triggered_~__retres1~1_2 |is_transmit1_triggered_#res_3|) :named ssa_3))
(assert (! (= |is_transmit1_triggered_#res_3| |activate_threads_#t~ret33_4|) :named ssa_4_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 (and ssa_-2_PendingContext ssa_4_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_0 () Int)
(declare-fun ~t2_pc~0_-1 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_2 () Int)
(declare-fun is_transmit2_triggered_~__retres1~2_3 () Int)
(declare-fun |is_transmit2_triggered_#res_3| () Int)
(declare-fun |activate_threads_#t~ret34_4| () Int)
(declare-fun |is_transmit2_triggered_#res_4| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (not (= ~t2_pc~0_-1 1)) :named ssa_1))
(assert (! (= is_transmit2_triggered_~__retres1~2_2 0) :named ssa_2))
(assert (! (= is_transmit2_triggered_~__retres1~2_2 |is_transmit2_triggered_#res_3|) :named ssa_3))
(assert (! (= |is_transmit2_triggered_#res_3| |activate_threads_#t~ret34_4|) :named ssa_4_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 (and ssa_-2_PendingContext ssa_4_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~T2_E~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~M_E~0_-2 () Int)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~T1_E~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~T2_E~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~M_E~0)_-2| () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~T1_E~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun |old(~T2_E~0)_-1| () Int)
(declare-fun |old(~E_1~0)_-1| () Int)
(declare-fun |old(~E_M~0)_-1| () Int)
(declare-fun |old(~T1_E~0)_-1| () Int)
(declare-fun |old(~E_2~0)_-1| () Int)
(declare-fun |old(~M_E~0)_-1| () Int)
(declare-fun ~T2_E~0_-1 () Int)
(declare-fun ~E_1~0_-1 () Int)
(declare-fun ~E_M~0_-1 () Int)
(declare-fun ~T1_E~0_-1 () Int)
(declare-fun ~E_2~0_-1 () Int)
(declare-fun ~M_E~0_-1 () Int)
(declare-fun ~T1_E~0_1 () Int)
(declare-fun ~T2_E~0_2 () Int)
(declare-fun ~E_M~0_3 () Int)
(declare-fun ~E_1~0_4 () Int)
(declare-fun ~E_2~0_5 () Int)
(assert (! (and (= ~M_E~0_-1 |old(~M_E~0)_-1|) (= |old(~T1_E~0)_-1| ~T1_E~0_-1) (= ~E_M~0_-1 |old(~E_M~0)_-1|) (= |old(~T2_E~0)_-1| ~T2_E~0_-1) (= ~E_1~0_-1 |old(~E_1~0)_-1|) (= ~E_2~0_-1 |old(~E_2~0)_-1|)) :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (not (= ~M_E~0_-1 1)) :named ssa_0))
(assert (! (and (= 2 ~T1_E~0_1) (= ~T1_E~0_-1 1)) :named ssa_1))
(assert (! (and (= 2 ~T2_E~0_2) (= ~T2_E~0_-1 1)) :named ssa_2))
(assert (! (and (= ~E_M~0_-1 1) (= 2 ~E_M~0_3)) :named ssa_3))
(assert (! (and (= ~E_1~0_-1 1) (= 2 ~E_1~0_4)) :named ssa_4))
(assert (! (and (= ~E_2~0_-1 1) (= 2 ~E_2~0_5)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! true :named ssa_7_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (and (= ~E_2~0_-2 |old(~E_2~0)_-1|) (= |old(~M_E~0)_-1| ~M_E~0_-2) (= |old(~T2_E~0)_-1| ~T2_E~0_-2) (= ~E_1~0_-2 |old(~E_1~0)_-1|) (= ~T1_E~0_-2 |old(~T1_E~0)_-1|) (= ~E_M~0_-2 |old(~E_M~0)_-1|)) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 ssa_3 ssa_4 ssa_5 ssa_6 (and ssa_7_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ~token~0_-2 () Int)
(declare-fun ~E_1~0_-2 () Int)
(declare-fun ~t1_st~0_-2 () Int)
(declare-fun ~t1_pc~0_-2 () Int)
(declare-fun ~E_M~0_-2 () Int)
(declare-fun ~E_2~0_-2 () Int)
(declare-fun ~local~0_-2 () Int)
(declare-fun ~m_st~0_-2 () Int)
(declare-fun ~m_pc~0_-2 () Int)
(declare-fun ~t2_pc~0_-2 () Int)
(declare-fun ~t2_st~0_-2 () Int)
(declare-fun |old(~token~0)_-2| () Int)
(declare-fun |old(~E_1~0)_-2| () Int)
(declare-fun |old(~t1_st~0)_-2| () Int)
(declare-fun |old(~t1_pc~0)_-2| () Int)
(declare-fun |old(~E_M~0)_-2| () Int)
(declare-fun |old(~E_2~0)_-2| () Int)
(declare-fun |old(~local~0)_-2| () Int)
(declare-fun |old(~m_st~0)_-2| () Int)
(declare-fun |old(~m_pc~0)_-2| () Int)
(declare-fun |old(~t2_pc~0)_-2| () Int)
(declare-fun |old(~t2_st~0)_-2| () Int)
(declare-fun exists_runnable_thread_~__retres1~3_0 () Int)
(declare-fun exists_runnable_thread_~__retres1~3_1 () Int)
(declare-fun exists_runnable_thread_~__retres1~3_2 () Int)
(declare-fun |exists_runnable_thread_#res_2| () Int)
(declare-fun |eval_#t~ret28_3| () Int)
(declare-fun |exists_runnable_thread_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0))
(assert (! (and (= ~m_st~0_-2 0) (= exists_runnable_thread_~__retres1~3_1 1)) :named ssa_1))
(assert (! (= |exists_runnable_thread_#res_2| exists_runnable_thread_~__retres1~3_1) :named ssa_2))
(assert (! (= |exists_runnable_thread_#res_2| |eval_#t~ret28_3|) :named ssa_3_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
