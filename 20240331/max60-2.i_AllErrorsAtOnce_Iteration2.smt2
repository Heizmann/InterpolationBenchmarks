(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:15:28+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id max60-2.i_AllErrorsAtOnce_Iteration2)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.base| () Int)
(declare-fun |c_reach_error_#t~nondet0.base_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_max_#in~x.base| () Int)
(declare-fun |c_max_#in~x.base_primed| () Int)
(declare-fun |c_max_#in~x.offset| () Int)
(declare-fun |c_max_#in~x.offset_primed| () Int)
(declare-fun |c_max_#res| () Int)
(declare-fun |c_max_#res_primed| () Int)
(declare-fun |c_max_#t~mem1| () Int)
(declare-fun |c_max_#t~mem1_primed| () Int)
(declare-fun |c_max_#t~ite3| () Int)
(declare-fun |c_max_#t~ite3_primed| () Int)
(declare-fun |c_max_#t~mem2| () Int)
(declare-fun |c_max_#t~mem2_primed| () Int)
(declare-fun |c_max_#t~post4| () Int)
(declare-fun |c_max_#t~post4_primed| () Int)
(declare-fun c_max_~x.base () Int)
(declare-fun c_max_~x.base_primed () Int)
(declare-fun c_max_~x.offset () Int)
(declare-fun c_max_~x.offset_primed () Int)
(declare-fun c_max_~i~0 () Int)
(declare-fun c_max_~i~0_primed () Int)
(declare-fun c_max_~ret~0 () Int)
(declare-fun c_max_~ret~0_primed () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet5| () Int)
(declare-fun |c_main_#t~nondet5_primed| () Int)
(declare-fun |c_main_#t~post6| () Int)
(declare-fun |c_main_#t~post6_primed| () Int)
(declare-fun c_main_~i~1 () Int)
(declare-fun c_main_~i~1_primed () Int)
(declare-fun |c_main_#t~ret7| () Int)
(declare-fun |c_main_#t~ret7_primed| () Int)
(declare-fun |c_main_#t~mem8| () Int)
(declare-fun |c_main_#t~mem8_primed| () Int)
(declare-fun |c_main_#t~mem9| () Int)
(declare-fun |c_main_#t~mem9_primed| () Int)
(declare-fun |c_main_#t~ret10| () Int)
(declare-fun |c_main_#t~ret10_primed| () Int)
(declare-fun |c_main_#t~mem11| () Int)
(declare-fun |c_main_#t~mem11_primed| () Int)
(declare-fun |c_main_#t~mem12| () Int)
(declare-fun |c_main_#t~mem12_primed| () Int)
(declare-fun |c_main_#t~post13| () Int)
(declare-fun |c_main_#t~post13_primed| () Int)
(declare-fun c_main_~i~2 () Int)
(declare-fun c_main_~i~2_primed () Int)
(declare-fun |c_main_#t~ret14| () Int)
(declare-fun |c_main_#t~ret14_primed| () Int)
(declare-fun |c_main_~#x~0.base| () Int)
(declare-fun |c_main_~#x~0.base_primed| () Int)
(declare-fun |c_main_~#x~0.offset| () Int)
(declare-fun |c_main_~#x~0.offset_primed| () Int)
(declare-fun c_main_~temp~0 () Int)
(declare-fun c_main_~temp~0_primed () Int)
(declare-fun c_main_~ret~1 () Int)
(declare-fun c_main_~ret~1_primed () Int)
(declare-fun c_main_~ret2~0 () Int)
(declare-fun c_main_~ret2~0_primed () Int)
(declare-fun c_main_~ret5~0 () Int)
(declare-fun c_main_~ret5~0_primed () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_#in~__assertion.base| () Int)
(declare-fun |c___assert_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_#in~__assertion.offset| () Int)
(declare-fun |c___assert_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_#in~__file.base| () Int)
(declare-fun |c___assert_#in~__file.base_primed| () Int)
(declare-fun |c___assert_#in~__file.offset| () Int)
(declare-fun |c___assert_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_#in~__line| () Int)
(declare-fun |c___assert_#in~__line_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret15_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.base| () Int)
(declare-fun |c___assert_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__line| () Int)
(declare-fun |c___assert_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.base| () Int)
(declare-fun |c___assert_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_fail_#in~__function.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__line| () Int)
(declare-fun |c___assert_perror_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~nondet5_3| () Int)
(declare-fun |c_aux_v_max_#t~mem2_3| () Int)
(declare-fun c_aux_v_main_~temp~0_5 () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret15_3| () Int)
(declare-fun |c_aux_v_main_#t~nondet5_5| () Int)
(declare-fun |c_aux_v_main_#t~nondet5_7| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun c_aux_v_main_~temp~0_6 () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_3 () Int)
(declare-fun c_aux_v_ArrVal_5 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_7 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_6 () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_4| () Int)
(declare-fun main_~ret5~0_4 () Int)
(declare-fun main_~temp~0_4 () Int)
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun main_~i~1_4 () Int)
(declare-fun |#length_4| () (Array Int Int))
(declare-fun main_~ret~1_4 () Int)
(declare-fun main_~ret2~0_4 () Int)
(declare-fun |main_~#x~0.base_4| () Int)
(declare-fun v_ArrVal_8_fresh_1 () Int)
(declare-fun v_ArrVal_9_fresh_1 () Int)
(declare-fun |main_#t~nondet5_5| () Int)
(declare-fun main_~i~1_5 () Int)
(declare-fun |#memory_int#1_5| () (Array Int (Array Int Int)))
(declare-fun |main_#t~post6_5| () Int)
(declare-fun v_ArrVal_11_fresh_1 () (Array Int Int))
(declare-fun |v_main_#t~nondet5_8_fresh_1| () Int)
(declare-fun v_ArrVal_10_fresh_1 () Int)
(declare-fun main_~i~1_6 () Int)
(declare-fun main_~i~1_7 () Int)
(declare-fun |max_#in~x.base_8| () Int)
(declare-fun |main_~#x~0.offset_8| () Int)
(declare-fun |max_#in~x.offset_8| () Int)
(declare-fun |main_~#x~0.base_8| () Int)
(declare-fun max_~ret~0_9 () Int)
(declare-fun max_~x.base_9 () Int)
(declare-fun max_~x.offset_9 () Int)
(declare-fun max_~i~0_9 () Int)
(declare-fun max_~i~0_10 () Int)
(declare-fun max_~ret~0_11 () Int)
(declare-fun |max_#res_11| () Int)
(declare-fun |main_#t~ret7_12| () Int)
(declare-fun |max_#res_12| () Int)
(declare-fun |main_#t~ret7_13| () Int)
(declare-fun |main_#t~mem8_13| () Int)
(declare-fun |#memory_int#1_13| () (Array Int (Array Int Int)))
(declare-fun main_~ret~1_13 () Int)
(declare-fun |main_#t~mem9_13| () Int)
(declare-fun v_main_~temp~0_7_fresh_1 () Int)
(declare-fun v_ArrVal_13_fresh_1 () Int)
(declare-fun v_ArrVal_12_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_14_fresh_1 () Int)
(declare-fun |max_#in~x.base_14| () Int)
(declare-fun |main_~#x~0.offset_14| () Int)
(declare-fun |max_#in~x.offset_14| () Int)
(declare-fun |main_~#x~0.base_14| () Int)
(declare-fun max_~ret~0_15 () Int)
(declare-fun max_~x.base_15 () Int)
(declare-fun max_~x.offset_15 () Int)
(declare-fun max_~i~0_15 () Int)
(declare-fun max_~i~0_16 () Int)
(declare-fun max_~ret~0_17 () Int)
(declare-fun |max_#res_17| () Int)
(declare-fun |main_#t~ret10_18| () Int)
(declare-fun |max_#res_18| () Int)
(declare-fun main_~temp~0_19 () Int)
(declare-fun |main_#t~mem11_19| () Int)
(declare-fun |main_#t~ret10_19| () Int)
(declare-fun main_~i~2_19 () Int)
(declare-fun main_~ret2~0_19 () Int)
(declare-fun main_~i~2_20 () Int)
(declare-fun main_~temp~0_21 () Int)
(declare-fun main_~i~2_21 () Int)
(declare-fun |#memory_int#1_21| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_15_fresh_1 () Int)
(declare-fun v_ArrVal_16_fresh_1 () (Array Int Int))
(declare-fun |max_#in~x.base_22| () Int)
(declare-fun |main_~#x~0.offset_22| () Int)
(declare-fun |max_#in~x.offset_22| () Int)
(declare-fun |main_~#x~0.base_22| () Int)
(declare-fun max_~ret~0_23 () Int)
(declare-fun max_~x.base_23 () Int)
(declare-fun max_~x.offset_23 () Int)
(declare-fun max_~i~0_23 () Int)
(declare-fun max_~i~0_24 () Int)
(declare-fun max_~ret~0_25 () Int)
(declare-fun |max_#res_25| () Int)
(declare-fun |main_#t~ret14_26| () Int)
(declare-fun |max_#res_26| () Int)
(declare-fun main_~ret5~0_27 () Int)
(declare-fun |main_#t~ret14_27| () Int)
(declare-fun main_~ret5~0_28 () Int)
(declare-fun main_~ret~1_28 () Int)
(declare-fun main_~ret2~0_28 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#valid_-1| 0) 0) (= (select |#length_-1| 1) 2) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 2) 10) (= (select (select |#memory_int#0_-1| 1) 0) 48)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (not (= |main_~#x~0.base_4| 0)) (= v_ArrVal_8_fresh_1 1) (= 240 v_ArrVal_9_fresh_1) (= (store |#valid_3| |main_~#x~0.base_4| v_ArrVal_8_fresh_1) |#valid_4|) (< |#StackHeapBarrier_-1| |main_~#x~0.base_4|) (= main_~i~1_4 0) (= (select |#valid_3| |main_~#x~0.base_4|) 0) (= |#length_4| (store |#length_3| |main_~#x~0.base_4| v_ArrVal_9_fresh_1)) (= |main_~#x~0.offset_4| 0)) :named ssa_4))
(assert (! (and (< main_~i~1_4 60) (<= 0 (+ |v_main_#t~nondet5_8_fresh_1| 2147483648)) (= |v_main_#t~nondet5_8_fresh_1| v_ArrVal_10_fresh_1) (= |#memory_int#1_5| (store |#memory_int#1_3| |main_~#x~0.base_4| v_ArrVal_11_fresh_1)) (<= |v_main_#t~nondet5_8_fresh_1| 2147483647) (= v_ArrVal_11_fresh_1 (store (select |#memory_int#1_3| |main_~#x~0.base_4|) (+ (* main_~i~1_4 4) |main_~#x~0.offset_4|) v_ArrVal_10_fresh_1)) (= main_~i~1_5 (+ main_~i~1_4 1))) :named ssa_5))
(assert (! (<= 60 main_~i~1_5) :named ssa_6))
(assert (! true :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (and (= |max_#in~x.base_8| |main_~#x~0.base_4|) (= |max_#in~x.offset_8| |main_~#x~0.offset_4|)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (and (= |max_#in~x.base_8| max_~x.base_9) (= max_~i~0_9 0) (= max_~ret~0_9 0) (= max_~x.offset_9 |max_#in~x.offset_8|)) :named ssa_9))
(assert (! (<= 60 max_~i~0_9) :named ssa_10))
(assert (! (= |max_#res_11| (ite (<= (mod max_~ret~0_9 4294967296) 2147483647) (mod max_~ret~0_9 4294967296) (+ (mod max_~ret~0_9 4294967296) (- 4294967296)))) :named ssa_11))
(assert (! (= |main_#t~ret7_12| |max_#res_11|) :named ssa_12_return))
(assert (! (and (= |main_#t~ret7_12| main_~ret~1_13) (<= |main_#t~ret7_12| 2147483647) (= |#memory_int#1_13| (store |#memory_int#1_5| |main_~#x~0.base_4| v_ArrVal_12_fresh_1)) (= (store (store (select |#memory_int#1_5| |main_~#x~0.base_4|) |main_~#x~0.offset_4| (select (select |#memory_int#1_5| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4))) (+ |main_~#x~0.offset_4| 4) v_main_~temp~0_7_fresh_1) v_ArrVal_12_fresh_1) (= (select (select |#memory_int#1_5| |main_~#x~0.base_4|) (+ |main_~#x~0.offset_4| 4)) v_ArrVal_14_fresh_1) (<= 0 (+ |main_#t~ret7_12| 2147483648)) (= v_main_~temp~0_7_fresh_1 v_ArrVal_13_fresh_1) (= (select (select |#memory_int#1_5| |main_~#x~0.base_4|) |main_~#x~0.offset_4|) v_main_~temp~0_7_fresh_1)) :named ssa_13))
(assert (! true :named ssa_14_GlobVarAssigCall))
(assert (! (and (= |max_#in~x.base_14| |main_~#x~0.base_4|) (= |max_#in~x.offset_14| |main_~#x~0.offset_4|)) :named ssa_14_LocVarAssigCall))
(assert (! true :named ssa_14_OldVarAssigCall))
(assert (! (and (= |max_#in~x.base_14| max_~x.base_15) (= max_~i~0_15 0) (= max_~ret~0_15 0) (= max_~x.offset_15 |max_#in~x.offset_14|)) :named ssa_15))
(assert (! (<= 60 max_~i~0_15) :named ssa_16))
(assert (! (= |max_#res_17| (ite (<= (mod max_~ret~0_15 4294967296) 2147483647) (mod max_~ret~0_15 4294967296) (+ (mod max_~ret~0_15 4294967296) (- 4294967296)))) :named ssa_17))
(assert (! (= |max_#res_17| |main_#t~ret10_18|) :named ssa_18_return))
(assert (! (and (<= |main_#t~ret10_18| 2147483647) (= (select (select |#memory_int#1_13| |main_~#x~0.base_4|) |main_~#x~0.offset_4|) main_~temp~0_19) (= main_~i~2_19 0) (= main_~ret2~0_19 |main_#t~ret10_18|) (<= 0 (+ |main_#t~ret10_18| 2147483648))) :named ssa_19))
(assert (! (<= 59 main_~i~2_19) :named ssa_20))
(assert (! (and (= (store (select |#memory_int#1_13| |main_~#x~0.base_4|) (+ 236 |main_~#x~0.offset_4|) v_ArrVal_15_fresh_1) v_ArrVal_16_fresh_1) (= |#memory_int#1_21| (store |#memory_int#1_13| |main_~#x~0.base_4| v_ArrVal_16_fresh_1)) (= main_~temp~0_19 v_ArrVal_15_fresh_1)) :named ssa_21))
(assert (! true :named ssa_22_GlobVarAssigCall))
(assert (! (and (= |max_#in~x.offset_22| |main_~#x~0.offset_4|) (= |max_#in~x.base_22| |main_~#x~0.base_4|)) :named ssa_22_LocVarAssigCall))
(assert (! true :named ssa_22_OldVarAssigCall))
(assert (! (and (= |max_#in~x.base_22| max_~x.base_23) (= max_~i~0_23 0) (= max_~ret~0_23 0) (= max_~x.offset_23 |max_#in~x.offset_22|)) :named ssa_23))
(assert (! (<= 60 max_~i~0_23) :named ssa_24))
(assert (! (= |max_#res_25| (ite (<= (mod max_~ret~0_23 4294967296) 2147483647) (mod max_~ret~0_23 4294967296) (+ (mod max_~ret~0_23 4294967296) (- 4294967296)))) :named ssa_25))
(assert (! (= |max_#res_25| |main_#t~ret14_26|) :named ssa_26_return))
(assert (! (and (= main_~ret5~0_27 |main_#t~ret14_26|) (<= |main_#t~ret14_26| 2147483647) (<= 0 (+ |main_#t~ret14_26| 2147483648))) :named ssa_27))
(assert (! (or (not (= main_~ret5~0_27 main_~ret~1_13)) (not (= main_~ret2~0_19 main_~ret~1_13))) :named ssa_28))
(assert (! true :named ssa_29))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 ssa_7 (and ssa_8_GlobVarAssigCall ssa_10 ssa_9 ssa_8_OldVarAssigCall ssa_11 ssa_12_return ssa_8_LocVarAssigCall) ssa_13 (and ssa_14_OldVarAssigCall ssa_18_return ssa_16 ssa_14_LocVarAssigCall ssa_14_GlobVarAssigCall ssa_15 ssa_17) ssa_19 ssa_20 ssa_21 (and ssa_22_OldVarAssigCall ssa_25 ssa_22_LocVarAssigCall ssa_26_return ssa_22_GlobVarAssigCall ssa_23 ssa_24) ssa_27 ssa_28 (and ssa_29 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#valid_-2| 1) 1) (= (select |#valid_-2| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#valid_-2| 0) 0) (= (select |#length_-2| 1) 2) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= (select |#length_-2| 2) 10) (= (select (select |#memory_int#0_-2| 1) 0) 48)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |max_#in~x.base_-1| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |max_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun max_~ret~0_0 () Int)
(declare-fun max_~x.base_0 () Int)
(declare-fun max_~x.offset_0 () Int)
(declare-fun max_~i~0_0 () Int)
(declare-fun max_~i~0_1 () Int)
(declare-fun max_~ret~0_2 () Int)
(declare-fun |max_#res_2| () Int)
(declare-fun |main_#t~ret7_3| () Int)
(declare-fun |max_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |max_#in~x.base_-1| max_~x.base_0) (= max_~i~0_0 0) (= max_~ret~0_0 0) (= max_~x.offset_0 |max_#in~x.offset_-1|)) :named ssa_0))
(assert (! (<= 60 max_~i~0_0) :named ssa_1))
(assert (! (= |max_#res_2| (ite (<= (mod max_~ret~0_0 4294967296) 2147483647) (mod max_~ret~0_0 4294967296) (+ (mod max_~ret~0_0 4294967296) (- 4294967296)))) :named ssa_2))
(assert (! (= |main_#t~ret7_3| |max_#res_2|) :named ssa_3_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |max_#in~x.base_-1| |main_~#x~0.base_-2|) (= |max_#in~x.offset_-1| |main_~#x~0.offset_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |max_#in~x.base_-1| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |max_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun max_~ret~0_0 () Int)
(declare-fun max_~x.base_0 () Int)
(declare-fun max_~x.offset_0 () Int)
(declare-fun max_~i~0_0 () Int)
(declare-fun max_~i~0_1 () Int)
(declare-fun max_~ret~0_2 () Int)
(declare-fun |max_#res_2| () Int)
(declare-fun |main_#t~ret10_3| () Int)
(declare-fun |max_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |max_#in~x.base_-1| max_~x.base_0) (= max_~i~0_0 0) (= max_~ret~0_0 0) (= max_~x.offset_0 |max_#in~x.offset_-1|)) :named ssa_0))
(assert (! (<= 60 max_~i~0_0) :named ssa_1))
(assert (! (= |max_#res_2| (ite (<= (mod max_~ret~0_0 4294967296) 2147483647) (mod max_~ret~0_0 4294967296) (+ (mod max_~ret~0_0 4294967296) (- 4294967296)))) :named ssa_2))
(assert (! (= |max_#res_2| |main_#t~ret10_3|) :named ssa_3_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |max_#in~x.base_-1| |main_~#x~0.base_-2|) (= |max_#in~x.offset_-1| |main_~#x~0.offset_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |main_~#x~0.offset_-2| () Int)
(declare-fun |main_~#x~0.base_-2| () Int)
(declare-fun |max_#in~x.base_-1| () Int)
(declare-fun |main_~#x~0.offset_-1| () Int)
(declare-fun |max_#in~x.offset_-1| () Int)
(declare-fun |main_~#x~0.base_-1| () Int)
(declare-fun max_~ret~0_0 () Int)
(declare-fun max_~x.base_0 () Int)
(declare-fun max_~x.offset_0 () Int)
(declare-fun max_~i~0_0 () Int)
(declare-fun max_~i~0_1 () Int)
(declare-fun max_~ret~0_2 () Int)
(declare-fun |max_#res_2| () Int)
(declare-fun |main_#t~ret14_3| () Int)
(declare-fun |max_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= |max_#in~x.base_-1| max_~x.base_0) (= max_~i~0_0 0) (= max_~ret~0_0 0) (= max_~x.offset_0 |max_#in~x.offset_-1|)) :named ssa_0))
(assert (! (<= 60 max_~i~0_0) :named ssa_1))
(assert (! (= |max_#res_2| (ite (<= (mod max_~ret~0_0 4294967296) 2147483647) (mod max_~ret~0_0 4294967296) (+ (mod max_~ret~0_0 4294967296) (- 4294967296)))) :named ssa_2))
(assert (! (= |max_#res_2| |main_#t~ret14_3|) :named ssa_3_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= |max_#in~x.offset_-1| |main_~#x~0.offset_-2|) (= |max_#in~x.base_-1| |main_~#x~0.base_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
