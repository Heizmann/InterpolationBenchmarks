(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:14:55+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id Ackermann03.c_AllErrorsAtOnce_Iteration6)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~nondet8| () Int)
(declare-fun |c_main_#t~nondet8_primed| () Int)
(declare-fun |c_main_#t~ret9| () Int)
(declare-fun |c_main_#t~ret9_primed| () Int)
(declare-fun c_main_~m~0 () Int)
(declare-fun c_main_~m~0_primed () Int)
(declare-fun c_main_~n~0 () Int)
(declare-fun c_main_~n~0_primed () Int)
(declare-fun c_main_~result~0 () Int)
(declare-fun c_main_~result~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10_primed| () Int)
(declare-fun |c_ackermann_#in~m| () Int)
(declare-fun |c_ackermann_#in~m_primed| () Int)
(declare-fun |c_ackermann_#in~n| () Int)
(declare-fun |c_ackermann_#in~n_primed| () Int)
(declare-fun |c_ackermann_#res| () Int)
(declare-fun |c_ackermann_#res_primed| () Int)
(declare-fun |c_ackermann_#t~ret4| () Int)
(declare-fun |c_ackermann_#t~ret4_primed| () Int)
(declare-fun |c_ackermann_#t~ret5| () Int)
(declare-fun |c_ackermann_#t~ret5_primed| () Int)
(declare-fun |c_ackermann_#t~ret6| () Int)
(declare-fun |c_ackermann_#t~ret6_primed| () Int)
(declare-fun c_ackermann_~m () Int)
(declare-fun c_ackermann_~m_primed () Int)
(declare-fun c_ackermann_~n () Int)
(declare-fun c_ackermann_~n_primed () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret10_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |main_#t~nondet7_4| () Int)
(declare-fun main_~m~0_4 () Int)
(declare-fun main_~n~0_5 () Int)
(declare-fun |main_#t~nondet8_5| () Int)
(declare-fun main_~m~0_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun main_~n~0_7 () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_11 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_15 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun |ackermann_#in~m_19| () Int)
(declare-fun |ackermann_#in~n_19| () Int)
(declare-fun ackermann_~m_19 () Int)
(declare-fun ackermann_~n_20 () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun ackermann_~n_23 () Int)
(declare-fun |ackermann_#in~m_23| () Int)
(declare-fun |ackermann_#in~n_23| () Int)
(declare-fun ackermann_~m_23 () Int)
(declare-fun ackermann_~n_24 () Int)
(declare-fun ackermann_~m_24 () Int)
(declare-fun ackermann_~n_26 () Int)
(declare-fun |ackermann_#in~m_27| () Int)
(declare-fun |ackermann_#in~n_27| () Int)
(declare-fun ackermann_~m_27 () Int)
(declare-fun ackermann_~n_28 () Int)
(declare-fun ackermann_~m_28 () Int)
(declare-fun |ackermann_#res_29| () Int)
(declare-fun ackermann_~n_29 () Int)
(declare-fun ackermann_~m_29 () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun |ackermann_#t~ret4_31| () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret4_32| () Int)
(declare-fun |ackermann_#res_34| () Int)
(declare-fun |ackermann_#t~ret5_34| () Int)
(declare-fun |ackermann_#t~ret5_36| () Int)
(declare-fun |ackermann_#in~m_36| () Int)
(declare-fun |ackermann_#in~n_36| () Int)
(declare-fun ackermann_~m_36 () Int)
(declare-fun ackermann_~n_37 () Int)
(declare-fun ackermann_~m_37 () Int)
(declare-fun |ackermann_#res_38| () Int)
(declare-fun ackermann_~n_38 () Int)
(declare-fun ackermann_~m_38 () Int)
(declare-fun |ackermann_#res_40| () Int)
(declare-fun |ackermann_#t~ret6_40| () Int)
(declare-fun |ackermann_#res_41| () Int)
(declare-fun |ackermann_#t~ret6_41| () Int)
(declare-fun |ackermann_#t~ret5_41| () Int)
(declare-fun |ackermann_#res_43| () Int)
(declare-fun |ackermann_#t~ret4_43| () Int)
(declare-fun |ackermann_#res_44| () Int)
(declare-fun |ackermann_#t~ret4_44| () Int)
(declare-fun |ackermann_#res_46| () Int)
(declare-fun |ackermann_#t~ret5_46| () Int)
(declare-fun |ackermann_#t~ret5_48| () Int)
(declare-fun |ackermann_#in~m_48| () Int)
(declare-fun |ackermann_#in~n_48| () Int)
(declare-fun ackermann_~m_48 () Int)
(declare-fun ackermann_~n_49 () Int)
(declare-fun ackermann_~m_49 () Int)
(declare-fun ackermann_~n_51 () Int)
(declare-fun |ackermann_#in~m_52| () Int)
(declare-fun |ackermann_#in~n_52| () Int)
(declare-fun ackermann_~m_52 () Int)
(declare-fun ackermann_~n_53 () Int)
(declare-fun ackermann_~m_53 () Int)
(declare-fun |ackermann_#res_54| () Int)
(declare-fun ackermann_~n_54 () Int)
(declare-fun ackermann_~m_54 () Int)
(declare-fun |ackermann_#res_56| () Int)
(declare-fun |ackermann_#t~ret4_56| () Int)
(declare-fun |ackermann_#res_57| () Int)
(declare-fun |ackermann_#t~ret4_57| () Int)
(declare-fun |ackermann_#res_59| () Int)
(declare-fun |ackermann_#t~ret6_59| () Int)
(declare-fun |ackermann_#res_60| () Int)
(declare-fun |ackermann_#t~ret6_60| () Int)
(declare-fun |ackermann_#t~ret5_60| () Int)
(declare-fun |ackermann_#res_62| () Int)
(declare-fun |ackermann_#t~ret5_62| () Int)
(declare-fun |ackermann_#t~ret5_64| () Int)
(declare-fun |ackermann_#in~m_64| () Int)
(declare-fun |ackermann_#in~n_64| () Int)
(declare-fun ackermann_~m_64 () Int)
(declare-fun ackermann_~n_65 () Int)
(declare-fun ackermann_~m_65 () Int)
(declare-fun ackermann_~n_67 () Int)
(declare-fun |ackermann_#in~m_68| () Int)
(declare-fun |ackermann_#in~n_68| () Int)
(declare-fun ackermann_~m_68 () Int)
(declare-fun ackermann_~n_69 () Int)
(declare-fun ackermann_~m_69 () Int)
(declare-fun |ackermann_#res_70| () Int)
(declare-fun ackermann_~n_70 () Int)
(declare-fun ackermann_~m_70 () Int)
(declare-fun |ackermann_#res_72| () Int)
(declare-fun |ackermann_#t~ret4_72| () Int)
(declare-fun |ackermann_#res_73| () Int)
(declare-fun |ackermann_#t~ret4_73| () Int)
(declare-fun |ackermann_#res_75| () Int)
(declare-fun |ackermann_#t~ret6_75| () Int)
(declare-fun |ackermann_#res_76| () Int)
(declare-fun |ackermann_#t~ret6_76| () Int)
(declare-fun |ackermann_#t~ret5_76| () Int)
(declare-fun |ackermann_#res_78| () Int)
(declare-fun |main_#t~ret9_78| () Int)
(declare-fun main_~result~0_79 () Int)
(declare-fun |main_#t~ret9_79| () Int)
(declare-fun main_~result~0_80 () Int)
(declare-fun main_~m~0_80 () Int)
(declare-fun main_~n~0_80 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 14 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (<= main_~m~0_4 2147483647) (<= 0 (+ main_~m~0_4 2147483648))) :named ssa_4))
(assert (! (and (<= main_~n~0_5 2147483647) (<= 0 (+ main_~n~0_5 2147483648)) (<= main_~m~0_4 3) (<= 0 main_~m~0_4)) :named ssa_5))
(assert (! (and (<= 0 main_~n~0_5) (<= main_~n~0_5 23)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= main_~n~0_5 |ackermann_#in~n_7|) (= main_~m~0_4 |ackermann_#in~m_7|)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (not (= ackermann_~n_8 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_8 (+ |ackermann_#in~n_11| 1)) (= |ackermann_#in~m_11| ackermann_~m_8)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (not (= ackermann_~n_12 0)) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_12 (+ |ackermann_#in~n_15| 1)) (= |ackermann_#in~m_15| ackermann_~m_12)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (not (= ackermann_~m_16 0)) :named ssa_17))
(assert (! (= ackermann_~n_16 0) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_16 (+ |ackermann_#in~m_19| 1)) (= |ackermann_#in~n_19| 1)) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= ackermann_~n_20 |ackermann_#in~n_19|) (= ackermann_~m_20 |ackermann_#in~m_19|)) :named ssa_20))
(assert (! (not (= ackermann_~m_20 0)) :named ssa_21))
(assert (! (not (= ackermann_~n_20 0)) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_20 (+ |ackermann_#in~n_23| 1)) (= |ackermann_#in~m_23| ackermann_~m_20)) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= ackermann_~n_24 |ackermann_#in~n_23|) (= ackermann_~m_24 |ackermann_#in~m_23|)) :named ssa_24))
(assert (! (not (= ackermann_~m_24 0)) :named ssa_25))
(assert (! (= ackermann_~n_24 0) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_24 (+ |ackermann_#in~m_27| 1)) (= |ackermann_#in~n_27| 1)) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= ackermann_~n_28 |ackermann_#in~n_27|) (= ackermann_~m_28 |ackermann_#in~m_27|)) :named ssa_28))
(assert (! (and (= |ackermann_#res_29| (+ ackermann_~n_28 1)) (= ackermann_~m_28 0)) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |ackermann_#res_29| |ackermann_#t~ret4_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_31| 2147483648)) (<= |ackermann_#t~ret4_31| 2147483647) (= |ackermann_#res_32| |ackermann_#t~ret4_31|)) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! (= |ackermann_#res_32| |ackermann_#t~ret5_34|) :named ssa_34_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_34| 2147483648)) (<= |ackermann_#t~ret5_34| 2147483647)) :named ssa_35))
(assert (! true :named ssa_36_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_36| 1) ackermann_~m_20) (= |ackermann_#in~n_36| |ackermann_#t~ret5_34|)) :named ssa_36_LocVarAssigCall))
(assert (! true :named ssa_36_OldVarAssigCall))
(assert (! (and (= ackermann_~n_37 |ackermann_#in~n_36|) (= ackermann_~m_37 |ackermann_#in~m_36|)) :named ssa_37))
(assert (! (and (= |ackermann_#res_38| (+ ackermann_~n_37 1)) (= ackermann_~m_37 0)) :named ssa_38))
(assert (! true :named ssa_39))
(assert (! (= |ackermann_#res_38| |ackermann_#t~ret6_40|) :named ssa_40_return))
(assert (! (and (= |ackermann_#res_41| |ackermann_#t~ret6_40|) (<= |ackermann_#t~ret6_40| 2147483647) (<= 0 (+ |ackermann_#t~ret6_40| 2147483648))) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! (= |ackermann_#res_41| |ackermann_#t~ret4_43|) :named ssa_43_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_43| 2147483648)) (<= |ackermann_#t~ret4_43| 2147483647) (= |ackermann_#res_44| |ackermann_#t~ret4_43|)) :named ssa_44))
(assert (! true :named ssa_45))
(assert (! (= |ackermann_#res_44| |ackermann_#t~ret5_46|) :named ssa_46_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_46| 2147483648)) (<= |ackermann_#t~ret5_46| 2147483647)) :named ssa_47))
(assert (! true :named ssa_48_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_48| 1) ackermann_~m_12) (= |ackermann_#in~n_48| |ackermann_#t~ret5_46|)) :named ssa_48_LocVarAssigCall))
(assert (! true :named ssa_48_OldVarAssigCall))
(assert (! (and (= ackermann_~n_49 |ackermann_#in~n_48|) (= ackermann_~m_49 |ackermann_#in~m_48|)) :named ssa_49))
(assert (! (not (= ackermann_~m_49 0)) :named ssa_50))
(assert (! (= ackermann_~n_49 0) :named ssa_51))
(assert (! true :named ssa_52_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_49 (+ |ackermann_#in~m_52| 1)) (= |ackermann_#in~n_52| 1)) :named ssa_52_LocVarAssigCall))
(assert (! true :named ssa_52_OldVarAssigCall))
(assert (! (and (= ackermann_~n_53 |ackermann_#in~n_52|) (= ackermann_~m_53 |ackermann_#in~m_52|)) :named ssa_53))
(assert (! (and (= |ackermann_#res_54| (+ ackermann_~n_53 1)) (= ackermann_~m_53 0)) :named ssa_54))
(assert (! true :named ssa_55))
(assert (! (= |ackermann_#res_54| |ackermann_#t~ret4_56|) :named ssa_56_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_56| 2147483648)) (<= |ackermann_#t~ret4_56| 2147483647) (= |ackermann_#res_57| |ackermann_#t~ret4_56|)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! (= |ackermann_#res_57| |ackermann_#t~ret6_59|) :named ssa_59_return))
(assert (! (and (= |ackermann_#res_60| |ackermann_#t~ret6_59|) (<= |ackermann_#t~ret6_59| 2147483647) (<= 0 (+ |ackermann_#t~ret6_59| 2147483648))) :named ssa_60))
(assert (! true :named ssa_61))
(assert (! (= |ackermann_#res_60| |ackermann_#t~ret5_62|) :named ssa_62_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_62| 2147483648)) (<= |ackermann_#t~ret5_62| 2147483647)) :named ssa_63))
(assert (! true :named ssa_64_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_64| 1) ackermann_~m_8) (= |ackermann_#in~n_64| |ackermann_#t~ret5_62|)) :named ssa_64_LocVarAssigCall))
(assert (! true :named ssa_64_OldVarAssigCall))
(assert (! (and (= ackermann_~n_65 |ackermann_#in~n_64|) (= ackermann_~m_65 |ackermann_#in~m_64|)) :named ssa_65))
(assert (! (not (= ackermann_~m_65 0)) :named ssa_66))
(assert (! (= ackermann_~n_65 0) :named ssa_67))
(assert (! true :named ssa_68_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_65 (+ |ackermann_#in~m_68| 1)) (= |ackermann_#in~n_68| 1)) :named ssa_68_LocVarAssigCall))
(assert (! true :named ssa_68_OldVarAssigCall))
(assert (! (and (= ackermann_~n_69 |ackermann_#in~n_68|) (= ackermann_~m_69 |ackermann_#in~m_68|)) :named ssa_69))
(assert (! (and (= |ackermann_#res_70| (+ ackermann_~n_69 1)) (= ackermann_~m_69 0)) :named ssa_70))
(assert (! true :named ssa_71))
(assert (! (= |ackermann_#res_70| |ackermann_#t~ret4_72|) :named ssa_72_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_72| 2147483648)) (<= |ackermann_#t~ret4_72| 2147483647) (= |ackermann_#res_73| |ackermann_#t~ret4_72|)) :named ssa_73))
(assert (! true :named ssa_74))
(assert (! (= |ackermann_#res_73| |ackermann_#t~ret6_75|) :named ssa_75_return))
(assert (! (and (= |ackermann_#res_76| |ackermann_#t~ret6_75|) (<= |ackermann_#t~ret6_75| 2147483647) (<= 0 (+ |ackermann_#t~ret6_75| 2147483648))) :named ssa_76))
(assert (! true :named ssa_77))
(assert (! (= |main_#t~ret9_78| |ackermann_#res_76|) :named ssa_78_return))
(assert (! (and (<= 0 (+ |main_#t~ret9_78| 2147483648)) (= main_~result~0_79 |main_#t~ret9_78|) (<= |main_#t~ret9_78| 2147483647)) :named ssa_79))
(assert (! (and (= main_~n~0_5 2) (= main_~m~0_4 2) (not (= 7 main_~result~0_79))) :named ssa_80))
(assert (! true :named ssa_81))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_13 ssa_77 ssa_20 ssa_19_GlobVarAssigCall ssa_60 ssa_76 ssa_44 ssa_16 ssa_57 ssa_15_LocVarAssigCall ssa_26 ssa_55 ssa_67 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_74 ssa_10 ssa_14 ssa_68_GlobVarAssigCall ssa_8 ssa_45 ssa_9 ssa_47 ssa_64_OldVarAssigCall ssa_59_return ssa_25 ssa_40_return ssa_34_return ssa_53 ssa_15_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_64_GlobVarAssigCall ssa_64_LocVarAssigCall ssa_31_return ssa_48_OldVarAssigCall ssa_19_OldVarAssigCall ssa_58 ssa_68_OldVarAssigCall ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_61 ssa_39 ssa_23_LocVarAssigCall ssa_37 ssa_43_return ssa_38 ssa_12 ssa_52_LocVarAssigCall ssa_56_return ssa_11_OldVarAssigCall ssa_32 ssa_50 ssa_36_OldVarAssigCall ssa_19_LocVarAssigCall ssa_65 ssa_72_return ssa_36_GlobVarAssigCall ssa_27_OldVarAssigCall ssa_28 ssa_48_GlobVarAssigCall ssa_54 ssa_22 ssa_51 ssa_49 ssa_48_LocVarAssigCall ssa_29 ssa_63 ssa_36_LocVarAssigCall ssa_23_GlobVarAssigCall ssa_21 ssa_68_LocVarAssigCall ssa_78_return ssa_11_GlobVarAssigCall ssa_18 ssa_52_OldVarAssigCall ssa_30 ssa_70 ssa_66 ssa_69 ssa_17 ssa_33 ssa_52_GlobVarAssigCall ssa_7_GlobVarAssigCall ssa_35 ssa_75_return ssa_27_LocVarAssigCall ssa_62_return ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_71 ssa_46_return ssa_24 ssa_73) ssa_79 ssa_80 (and ssa_81 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 14 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun main_~m~0_-2 () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~m~0_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_10 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_15 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun |ackermann_#in~m_19| () Int)
(declare-fun |ackermann_#in~n_19| () Int)
(declare-fun ackermann_~m_19 () Int)
(declare-fun ackermann_~n_20 () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun ackermann_~n_21 () Int)
(declare-fun ackermann_~m_21 () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret4_23| () Int)
(declare-fun |ackermann_#res_24| () Int)
(declare-fun |ackermann_#t~ret4_24| () Int)
(declare-fun |ackermann_#res_26| () Int)
(declare-fun |ackermann_#t~ret5_26| () Int)
(declare-fun |ackermann_#t~ret5_28| () Int)
(declare-fun |ackermann_#in~m_28| () Int)
(declare-fun |ackermann_#in~n_28| () Int)
(declare-fun ackermann_~m_28 () Int)
(declare-fun ackermann_~n_29 () Int)
(declare-fun ackermann_~m_29 () Int)
(declare-fun |ackermann_#res_30| () Int)
(declare-fun ackermann_~n_30 () Int)
(declare-fun ackermann_~m_30 () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret6_32| () Int)
(declare-fun |ackermann_#res_33| () Int)
(declare-fun |ackermann_#t~ret6_33| () Int)
(declare-fun |ackermann_#t~ret5_33| () Int)
(declare-fun |ackermann_#res_35| () Int)
(declare-fun |ackermann_#t~ret4_35| () Int)
(declare-fun |ackermann_#res_36| () Int)
(declare-fun |ackermann_#t~ret4_36| () Int)
(declare-fun |ackermann_#res_38| () Int)
(declare-fun |ackermann_#t~ret5_38| () Int)
(declare-fun |ackermann_#t~ret5_40| () Int)
(declare-fun |ackermann_#in~m_40| () Int)
(declare-fun |ackermann_#in~n_40| () Int)
(declare-fun ackermann_~m_40 () Int)
(declare-fun ackermann_~n_41 () Int)
(declare-fun ackermann_~m_41 () Int)
(declare-fun ackermann_~n_43 () Int)
(declare-fun |ackermann_#in~m_44| () Int)
(declare-fun |ackermann_#in~n_44| () Int)
(declare-fun ackermann_~m_44 () Int)
(declare-fun ackermann_~n_45 () Int)
(declare-fun ackermann_~m_45 () Int)
(declare-fun |ackermann_#res_46| () Int)
(declare-fun ackermann_~n_46 () Int)
(declare-fun ackermann_~m_46 () Int)
(declare-fun |ackermann_#res_48| () Int)
(declare-fun |ackermann_#t~ret4_48| () Int)
(declare-fun |ackermann_#res_49| () Int)
(declare-fun |ackermann_#t~ret4_49| () Int)
(declare-fun |ackermann_#res_51| () Int)
(declare-fun |ackermann_#t~ret6_51| () Int)
(declare-fun |ackermann_#res_52| () Int)
(declare-fun |ackermann_#t~ret6_52| () Int)
(declare-fun |ackermann_#t~ret5_52| () Int)
(declare-fun |ackermann_#res_54| () Int)
(declare-fun |ackermann_#t~ret5_54| () Int)
(declare-fun |ackermann_#t~ret5_56| () Int)
(declare-fun |ackermann_#in~m_56| () Int)
(declare-fun |ackermann_#in~n_56| () Int)
(declare-fun ackermann_~m_56 () Int)
(declare-fun ackermann_~n_57 () Int)
(declare-fun ackermann_~m_57 () Int)
(declare-fun ackermann_~n_59 () Int)
(declare-fun |ackermann_#in~m_60| () Int)
(declare-fun |ackermann_#in~n_60| () Int)
(declare-fun ackermann_~m_60 () Int)
(declare-fun ackermann_~n_61 () Int)
(declare-fun ackermann_~m_61 () Int)
(declare-fun |ackermann_#res_62| () Int)
(declare-fun ackermann_~n_62 () Int)
(declare-fun ackermann_~m_62 () Int)
(declare-fun |ackermann_#res_64| () Int)
(declare-fun |ackermann_#t~ret4_64| () Int)
(declare-fun |ackermann_#res_65| () Int)
(declare-fun |ackermann_#t~ret4_65| () Int)
(declare-fun |ackermann_#res_67| () Int)
(declare-fun |ackermann_#t~ret6_67| () Int)
(declare-fun |ackermann_#res_68| () Int)
(declare-fun |ackermann_#t~ret6_68| () Int)
(declare-fun |ackermann_#t~ret5_68| () Int)
(declare-fun |ackermann_#res_70| () Int)
(declare-fun |main_#t~ret9_70| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (= ackermann_~n_8 0) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_8 (+ |ackermann_#in~m_11| 1)) (= |ackermann_#in~n_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (not (= ackermann_~n_12 0)) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_12 (+ |ackermann_#in~n_15| 1)) (= |ackermann_#in~m_15| ackermann_~m_12)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (not (= ackermann_~m_16 0)) :named ssa_17))
(assert (! (= ackermann_~n_16 0) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_16 (+ |ackermann_#in~m_19| 1)) (= |ackermann_#in~n_19| 1)) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= ackermann_~n_20 |ackermann_#in~n_19|) (= ackermann_~m_20 |ackermann_#in~m_19|)) :named ssa_20))
(assert (! (and (= |ackermann_#res_21| (+ ackermann_~n_20 1)) (= ackermann_~m_20 0)) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret4_23|) :named ssa_23_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_23| 2147483648)) (<= |ackermann_#t~ret4_23| 2147483647) (= |ackermann_#res_24| |ackermann_#t~ret4_23|)) :named ssa_24))
(assert (! true :named ssa_25))
(assert (! (= |ackermann_#res_24| |ackermann_#t~ret5_26|) :named ssa_26_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_26| 2147483648)) (<= |ackermann_#t~ret5_26| 2147483647)) :named ssa_27))
(assert (! true :named ssa_28_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_28| 1) ackermann_~m_12) (= |ackermann_#in~n_28| |ackermann_#t~ret5_26|)) :named ssa_28_LocVarAssigCall))
(assert (! true :named ssa_28_OldVarAssigCall))
(assert (! (and (= ackermann_~n_29 |ackermann_#in~n_28|) (= ackermann_~m_29 |ackermann_#in~m_28|)) :named ssa_29))
(assert (! (and (= |ackermann_#res_30| (+ ackermann_~n_29 1)) (= ackermann_~m_29 0)) :named ssa_30))
(assert (! true :named ssa_31))
(assert (! (= |ackermann_#res_30| |ackermann_#t~ret6_32|) :named ssa_32_return))
(assert (! (and (= |ackermann_#res_33| |ackermann_#t~ret6_32|) (<= |ackermann_#t~ret6_32| 2147483647) (<= 0 (+ |ackermann_#t~ret6_32| 2147483648))) :named ssa_33))
(assert (! true :named ssa_34))
(assert (! (= |ackermann_#res_33| |ackermann_#t~ret4_35|) :named ssa_35_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_35| 2147483648)) (<= |ackermann_#t~ret4_35| 2147483647) (= |ackermann_#res_36| |ackermann_#t~ret4_35|)) :named ssa_36))
(assert (! true :named ssa_37))
(assert (! (= |ackermann_#res_36| |ackermann_#t~ret5_38|) :named ssa_38_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_38| 2147483648)) (<= |ackermann_#t~ret5_38| 2147483647)) :named ssa_39))
(assert (! true :named ssa_40_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_40| 1) ackermann_~m_4) (= |ackermann_#in~n_40| |ackermann_#t~ret5_38|)) :named ssa_40_LocVarAssigCall))
(assert (! true :named ssa_40_OldVarAssigCall))
(assert (! (and (= ackermann_~n_41 |ackermann_#in~n_40|) (= ackermann_~m_41 |ackermann_#in~m_40|)) :named ssa_41))
(assert (! (not (= ackermann_~m_41 0)) :named ssa_42))
(assert (! (= ackermann_~n_41 0) :named ssa_43))
(assert (! true :named ssa_44_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_41 (+ |ackermann_#in~m_44| 1)) (= |ackermann_#in~n_44| 1)) :named ssa_44_LocVarAssigCall))
(assert (! true :named ssa_44_OldVarAssigCall))
(assert (! (and (= ackermann_~n_45 |ackermann_#in~n_44|) (= ackermann_~m_45 |ackermann_#in~m_44|)) :named ssa_45))
(assert (! (and (= |ackermann_#res_46| (+ ackermann_~n_45 1)) (= ackermann_~m_45 0)) :named ssa_46))
(assert (! true :named ssa_47))
(assert (! (= |ackermann_#res_46| |ackermann_#t~ret4_48|) :named ssa_48_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_48| 2147483648)) (<= |ackermann_#t~ret4_48| 2147483647) (= |ackermann_#res_49| |ackermann_#t~ret4_48|)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! (= |ackermann_#res_49| |ackermann_#t~ret6_51|) :named ssa_51_return))
(assert (! (and (= |ackermann_#res_52| |ackermann_#t~ret6_51|) (<= |ackermann_#t~ret6_51| 2147483647) (<= 0 (+ |ackermann_#t~ret6_51| 2147483648))) :named ssa_52))
(assert (! true :named ssa_53))
(assert (! (= |ackermann_#res_52| |ackermann_#t~ret5_54|) :named ssa_54_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_54| 2147483648)) (<= |ackermann_#t~ret5_54| 2147483647)) :named ssa_55))
(assert (! true :named ssa_56_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_56| 1) ackermann_~m_0) (= |ackermann_#in~n_56| |ackermann_#t~ret5_54|)) :named ssa_56_LocVarAssigCall))
(assert (! true :named ssa_56_OldVarAssigCall))
(assert (! (and (= ackermann_~n_57 |ackermann_#in~n_56|) (= ackermann_~m_57 |ackermann_#in~m_56|)) :named ssa_57))
(assert (! (not (= ackermann_~m_57 0)) :named ssa_58))
(assert (! (= ackermann_~n_57 0) :named ssa_59))
(assert (! true :named ssa_60_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_57 (+ |ackermann_#in~m_60| 1)) (= |ackermann_#in~n_60| 1)) :named ssa_60_LocVarAssigCall))
(assert (! true :named ssa_60_OldVarAssigCall))
(assert (! (and (= ackermann_~n_61 |ackermann_#in~n_60|) (= ackermann_~m_61 |ackermann_#in~m_60|)) :named ssa_61))
(assert (! (and (= |ackermann_#res_62| (+ ackermann_~n_61 1)) (= ackermann_~m_61 0)) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! (= |ackermann_#res_62| |ackermann_#t~ret4_64|) :named ssa_64_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_64| 2147483648)) (<= |ackermann_#t~ret4_64| 2147483647) (= |ackermann_#res_65| |ackermann_#t~ret4_64|)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! (= |ackermann_#res_65| |ackermann_#t~ret6_67|) :named ssa_67_return))
(assert (! (and (= |ackermann_#res_68| |ackermann_#t~ret6_67|) (<= |ackermann_#t~ret6_67| 2147483647) (<= 0 (+ |ackermann_#t~ret6_67| 2147483648))) :named ssa_68))
(assert (! true :named ssa_69))
(assert (! (= |main_#t~ret9_70| |ackermann_#res_68|) :named ssa_70_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= main_~n~0_-2 |ackermann_#in~n_-1|) (= main_~m~0_-2 |ackermann_#in~m_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_19_GlobVarAssigCall ssa_44_LocVarAssigCall ssa_31 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_38_return ssa_40_OldVarAssigCall ssa_8 ssa_45 ssa_40_LocVarAssigCall ssa_9 ssa_46 ssa_51_return ssa_47 ssa_25 ssa_53 ssa_15_GlobVarAssigCall ssa_44_OldVarAssigCall ssa_3_GlobVarAssigCall ssa_44_GlobVarAssigCall ssa_26_return ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_32_return ssa_39 ssa_40_GlobVarAssigCall ssa_54_return ssa_43 ssa_37 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_50 ssa_28_OldVarAssigCall ssa_19_LocVarAssigCall ssa_48_return ssa_4 ssa_22 ssa_36 ssa_49 ssa_35_return ssa_29 ssa_21 ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_23_return ssa_30 ssa_17 ssa_28_GlobVarAssigCall ssa_33 ssa_7_GlobVarAssigCall ssa_28_LocVarAssigCall ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_24) ssa_55 (and ssa_57 ssa_60_LocVarAssigCall ssa_56_GlobVarAssigCall ssa_56_OldVarAssigCall ssa_56_LocVarAssigCall ssa_67_return ssa_58 ssa_61 ssa_60_OldVarAssigCall ssa_59 ssa_62 ssa_65 ssa_64_return ssa_63 ssa_60_GlobVarAssigCall ssa_66) ssa_68 ssa_69 (and ssa_-2_PendingContext ssa_70_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_11 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_14 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun |ackermann_#res_17| () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_19| () Int)
(declare-fun |ackermann_#t~ret4_19| () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret4_20| () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun |ackermann_#t~ret5_22| () Int)
(declare-fun |ackermann_#t~ret5_24| () Int)
(declare-fun |ackermann_#in~m_24| () Int)
(declare-fun |ackermann_#in~n_24| () Int)
(declare-fun ackermann_~m_24 () Int)
(declare-fun ackermann_~n_25 () Int)
(declare-fun ackermann_~m_25 () Int)
(declare-fun |ackermann_#res_26| () Int)
(declare-fun ackermann_~n_26 () Int)
(declare-fun ackermann_~m_26 () Int)
(declare-fun |ackermann_#res_28| () Int)
(declare-fun |ackermann_#t~ret6_28| () Int)
(declare-fun |ackermann_#res_29| () Int)
(declare-fun |ackermann_#t~ret6_29| () Int)
(declare-fun |ackermann_#t~ret5_29| () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun |ackermann_#t~ret4_31| () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret4_32| () Int)
(declare-fun |ackermann_#res_34| () Int)
(declare-fun |ackermann_#t~ret5_34| () Int)
(declare-fun |ackermann_#t~ret5_36| () Int)
(declare-fun |ackermann_#in~m_36| () Int)
(declare-fun |ackermann_#in~n_36| () Int)
(declare-fun ackermann_~m_36 () Int)
(declare-fun ackermann_~n_37 () Int)
(declare-fun ackermann_~m_37 () Int)
(declare-fun ackermann_~n_39 () Int)
(declare-fun |ackermann_#in~m_40| () Int)
(declare-fun |ackermann_#in~n_40| () Int)
(declare-fun ackermann_~m_40 () Int)
(declare-fun ackermann_~n_41 () Int)
(declare-fun ackermann_~m_41 () Int)
(declare-fun |ackermann_#res_42| () Int)
(declare-fun ackermann_~n_42 () Int)
(declare-fun ackermann_~m_42 () Int)
(declare-fun |ackermann_#res_44| () Int)
(declare-fun |ackermann_#t~ret4_44| () Int)
(declare-fun |ackermann_#res_45| () Int)
(declare-fun |ackermann_#t~ret4_45| () Int)
(declare-fun |ackermann_#res_47| () Int)
(declare-fun |ackermann_#t~ret6_47| () Int)
(declare-fun |ackermann_#res_48| () Int)
(declare-fun |ackermann_#t~ret6_48| () Int)
(declare-fun |ackermann_#t~ret5_48| () Int)
(declare-fun |ackermann_#res_50| () Int)
(declare-fun |ackermann_#t~ret5_50| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 5 |ackermann_#t~ret5_50|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (not (= ackermann_~n_8 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_8 (+ |ackermann_#in~n_11| 1)) (= |ackermann_#in~m_11| ackermann_~m_8)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (= ackermann_~n_12 0) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_12 (+ |ackermann_#in~m_15| 1)) (= |ackermann_#in~n_15| 1)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (and (= |ackermann_#res_17| (+ ackermann_~n_16 1)) (= ackermann_~m_16 0)) :named ssa_17))
(assert (! true :named ssa_18))
(assert (! (= |ackermann_#res_17| |ackermann_#t~ret4_19|) :named ssa_19_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_19| 2147483648)) (<= |ackermann_#t~ret4_19| 2147483647) (= |ackermann_#res_20| |ackermann_#t~ret4_19|)) :named ssa_20))
(assert (! true :named ssa_21))
(assert (! (= |ackermann_#res_20| |ackermann_#t~ret5_22|) :named ssa_22_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_22| 2147483648)) (<= |ackermann_#t~ret5_22| 2147483647)) :named ssa_23))
(assert (! true :named ssa_24_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_24| 1) ackermann_~m_8) (= |ackermann_#in~n_24| |ackermann_#t~ret5_22|)) :named ssa_24_LocVarAssigCall))
(assert (! true :named ssa_24_OldVarAssigCall))
(assert (! (and (= ackermann_~n_25 |ackermann_#in~n_24|) (= ackermann_~m_25 |ackermann_#in~m_24|)) :named ssa_25))
(assert (! (and (= |ackermann_#res_26| (+ ackermann_~n_25 1)) (= ackermann_~m_25 0)) :named ssa_26))
(assert (! true :named ssa_27))
(assert (! (= |ackermann_#res_26| |ackermann_#t~ret6_28|) :named ssa_28_return))
(assert (! (and (= |ackermann_#res_29| |ackermann_#t~ret6_28|) (<= |ackermann_#t~ret6_28| 2147483647) (<= 0 (+ |ackermann_#t~ret6_28| 2147483648))) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |ackermann_#res_29| |ackermann_#t~ret4_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_31| 2147483648)) (<= |ackermann_#t~ret4_31| 2147483647) (= |ackermann_#res_32| |ackermann_#t~ret4_31|)) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! (= |ackermann_#res_32| |ackermann_#t~ret5_34|) :named ssa_34_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_34| 2147483648)) (<= |ackermann_#t~ret5_34| 2147483647)) :named ssa_35))
(assert (! true :named ssa_36_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_36| 1) ackermann_~m_0) (= |ackermann_#in~n_36| |ackermann_#t~ret5_34|)) :named ssa_36_LocVarAssigCall))
(assert (! true :named ssa_36_OldVarAssigCall))
(assert (! (and (= ackermann_~n_37 |ackermann_#in~n_36|) (= ackermann_~m_37 |ackermann_#in~m_36|)) :named ssa_37))
(assert (! (not (= ackermann_~m_37 0)) :named ssa_38))
(assert (! (= ackermann_~n_37 0) :named ssa_39))
(assert (! true :named ssa_40_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_37 (+ |ackermann_#in~m_40| 1)) (= |ackermann_#in~n_40| 1)) :named ssa_40_LocVarAssigCall))
(assert (! true :named ssa_40_OldVarAssigCall))
(assert (! (and (= ackermann_~n_41 |ackermann_#in~n_40|) (= ackermann_~m_41 |ackermann_#in~m_40|)) :named ssa_41))
(assert (! (and (= |ackermann_#res_42| (+ ackermann_~n_41 1)) (= ackermann_~m_41 0)) :named ssa_42))
(assert (! true :named ssa_43))
(assert (! (= |ackermann_#res_42| |ackermann_#t~ret4_44|) :named ssa_44_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_44| 2147483648)) (<= |ackermann_#t~ret4_44| 2147483647) (= |ackermann_#res_45| |ackermann_#t~ret4_44|)) :named ssa_45))
(assert (! true :named ssa_46))
(assert (! (= |ackermann_#res_45| |ackermann_#t~ret6_47|) :named ssa_47_return))
(assert (! (and (= |ackermann_#res_48| |ackermann_#t~ret6_47|) (<= |ackermann_#t~ret6_47| 2147483647) (<= 0 (+ |ackermann_#t~ret6_47| 2147483648))) :named ssa_48))
(assert (! true :named ssa_49))
(assert (! (= |ackermann_#res_48| |ackermann_#t~ret5_50|) :named ssa_50_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_24_GlobVarAssigCall ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_24_LocVarAssigCall ssa_9 ssa_25 ssa_34_return ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_31_return ssa_28_return ssa_7_OldVarAssigCall ssa_24_OldVarAssigCall ssa_22_return ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_19_return ssa_4 ssa_29 ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_23 ssa_30 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_15_OldVarAssigCall) ssa_35 (and ssa_47_return ssa_40_OldVarAssigCall ssa_45 ssa_40_LocVarAssigCall ssa_46 ssa_39 ssa_40_GlobVarAssigCall ssa_43 ssa_37 ssa_38 ssa_36_OldVarAssigCall ssa_36_GlobVarAssigCall ssa_36_LocVarAssigCall ssa_44_return ssa_41 ssa_42) ssa_48 ssa_49 (and ssa_-2_PendingContext ssa_50_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_10 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun |ackermann_#res_13| () Int)
(declare-fun ackermann_~n_13 () Int)
(declare-fun ackermann_~m_13 () Int)
(declare-fun |ackermann_#res_15| () Int)
(declare-fun |ackermann_#t~ret4_15| () Int)
(declare-fun |ackermann_#res_16| () Int)
(declare-fun |ackermann_#t~ret4_16| () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun |ackermann_#t~ret5_18| () Int)
(declare-fun |ackermann_#t~ret5_20| () Int)
(declare-fun |ackermann_#in~m_20| () Int)
(declare-fun |ackermann_#in~n_20| () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun ackermann_~n_21 () Int)
(declare-fun ackermann_~m_21 () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun ackermann_~n_22 () Int)
(declare-fun ackermann_~m_22 () Int)
(declare-fun |ackermann_#res_24| () Int)
(declare-fun |ackermann_#t~ret6_24| () Int)
(declare-fun |ackermann_#res_25| () Int)
(declare-fun |ackermann_#t~ret6_25| () Int)
(declare-fun |ackermann_#t~ret5_25| () Int)
(declare-fun |ackermann_#res_27| () Int)
(declare-fun |ackermann_#t~ret4_27| () Int)
(declare-fun |ackermann_#res_28| () Int)
(declare-fun |ackermann_#t~ret4_28| () Int)
(declare-fun |ackermann_#res_30| () Int)
(declare-fun |ackermann_#t~ret5_30| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret5_30|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (= ackermann_~n_8 0) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_8 (+ |ackermann_#in~m_11| 1)) (= |ackermann_#in~n_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (and (= |ackermann_#res_13| (+ ackermann_~n_12 1)) (= ackermann_~m_12 0)) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |ackermann_#res_13| |ackermann_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_15| 2147483648)) (<= |ackermann_#t~ret4_15| 2147483647) (= |ackermann_#res_16| |ackermann_#t~ret4_15|)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |ackermann_#res_16| |ackermann_#t~ret5_18|) :named ssa_18_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_18| 2147483648)) (<= |ackermann_#t~ret5_18| 2147483647)) :named ssa_19))
(assert (! true :named ssa_20_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_20| 1) ackermann_~m_4) (= |ackermann_#in~n_20| |ackermann_#t~ret5_18|)) :named ssa_20_LocVarAssigCall))
(assert (! true :named ssa_20_OldVarAssigCall))
(assert (! (and (= ackermann_~n_21 |ackermann_#in~n_20|) (= ackermann_~m_21 |ackermann_#in~m_20|)) :named ssa_21))
(assert (! (and (= |ackermann_#res_22| (+ ackermann_~n_21 1)) (= ackermann_~m_21 0)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |ackermann_#res_22| |ackermann_#t~ret6_24|) :named ssa_24_return))
(assert (! (and (= |ackermann_#res_25| |ackermann_#t~ret6_24|) (<= |ackermann_#t~ret6_24| 2147483647) (<= 0 (+ |ackermann_#t~ret6_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |ackermann_#res_25| |ackermann_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_27| 2147483648)) (<= |ackermann_#t~ret4_27| 2147483647) (= |ackermann_#res_28| |ackermann_#t~ret4_27|)) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |ackermann_#res_28| |ackermann_#t~ret5_30|) :named ssa_30_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_18_return ssa_16 ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_27_return ssa_10 ssa_14 ssa_8 ssa_9 ssa_25 ssa_3_GlobVarAssigCall ssa_20_GlobVarAssigCall ssa_20_OldVarAssigCall ssa_24_return ssa_7_OldVarAssigCall ssa_19 ssa_20_LocVarAssigCall ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_4 ssa_22 ssa_21 ssa_11_GlobVarAssigCall ssa_23 ssa_17 ssa_7_GlobVarAssigCall ssa_15_return) ssa_28 ssa_29 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_30_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun |ackermann_#res_9| () Int)
(declare-fun ackermann_~n_9 () Int)
(declare-fun ackermann_~m_9 () Int)
(declare-fun |ackermann_#res_11| () Int)
(declare-fun |ackermann_#t~ret4_11| () Int)
(declare-fun |ackermann_#res_12| () Int)
(declare-fun |ackermann_#t~ret4_12| () Int)
(declare-fun |ackermann_#res_14| () Int)
(declare-fun |ackermann_#t~ret5_14| () Int)
(declare-fun |ackermann_#t~ret5_16| () Int)
(declare-fun |ackermann_#in~m_16| () Int)
(declare-fun |ackermann_#in~n_16| () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun ackermann_~m_18 () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret6_20| () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun |ackermann_#t~ret6_21| () Int)
(declare-fun |ackermann_#t~ret5_21| () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret4_23| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret4_23|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (and (= |ackermann_#res_9| (+ ackermann_~n_8 1)) (= ackermann_~m_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! (= |ackermann_#res_9| |ackermann_#t~ret4_11|) :named ssa_11_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_11| 2147483648)) (<= |ackermann_#t~ret4_11| 2147483647) (= |ackermann_#res_12| |ackermann_#t~ret4_11|)) :named ssa_12))
(assert (! true :named ssa_13))
(assert (! (= |ackermann_#res_12| |ackermann_#t~ret5_14|) :named ssa_14_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_14| 2147483648)) (<= |ackermann_#t~ret5_14| 2147483647)) :named ssa_15))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_16| 1) ackermann_~m_0) (= |ackermann_#in~n_16| |ackermann_#t~ret5_14|)) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (and (= ackermann_~n_17 |ackermann_#in~n_16|) (= ackermann_~m_17 |ackermann_#in~m_16|)) :named ssa_17))
(assert (! (and (= |ackermann_#res_18| (+ ackermann_~n_17 1)) (= ackermann_~m_17 0)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! (= |ackermann_#res_18| |ackermann_#t~ret6_20|) :named ssa_20_return))
(assert (! (and (= |ackermann_#res_21| |ackermann_#t~ret6_20|) (<= |ackermann_#t~ret6_20| 2147483647) (<= 0 (+ |ackermann_#t~ret6_20| 2147483648))) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret4_23|) :named ssa_23_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_11_return ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_12 ssa_5 ssa_4 ssa_7_GlobVarAssigCall ssa_14_return) ssa_15 (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) ssa_21 ssa_22 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_23_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret5_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 2 |ackermann_#t~ret5_10|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret5_10|) :named ssa_10_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 2 |ackermann_#t~ret4_3|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret6_3|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! (<= 2 |ackermann_#t~ret5_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret6_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret6_10|) :named ssa_10_return))
(assert (! (<= 3 |ackermann_#t~ret5_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#in~n_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= |ackermann_#in~n_-2| 0)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! (= |ackermann_#in~n_-2| 0) :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret6_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret6_10|) :named ssa_10_return))
(assert (! (<= 5 |ackermann_#t~ret5_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#in~n_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= |ackermann_#in~n_-2| 0)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! (= |ackermann_#in~n_-2| 0) :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
