(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:15:09+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id Addition03-1.c_AllErrorsAtOnce_Iteration16)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet6| () Int)
(declare-fun |c_main_#t~nondet6_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~ret8| () Int)
(declare-fun |c_main_#t~ret8_primed| () Int)
(declare-fun c_main_~m~0 () Int)
(declare-fun c_main_~m~0_primed () Int)
(declare-fun c_main_~n~0 () Int)
(declare-fun c_main_~n~0_primed () Int)
(declare-fun c_main_~result~0 () Int)
(declare-fun c_main_~result~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret9| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret9_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_addition_#in~m| () Int)
(declare-fun |c_addition_#in~m_primed| () Int)
(declare-fun |c_addition_#in~n| () Int)
(declare-fun |c_addition_#in~n_primed| () Int)
(declare-fun |c_addition_#res| () Int)
(declare-fun |c_addition_#res_primed| () Int)
(declare-fun |c_addition_#t~ret4| () Int)
(declare-fun |c_addition_#t~ret4_primed| () Int)
(declare-fun |c_addition_#t~ret5| () Int)
(declare-fun |c_addition_#t~ret5_primed| () Int)
(declare-fun c_addition_~m () Int)
(declare-fun c_addition_~m_primed () Int)
(declare-fun c_addition_~n () Int)
(declare-fun c_addition_~n_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret9_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |main_#t~nondet7_4| () Int)
(declare-fun |main_#t~nondet6_4| () Int)
(declare-fun main_~m~0_4 () Int)
(declare-fun main_~n~0_4 () Int)
(declare-fun main_~m~0_5 () Int)
(declare-fun |addition_#in~m_5| () Int)
(declare-fun |addition_#in~n_5| () Int)
(declare-fun main_~n~0_5 () Int)
(declare-fun addition_~n_6 () Int)
(declare-fun addition_~m_6 () Int)
(declare-fun |addition_#in~m_9| () Int)
(declare-fun addition_~n_9 () Int)
(declare-fun |addition_#in~n_9| () Int)
(declare-fun addition_~m_9 () Int)
(declare-fun addition_~n_10 () Int)
(declare-fun addition_~m_10 () Int)
(declare-fun |addition_#in~m_13| () Int)
(declare-fun addition_~n_13 () Int)
(declare-fun |addition_#in~n_13| () Int)
(declare-fun addition_~m_13 () Int)
(declare-fun addition_~n_14 () Int)
(declare-fun addition_~m_14 () Int)
(declare-fun |addition_#in~m_17| () Int)
(declare-fun addition_~n_17 () Int)
(declare-fun |addition_#in~n_17| () Int)
(declare-fun addition_~m_17 () Int)
(declare-fun addition_~n_18 () Int)
(declare-fun addition_~m_18 () Int)
(declare-fun |addition_#in~m_21| () Int)
(declare-fun addition_~n_21 () Int)
(declare-fun |addition_#in~n_21| () Int)
(declare-fun addition_~m_21 () Int)
(declare-fun addition_~n_22 () Int)
(declare-fun addition_~m_22 () Int)
(declare-fun |addition_#in~m_25| () Int)
(declare-fun addition_~n_25 () Int)
(declare-fun |addition_#in~n_25| () Int)
(declare-fun addition_~m_25 () Int)
(declare-fun addition_~n_26 () Int)
(declare-fun addition_~m_26 () Int)
(declare-fun |addition_#in~m_29| () Int)
(declare-fun addition_~n_29 () Int)
(declare-fun |addition_#in~n_29| () Int)
(declare-fun addition_~m_29 () Int)
(declare-fun addition_~n_30 () Int)
(declare-fun addition_~m_30 () Int)
(declare-fun |addition_#in~m_33| () Int)
(declare-fun addition_~n_33 () Int)
(declare-fun |addition_#in~n_33| () Int)
(declare-fun addition_~m_33 () Int)
(declare-fun addition_~n_34 () Int)
(declare-fun addition_~m_34 () Int)
(declare-fun |addition_#in~m_37| () Int)
(declare-fun addition_~n_37 () Int)
(declare-fun |addition_#in~n_37| () Int)
(declare-fun addition_~m_37 () Int)
(declare-fun addition_~n_38 () Int)
(declare-fun addition_~m_38 () Int)
(declare-fun |addition_#in~m_41| () Int)
(declare-fun addition_~n_41 () Int)
(declare-fun |addition_#in~n_41| () Int)
(declare-fun addition_~m_41 () Int)
(declare-fun addition_~n_42 () Int)
(declare-fun addition_~m_42 () Int)
(declare-fun |addition_#in~m_45| () Int)
(declare-fun addition_~n_45 () Int)
(declare-fun |addition_#in~n_45| () Int)
(declare-fun addition_~m_45 () Int)
(declare-fun addition_~n_46 () Int)
(declare-fun addition_~m_46 () Int)
(declare-fun |addition_#in~m_49| () Int)
(declare-fun addition_~n_49 () Int)
(declare-fun |addition_#in~n_49| () Int)
(declare-fun addition_~m_49 () Int)
(declare-fun addition_~n_50 () Int)
(declare-fun addition_~m_50 () Int)
(declare-fun |addition_#in~m_53| () Int)
(declare-fun addition_~n_53 () Int)
(declare-fun |addition_#in~n_53| () Int)
(declare-fun addition_~m_53 () Int)
(declare-fun addition_~n_54 () Int)
(declare-fun addition_~m_54 () Int)
(declare-fun |addition_#in~m_57| () Int)
(declare-fun addition_~n_57 () Int)
(declare-fun |addition_#in~n_57| () Int)
(declare-fun addition_~m_57 () Int)
(declare-fun addition_~n_58 () Int)
(declare-fun addition_~m_58 () Int)
(declare-fun |addition_#in~m_61| () Int)
(declare-fun addition_~n_61 () Int)
(declare-fun |addition_#in~n_61| () Int)
(declare-fun addition_~m_61 () Int)
(declare-fun addition_~n_62 () Int)
(declare-fun addition_~m_62 () Int)
(declare-fun |addition_#res_63| () Int)
(declare-fun addition_~n_63 () Int)
(declare-fun addition_~m_63 () Int)
(declare-fun |addition_#t~ret4_65| () Int)
(declare-fun |addition_#res_65| () Int)
(declare-fun |addition_#t~ret4_66| () Int)
(declare-fun |addition_#res_66| () Int)
(declare-fun |addition_#t~ret4_68| () Int)
(declare-fun |addition_#res_68| () Int)
(declare-fun |addition_#t~ret4_69| () Int)
(declare-fun |addition_#res_69| () Int)
(declare-fun |addition_#t~ret4_71| () Int)
(declare-fun |addition_#res_71| () Int)
(declare-fun |addition_#t~ret4_72| () Int)
(declare-fun |addition_#res_72| () Int)
(declare-fun |addition_#t~ret4_74| () Int)
(declare-fun |addition_#res_74| () Int)
(declare-fun |addition_#t~ret4_75| () Int)
(declare-fun |addition_#res_75| () Int)
(declare-fun |addition_#t~ret4_77| () Int)
(declare-fun |addition_#res_77| () Int)
(declare-fun |addition_#t~ret4_78| () Int)
(declare-fun |addition_#res_78| () Int)
(declare-fun |addition_#t~ret4_80| () Int)
(declare-fun |addition_#res_80| () Int)
(declare-fun |addition_#t~ret4_81| () Int)
(declare-fun |addition_#res_81| () Int)
(declare-fun |addition_#t~ret4_83| () Int)
(declare-fun |addition_#res_83| () Int)
(declare-fun |addition_#t~ret4_84| () Int)
(declare-fun |addition_#res_84| () Int)
(declare-fun |addition_#t~ret4_86| () Int)
(declare-fun |addition_#res_86| () Int)
(declare-fun |addition_#t~ret4_87| () Int)
(declare-fun |addition_#res_87| () Int)
(declare-fun |addition_#t~ret4_89| () Int)
(declare-fun |addition_#res_89| () Int)
(declare-fun |addition_#t~ret4_90| () Int)
(declare-fun |addition_#res_90| () Int)
(declare-fun |addition_#t~ret4_92| () Int)
(declare-fun |addition_#res_92| () Int)
(declare-fun |addition_#t~ret4_93| () Int)
(declare-fun |addition_#res_93| () Int)
(declare-fun |addition_#t~ret4_95| () Int)
(declare-fun |addition_#res_95| () Int)
(declare-fun |addition_#t~ret4_96| () Int)
(declare-fun |addition_#res_96| () Int)
(declare-fun |addition_#t~ret4_98| () Int)
(declare-fun |addition_#res_98| () Int)
(declare-fun |addition_#t~ret4_99| () Int)
(declare-fun |addition_#res_99| () Int)
(declare-fun |addition_#t~ret4_101| () Int)
(declare-fun |addition_#res_101| () Int)
(declare-fun |addition_#t~ret4_102| () Int)
(declare-fun |addition_#res_102| () Int)
(declare-fun |addition_#t~ret4_104| () Int)
(declare-fun |addition_#res_104| () Int)
(declare-fun |addition_#t~ret4_105| () Int)
(declare-fun |addition_#res_105| () Int)
(declare-fun |main_#t~ret8_107| () Int)
(declare-fun |addition_#res_107| () Int)
(declare-fun main_~result~0_108 () Int)
(declare-fun |main_#t~ret8_108| () Int)
(declare-fun main_~result~0_109 () Int)
(declare-fun main_~m~0_109 () Int)
(declare-fun main_~n~0_109 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 15 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (<= 0 (+ main_~m~0_4 2147483648)) (<= main_~m~0_4 2147483647) (<= main_~n~0_4 2147483647) (<= 0 (+ main_~n~0_4 2147483648))) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_5| main_~m~0_4) (= main_~n~0_4 |addition_#in~n_5|)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_5| addition_~n_6) (= |addition_#in~m_5| addition_~m_6)) :named ssa_6))
(assert (! (not (= 0 addition_~n_6)) :named ssa_7))
(assert (! (< 0 addition_~n_6) :named ssa_8))
(assert (! true :named ssa_9_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_9| (+ addition_~m_6 1)) (= addition_~n_6 (+ 1 |addition_#in~n_9|))) :named ssa_9_LocVarAssigCall))
(assert (! true :named ssa_9_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_9| addition_~n_10) (= |addition_#in~m_9| addition_~m_10)) :named ssa_10))
(assert (! (not (= 0 addition_~n_10)) :named ssa_11))
(assert (! (< 0 addition_~n_10) :named ssa_12))
(assert (! true :named ssa_13_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_13| (+ addition_~m_10 1)) (= addition_~n_10 (+ 1 |addition_#in~n_13|))) :named ssa_13_LocVarAssigCall))
(assert (! true :named ssa_13_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_13| addition_~n_14) (= |addition_#in~m_13| addition_~m_14)) :named ssa_14))
(assert (! (not (= 0 addition_~n_14)) :named ssa_15))
(assert (! (< 0 addition_~n_14) :named ssa_16))
(assert (! true :named ssa_17_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_17| (+ addition_~m_14 1)) (= addition_~n_14 (+ 1 |addition_#in~n_17|))) :named ssa_17_LocVarAssigCall))
(assert (! true :named ssa_17_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_17| addition_~n_18) (= |addition_#in~m_17| addition_~m_18)) :named ssa_18))
(assert (! (not (= 0 addition_~n_18)) :named ssa_19))
(assert (! (< 0 addition_~n_18) :named ssa_20))
(assert (! true :named ssa_21_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_21| (+ addition_~m_18 1)) (= addition_~n_18 (+ 1 |addition_#in~n_21|))) :named ssa_21_LocVarAssigCall))
(assert (! true :named ssa_21_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_21| addition_~n_22) (= |addition_#in~m_21| addition_~m_22)) :named ssa_22))
(assert (! (not (= 0 addition_~n_22)) :named ssa_23))
(assert (! (< 0 addition_~n_22) :named ssa_24))
(assert (! true :named ssa_25_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_25| (+ addition_~m_22 1)) (= addition_~n_22 (+ 1 |addition_#in~n_25|))) :named ssa_25_LocVarAssigCall))
(assert (! true :named ssa_25_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_25| addition_~n_26) (= |addition_#in~m_25| addition_~m_26)) :named ssa_26))
(assert (! (not (= 0 addition_~n_26)) :named ssa_27))
(assert (! (< 0 addition_~n_26) :named ssa_28))
(assert (! true :named ssa_29_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_29| (+ addition_~m_26 1)) (= addition_~n_26 (+ 1 |addition_#in~n_29|))) :named ssa_29_LocVarAssigCall))
(assert (! true :named ssa_29_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_29| addition_~n_30) (= |addition_#in~m_29| addition_~m_30)) :named ssa_30))
(assert (! (not (= 0 addition_~n_30)) :named ssa_31))
(assert (! (< 0 addition_~n_30) :named ssa_32))
(assert (! true :named ssa_33_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_33| (+ addition_~m_30 1)) (= addition_~n_30 (+ 1 |addition_#in~n_33|))) :named ssa_33_LocVarAssigCall))
(assert (! true :named ssa_33_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_33| addition_~n_34) (= |addition_#in~m_33| addition_~m_34)) :named ssa_34))
(assert (! (not (= 0 addition_~n_34)) :named ssa_35))
(assert (! (< 0 addition_~n_34) :named ssa_36))
(assert (! true :named ssa_37_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_37| (+ addition_~m_34 1)) (= addition_~n_34 (+ 1 |addition_#in~n_37|))) :named ssa_37_LocVarAssigCall))
(assert (! true :named ssa_37_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_37| addition_~n_38) (= |addition_#in~m_37| addition_~m_38)) :named ssa_38))
(assert (! (not (= 0 addition_~n_38)) :named ssa_39))
(assert (! (< 0 addition_~n_38) :named ssa_40))
(assert (! true :named ssa_41_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_41| (+ addition_~m_38 1)) (= addition_~n_38 (+ 1 |addition_#in~n_41|))) :named ssa_41_LocVarAssigCall))
(assert (! true :named ssa_41_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_41| addition_~n_42) (= |addition_#in~m_41| addition_~m_42)) :named ssa_42))
(assert (! (not (= 0 addition_~n_42)) :named ssa_43))
(assert (! (< 0 addition_~n_42) :named ssa_44))
(assert (! true :named ssa_45_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_45| (+ addition_~m_42 1)) (= addition_~n_42 (+ 1 |addition_#in~n_45|))) :named ssa_45_LocVarAssigCall))
(assert (! true :named ssa_45_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_45| addition_~n_46) (= |addition_#in~m_45| addition_~m_46)) :named ssa_46))
(assert (! (not (= 0 addition_~n_46)) :named ssa_47))
(assert (! (< 0 addition_~n_46) :named ssa_48))
(assert (! true :named ssa_49_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_49| (+ addition_~m_46 1)) (= addition_~n_46 (+ 1 |addition_#in~n_49|))) :named ssa_49_LocVarAssigCall))
(assert (! true :named ssa_49_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_49| addition_~n_50) (= |addition_#in~m_49| addition_~m_50)) :named ssa_50))
(assert (! (not (= 0 addition_~n_50)) :named ssa_51))
(assert (! (< 0 addition_~n_50) :named ssa_52))
(assert (! true :named ssa_53_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_53| (+ addition_~m_50 1)) (= addition_~n_50 (+ 1 |addition_#in~n_53|))) :named ssa_53_LocVarAssigCall))
(assert (! true :named ssa_53_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_53| addition_~n_54) (= |addition_#in~m_53| addition_~m_54)) :named ssa_54))
(assert (! (not (= 0 addition_~n_54)) :named ssa_55))
(assert (! (< 0 addition_~n_54) :named ssa_56))
(assert (! true :named ssa_57_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_57| (+ addition_~m_54 1)) (= addition_~n_54 (+ 1 |addition_#in~n_57|))) :named ssa_57_LocVarAssigCall))
(assert (! true :named ssa_57_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_57| addition_~n_58) (= |addition_#in~m_57| addition_~m_58)) :named ssa_58))
(assert (! (not (= 0 addition_~n_58)) :named ssa_59))
(assert (! (< 0 addition_~n_58) :named ssa_60))
(assert (! true :named ssa_61_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_61| (+ addition_~m_58 1)) (= addition_~n_58 (+ 1 |addition_#in~n_61|))) :named ssa_61_LocVarAssigCall))
(assert (! true :named ssa_61_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_61| addition_~n_62) (= |addition_#in~m_61| addition_~m_62)) :named ssa_62))
(assert (! (and (= 0 addition_~n_62) (= |addition_#res_63| addition_~m_62)) :named ssa_63))
(assert (! true :named ssa_64))
(assert (! (= |addition_#res_63| |addition_#t~ret4_65|) :named ssa_65_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_65|)) (<= |addition_#t~ret4_65| 9223372036854775807) (= |addition_#res_66| |addition_#t~ret4_65|)) :named ssa_66))
(assert (! true :named ssa_67))
(assert (! (= |addition_#res_66| |addition_#t~ret4_68|) :named ssa_68_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_68|)) (<= |addition_#t~ret4_68| 9223372036854775807) (= |addition_#res_69| |addition_#t~ret4_68|)) :named ssa_69))
(assert (! true :named ssa_70))
(assert (! (= |addition_#res_69| |addition_#t~ret4_71|) :named ssa_71_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_71|)) (<= |addition_#t~ret4_71| 9223372036854775807) (= |addition_#res_72| |addition_#t~ret4_71|)) :named ssa_72))
(assert (! true :named ssa_73))
(assert (! (= |addition_#res_72| |addition_#t~ret4_74|) :named ssa_74_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_74|)) (<= |addition_#t~ret4_74| 9223372036854775807) (= |addition_#res_75| |addition_#t~ret4_74|)) :named ssa_75))
(assert (! true :named ssa_76))
(assert (! (= |addition_#res_75| |addition_#t~ret4_77|) :named ssa_77_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_77|)) (<= |addition_#t~ret4_77| 9223372036854775807) (= |addition_#res_78| |addition_#t~ret4_77|)) :named ssa_78))
(assert (! true :named ssa_79))
(assert (! (= |addition_#res_78| |addition_#t~ret4_80|) :named ssa_80_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_80|)) (<= |addition_#t~ret4_80| 9223372036854775807) (= |addition_#res_81| |addition_#t~ret4_80|)) :named ssa_81))
(assert (! true :named ssa_82))
(assert (! (= |addition_#res_81| |addition_#t~ret4_83|) :named ssa_83_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_83|)) (<= |addition_#t~ret4_83| 9223372036854775807) (= |addition_#res_84| |addition_#t~ret4_83|)) :named ssa_84))
(assert (! true :named ssa_85))
(assert (! (= |addition_#res_84| |addition_#t~ret4_86|) :named ssa_86_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_86|)) (<= |addition_#t~ret4_86| 9223372036854775807) (= |addition_#res_87| |addition_#t~ret4_86|)) :named ssa_87))
(assert (! true :named ssa_88))
(assert (! (= |addition_#res_87| |addition_#t~ret4_89|) :named ssa_89_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_89|)) (<= |addition_#t~ret4_89| 9223372036854775807) (= |addition_#res_90| |addition_#t~ret4_89|)) :named ssa_90))
(assert (! true :named ssa_91))
(assert (! (= |addition_#res_90| |addition_#t~ret4_92|) :named ssa_92_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_92|)) (<= |addition_#t~ret4_92| 9223372036854775807) (= |addition_#res_93| |addition_#t~ret4_92|)) :named ssa_93))
(assert (! true :named ssa_94))
(assert (! (= |addition_#res_93| |addition_#t~ret4_95|) :named ssa_95_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_95|)) (<= |addition_#t~ret4_95| 9223372036854775807) (= |addition_#res_96| |addition_#t~ret4_95|)) :named ssa_96))
(assert (! true :named ssa_97))
(assert (! (= |addition_#res_96| |addition_#t~ret4_98|) :named ssa_98_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_98|)) (<= |addition_#t~ret4_98| 9223372036854775807) (= |addition_#res_99| |addition_#t~ret4_98|)) :named ssa_99))
(assert (! true :named ssa_100))
(assert (! (= |addition_#res_99| |addition_#t~ret4_101|) :named ssa_101_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_101|)) (<= |addition_#t~ret4_101| 9223372036854775807) (= |addition_#res_102| |addition_#t~ret4_101|)) :named ssa_102))
(assert (! true :named ssa_103))
(assert (! (= |addition_#res_102| |addition_#t~ret4_104|) :named ssa_104_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_104|)) (<= |addition_#t~ret4_104| 9223372036854775807) (= |addition_#res_105| |addition_#t~ret4_104|)) :named ssa_105))
(assert (! true :named ssa_106))
(assert (! (= |addition_#res_105| |main_#t~ret8_107|) :named ssa_107_return))
(assert (! (and (<= |main_#t~ret8_107| 9223372036854775807) (<= 0 (+ |main_#t~ret8_107| 9223372036854775808)) (= main_~result~0_108 |main_#t~ret8_107|)) :named ssa_108))
(assert (! (and (< main_~result~0_108 200) (<= 100 main_~n~0_4) (<= 100 main_~m~0_4)) :named ssa_109))
(assert (! true :named ssa_110))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_57_OldVarAssigCall ssa_75 ssa_27 ssa_29_OldVarAssigCall ssa_20 ssa_41_GlobVarAssigCall ssa_17_LocVarAssigCall ssa_21_LocVarAssigCall ssa_89_return ssa_64 ssa_5_LocVarAssigCall ssa_31 ssa_99 ssa_60 ssa_5_GlobVarAssigCall ssa_21_OldVarAssigCall ssa_76 ssa_81 ssa_88 ssa_7 ssa_84 ssa_44 ssa_16 ssa_6 ssa_26 ssa_55 ssa_67 ssa_34 ssa_17_GlobVarAssigCall ssa_100 ssa_95_return ssa_25_GlobVarAssigCall ssa_40 ssa_10 ssa_14 ssa_25_OldVarAssigCall ssa_96 ssa_86_return ssa_8 ssa_13_LocVarAssigCall ssa_29_GlobVarAssigCall ssa_46 ssa_53_GlobVarAssigCall ssa_47 ssa_90 ssa_94 ssa_13_OldVarAssigCall ssa_25_LocVarAssigCall ssa_105 ssa_82 ssa_37_LocVarAssigCall ssa_49_LocVarAssigCall ssa_85 ssa_98_return ssa_58 ssa_33_GlobVarAssigCall ssa_83_return ssa_19 ssa_104_return ssa_87 ssa_92_return ssa_33_LocVarAssigCall ssa_59 ssa_61_OldVarAssigCall ssa_39 ssa_53_LocVarAssigCall ssa_62 ssa_43 ssa_101_return ssa_72 ssa_13_GlobVarAssigCall ssa_41_OldVarAssigCall ssa_17_OldVarAssigCall ssa_107_return ssa_38 ssa_79 ssa_74_return ssa_12 ssa_97 ssa_32 ssa_5_OldVarAssigCall ssa_50 ssa_61_LocVarAssigCall ssa_71_return ssa_103 ssa_61_GlobVarAssigCall ssa_41_LocVarAssigCall ssa_11 ssa_48 ssa_53_OldVarAssigCall ssa_106 ssa_28 ssa_29_LocVarAssigCall ssa_54 ssa_65_return ssa_37_GlobVarAssigCall ssa_22 ssa_51 ssa_36 ssa_15 ssa_80_return ssa_63 ssa_45_OldVarAssigCall ssa_45_LocVarAssigCall ssa_68_return ssa_102 ssa_78 ssa_52 ssa_18 ssa_49_GlobVarAssigCall ssa_23 ssa_91 ssa_30 ssa_70 ssa_66 ssa_69 ssa_9_LocVarAssigCall ssa_56 ssa_57_LocVarAssigCall ssa_93 ssa_9_OldVarAssigCall ssa_35 ssa_21_GlobVarAssigCall ssa_9_GlobVarAssigCall ssa_33_OldVarAssigCall ssa_77_return ssa_45_GlobVarAssigCall ssa_49_OldVarAssigCall ssa_42 ssa_57_GlobVarAssigCall ssa_24 ssa_37_OldVarAssigCall ssa_73) ssa_108 ssa_109 (and ssa_110 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 15 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun main_~m~0_-2 () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~m~0_-1 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#in~m_39| () Int)
(declare-fun addition_~n_39 () Int)
(declare-fun |addition_#in~n_39| () Int)
(declare-fun addition_~m_39 () Int)
(declare-fun addition_~n_40 () Int)
(declare-fun addition_~m_40 () Int)
(declare-fun |addition_#in~m_43| () Int)
(declare-fun addition_~n_43 () Int)
(declare-fun |addition_#in~n_43| () Int)
(declare-fun addition_~m_43 () Int)
(declare-fun addition_~n_44 () Int)
(declare-fun addition_~m_44 () Int)
(declare-fun |addition_#in~m_47| () Int)
(declare-fun addition_~n_47 () Int)
(declare-fun |addition_#in~n_47| () Int)
(declare-fun addition_~m_47 () Int)
(declare-fun addition_~n_48 () Int)
(declare-fun addition_~m_48 () Int)
(declare-fun |addition_#in~m_51| () Int)
(declare-fun addition_~n_51 () Int)
(declare-fun |addition_#in~n_51| () Int)
(declare-fun addition_~m_51 () Int)
(declare-fun addition_~n_52 () Int)
(declare-fun addition_~m_52 () Int)
(declare-fun |addition_#in~m_55| () Int)
(declare-fun addition_~n_55 () Int)
(declare-fun |addition_#in~n_55| () Int)
(declare-fun addition_~m_55 () Int)
(declare-fun addition_~n_56 () Int)
(declare-fun addition_~m_56 () Int)
(declare-fun |addition_#res_57| () Int)
(declare-fun addition_~n_57 () Int)
(declare-fun addition_~m_57 () Int)
(declare-fun |addition_#t~ret4_59| () Int)
(declare-fun |addition_#res_59| () Int)
(declare-fun |addition_#t~ret4_60| () Int)
(declare-fun |addition_#res_60| () Int)
(declare-fun |addition_#t~ret4_62| () Int)
(declare-fun |addition_#res_62| () Int)
(declare-fun |addition_#t~ret4_63| () Int)
(declare-fun |addition_#res_63| () Int)
(declare-fun |addition_#t~ret4_65| () Int)
(declare-fun |addition_#res_65| () Int)
(declare-fun |addition_#t~ret4_66| () Int)
(declare-fun |addition_#res_66| () Int)
(declare-fun |addition_#t~ret4_68| () Int)
(declare-fun |addition_#res_68| () Int)
(declare-fun |addition_#t~ret4_69| () Int)
(declare-fun |addition_#res_69| () Int)
(declare-fun |addition_#t~ret4_71| () Int)
(declare-fun |addition_#res_71| () Int)
(declare-fun |addition_#t~ret4_72| () Int)
(declare-fun |addition_#res_72| () Int)
(declare-fun |addition_#t~ret4_74| () Int)
(declare-fun |addition_#res_74| () Int)
(declare-fun |addition_#t~ret4_75| () Int)
(declare-fun |addition_#res_75| () Int)
(declare-fun |addition_#t~ret4_77| () Int)
(declare-fun |addition_#res_77| () Int)
(declare-fun |addition_#t~ret4_78| () Int)
(declare-fun |addition_#res_78| () Int)
(declare-fun |addition_#t~ret4_80| () Int)
(declare-fun |addition_#res_80| () Int)
(declare-fun |addition_#t~ret4_81| () Int)
(declare-fun |addition_#res_81| () Int)
(declare-fun |addition_#t~ret4_83| () Int)
(declare-fun |addition_#res_83| () Int)
(declare-fun |addition_#t~ret4_84| () Int)
(declare-fun |addition_#res_84| () Int)
(declare-fun |addition_#t~ret4_86| () Int)
(declare-fun |addition_#res_86| () Int)
(declare-fun |addition_#t~ret4_87| () Int)
(declare-fun |addition_#res_87| () Int)
(declare-fun |addition_#t~ret4_89| () Int)
(declare-fun |addition_#res_89| () Int)
(declare-fun |addition_#t~ret4_90| () Int)
(declare-fun |addition_#res_90| () Int)
(declare-fun |addition_#t~ret4_92| () Int)
(declare-fun |addition_#res_92| () Int)
(declare-fun |addition_#t~ret4_93| () Int)
(declare-fun |addition_#res_93| () Int)
(declare-fun |addition_#t~ret4_95| () Int)
(declare-fun |addition_#res_95| () Int)
(declare-fun |addition_#t~ret4_96| () Int)
(declare-fun |addition_#res_96| () Int)
(declare-fun |addition_#t~ret4_98| () Int)
(declare-fun |addition_#res_98| () Int)
(declare-fun |addition_#t~ret4_99| () Int)
(declare-fun |addition_#res_99| () Int)
(declare-fun |main_#t~ret8_101| () Int)
(declare-fun |addition_#res_101| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= main_~n~0_-2 14)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (not (= 0 addition_~n_36)) :named ssa_37))
(assert (! (< 0 addition_~n_36) :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_39| (+ addition_~m_36 1)) (= addition_~n_36 (+ 1 |addition_#in~n_39|))) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_39| addition_~n_40) (= |addition_#in~m_39| addition_~m_40)) :named ssa_40))
(assert (! (not (= 0 addition_~n_40)) :named ssa_41))
(assert (! (< 0 addition_~n_40) :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_43| (+ addition_~m_40 1)) (= addition_~n_40 (+ 1 |addition_#in~n_43|))) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_43| addition_~n_44) (= |addition_#in~m_43| addition_~m_44)) :named ssa_44))
(assert (! (not (= 0 addition_~n_44)) :named ssa_45))
(assert (! (< 0 addition_~n_44) :named ssa_46))
(assert (! true :named ssa_47_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_47| (+ addition_~m_44 1)) (= addition_~n_44 (+ 1 |addition_#in~n_47|))) :named ssa_47_LocVarAssigCall))
(assert (! true :named ssa_47_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_47| addition_~n_48) (= |addition_#in~m_47| addition_~m_48)) :named ssa_48))
(assert (! (not (= 0 addition_~n_48)) :named ssa_49))
(assert (! (< 0 addition_~n_48) :named ssa_50))
(assert (! true :named ssa_51_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_51| (+ addition_~m_48 1)) (= addition_~n_48 (+ 1 |addition_#in~n_51|))) :named ssa_51_LocVarAssigCall))
(assert (! true :named ssa_51_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_51| addition_~n_52) (= |addition_#in~m_51| addition_~m_52)) :named ssa_52))
(assert (! (not (= 0 addition_~n_52)) :named ssa_53))
(assert (! (< 0 addition_~n_52) :named ssa_54))
(assert (! true :named ssa_55_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_55| (+ addition_~m_52 1)) (= addition_~n_52 (+ 1 |addition_#in~n_55|))) :named ssa_55_LocVarAssigCall))
(assert (! true :named ssa_55_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_55| addition_~n_56) (= |addition_#in~m_55| addition_~m_56)) :named ssa_56))
(assert (! (and (= 0 addition_~n_56) (= |addition_#res_57| addition_~m_56)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! (= |addition_#res_57| |addition_#t~ret4_59|) :named ssa_59_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_59|)) (<= |addition_#t~ret4_59| 9223372036854775807) (= |addition_#res_60| |addition_#t~ret4_59|)) :named ssa_60))
(assert (! true :named ssa_61))
(assert (! (= |addition_#res_60| |addition_#t~ret4_62|) :named ssa_62_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_62|)) (<= |addition_#t~ret4_62| 9223372036854775807) (= |addition_#res_63| |addition_#t~ret4_62|)) :named ssa_63))
(assert (! true :named ssa_64))
(assert (! (= |addition_#res_63| |addition_#t~ret4_65|) :named ssa_65_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_65|)) (<= |addition_#t~ret4_65| 9223372036854775807) (= |addition_#res_66| |addition_#t~ret4_65|)) :named ssa_66))
(assert (! true :named ssa_67))
(assert (! (= |addition_#res_66| |addition_#t~ret4_68|) :named ssa_68_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_68|)) (<= |addition_#t~ret4_68| 9223372036854775807) (= |addition_#res_69| |addition_#t~ret4_68|)) :named ssa_69))
(assert (! true :named ssa_70))
(assert (! (= |addition_#res_69| |addition_#t~ret4_71|) :named ssa_71_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_71|)) (<= |addition_#t~ret4_71| 9223372036854775807) (= |addition_#res_72| |addition_#t~ret4_71|)) :named ssa_72))
(assert (! true :named ssa_73))
(assert (! (= |addition_#res_72| |addition_#t~ret4_74|) :named ssa_74_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_74|)) (<= |addition_#t~ret4_74| 9223372036854775807) (= |addition_#res_75| |addition_#t~ret4_74|)) :named ssa_75))
(assert (! true :named ssa_76))
(assert (! (= |addition_#res_75| |addition_#t~ret4_77|) :named ssa_77_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_77|)) (<= |addition_#t~ret4_77| 9223372036854775807) (= |addition_#res_78| |addition_#t~ret4_77|)) :named ssa_78))
(assert (! true :named ssa_79))
(assert (! (= |addition_#res_78| |addition_#t~ret4_80|) :named ssa_80_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_80|)) (<= |addition_#t~ret4_80| 9223372036854775807) (= |addition_#res_81| |addition_#t~ret4_80|)) :named ssa_81))
(assert (! true :named ssa_82))
(assert (! (= |addition_#res_81| |addition_#t~ret4_83|) :named ssa_83_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_83|)) (<= |addition_#t~ret4_83| 9223372036854775807) (= |addition_#res_84| |addition_#t~ret4_83|)) :named ssa_84))
(assert (! true :named ssa_85))
(assert (! (= |addition_#res_84| |addition_#t~ret4_86|) :named ssa_86_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_86|)) (<= |addition_#t~ret4_86| 9223372036854775807) (= |addition_#res_87| |addition_#t~ret4_86|)) :named ssa_87))
(assert (! true :named ssa_88))
(assert (! (= |addition_#res_87| |addition_#t~ret4_89|) :named ssa_89_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_89|)) (<= |addition_#t~ret4_89| 9223372036854775807) (= |addition_#res_90| |addition_#t~ret4_89|)) :named ssa_90))
(assert (! true :named ssa_91))
(assert (! (= |addition_#res_90| |addition_#t~ret4_92|) :named ssa_92_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_92|)) (<= |addition_#t~ret4_92| 9223372036854775807) (= |addition_#res_93| |addition_#t~ret4_92|)) :named ssa_93))
(assert (! true :named ssa_94))
(assert (! (= |addition_#res_93| |addition_#t~ret4_95|) :named ssa_95_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_95|)) (<= |addition_#t~ret4_95| 9223372036854775807) (= |addition_#res_96| |addition_#t~ret4_95|)) :named ssa_96))
(assert (! true :named ssa_97))
(assert (! (= |addition_#res_96| |addition_#t~ret4_98|) :named ssa_98_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_98|)) (<= |addition_#t~ret4_98| 9223372036854775807) (= |addition_#res_99| |addition_#t~ret4_98|)) :named ssa_99))
(assert (! true :named ssa_100))
(assert (! (= |addition_#res_99| |main_#t~ret8_101|) :named ssa_101_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| main_~m~0_-2) (= main_~n~0_-2 |addition_#in~n_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_75 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_47_GlobVarAssigCall ssa_89_return ssa_64 ssa_43_OldVarAssigCall ssa_60 ssa_35_LocVarAssigCall ssa_76 ssa_81 ssa_88 ssa_84 ssa_44 ssa_16 ssa_57 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_67 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_95_return ssa_55_OldVarAssigCall ssa_40 ssa_10 ssa_14 ssa_96 ssa_86_return ssa_8 ssa_45 ssa_9 ssa_46 ssa_35_GlobVarAssigCall ssa_59_return ssa_39_OldVarAssigCall ssa_90 ssa_25 ssa_47_OldVarAssigCall ssa_94 ssa_53 ssa_39_GlobVarAssigCall ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_51_OldVarAssigCall ssa_82 ssa_51_GlobVarAssigCall ssa_85 ssa_98_return ssa_19_OldVarAssigCall ssa_58 ssa_83_return ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_55_GlobVarAssigCall ssa_87 ssa_92_return ssa_61 ssa_23_LocVarAssigCall ssa_37 ssa_72 ssa_31_OldVarAssigCall ssa_38 ssa_79 ssa_74_return ssa_43_GlobVarAssigCall ssa_12 ssa_5 ssa_97 ssa_11_OldVarAssigCall ssa_32 ssa_50 ssa_51_LocVarAssigCall ssa_31_GlobVarAssigCall ssa_71_return ssa_19_LocVarAssigCall ssa_48 ssa_27_OldVarAssigCall ssa_28 ssa_54 ssa_65_return ssa_4 ssa_22 ssa_36 ssa_49 ssa_80_return ssa_29 ssa_63 ssa_68_return ssa_23_GlobVarAssigCall ssa_21 ssa_78 ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_91 ssa_30 ssa_70 ssa_66 ssa_69 ssa_17 ssa_55_LocVarAssigCall ssa_56 ssa_47_LocVarAssigCall ssa_93 ssa_33 ssa_7_GlobVarAssigCall ssa_35_OldVarAssigCall ssa_39_LocVarAssigCall ssa_43_LocVarAssigCall ssa_27_LocVarAssigCall ssa_77_return ssa_62_return ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_24 ssa_73) ssa_99 ssa_100 (and ssa_-2_PendingContext ssa_101_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#in~m_39| () Int)
(declare-fun addition_~n_39 () Int)
(declare-fun |addition_#in~n_39| () Int)
(declare-fun addition_~m_39 () Int)
(declare-fun addition_~n_40 () Int)
(declare-fun addition_~m_40 () Int)
(declare-fun |addition_#in~m_43| () Int)
(declare-fun addition_~n_43 () Int)
(declare-fun |addition_#in~n_43| () Int)
(declare-fun addition_~m_43 () Int)
(declare-fun addition_~n_44 () Int)
(declare-fun addition_~m_44 () Int)
(declare-fun |addition_#in~m_47| () Int)
(declare-fun addition_~n_47 () Int)
(declare-fun |addition_#in~n_47| () Int)
(declare-fun addition_~m_47 () Int)
(declare-fun addition_~n_48 () Int)
(declare-fun addition_~m_48 () Int)
(declare-fun |addition_#in~m_51| () Int)
(declare-fun addition_~n_51 () Int)
(declare-fun |addition_#in~n_51| () Int)
(declare-fun addition_~m_51 () Int)
(declare-fun addition_~n_52 () Int)
(declare-fun addition_~m_52 () Int)
(declare-fun |addition_#res_53| () Int)
(declare-fun addition_~n_53 () Int)
(declare-fun addition_~m_53 () Int)
(declare-fun |addition_#t~ret4_55| () Int)
(declare-fun |addition_#res_55| () Int)
(declare-fun |addition_#t~ret4_56| () Int)
(declare-fun |addition_#res_56| () Int)
(declare-fun |addition_#t~ret4_58| () Int)
(declare-fun |addition_#res_58| () Int)
(declare-fun |addition_#t~ret4_59| () Int)
(declare-fun |addition_#res_59| () Int)
(declare-fun |addition_#t~ret4_61| () Int)
(declare-fun |addition_#res_61| () Int)
(declare-fun |addition_#t~ret4_62| () Int)
(declare-fun |addition_#res_62| () Int)
(declare-fun |addition_#t~ret4_64| () Int)
(declare-fun |addition_#res_64| () Int)
(declare-fun |addition_#t~ret4_65| () Int)
(declare-fun |addition_#res_65| () Int)
(declare-fun |addition_#t~ret4_67| () Int)
(declare-fun |addition_#res_67| () Int)
(declare-fun |addition_#t~ret4_68| () Int)
(declare-fun |addition_#res_68| () Int)
(declare-fun |addition_#t~ret4_70| () Int)
(declare-fun |addition_#res_70| () Int)
(declare-fun |addition_#t~ret4_71| () Int)
(declare-fun |addition_#res_71| () Int)
(declare-fun |addition_#t~ret4_73| () Int)
(declare-fun |addition_#res_73| () Int)
(declare-fun |addition_#t~ret4_74| () Int)
(declare-fun |addition_#res_74| () Int)
(declare-fun |addition_#t~ret4_76| () Int)
(declare-fun |addition_#res_76| () Int)
(declare-fun |addition_#t~ret4_77| () Int)
(declare-fun |addition_#res_77| () Int)
(declare-fun |addition_#t~ret4_79| () Int)
(declare-fun |addition_#res_79| () Int)
(declare-fun |addition_#t~ret4_80| () Int)
(declare-fun |addition_#res_80| () Int)
(declare-fun |addition_#t~ret4_82| () Int)
(declare-fun |addition_#res_82| () Int)
(declare-fun |addition_#t~ret4_83| () Int)
(declare-fun |addition_#res_83| () Int)
(declare-fun |addition_#t~ret4_85| () Int)
(declare-fun |addition_#res_85| () Int)
(declare-fun |addition_#t~ret4_86| () Int)
(declare-fun |addition_#res_86| () Int)
(declare-fun |addition_#t~ret4_88| () Int)
(declare-fun |addition_#res_88| () Int)
(declare-fun |addition_#t~ret4_89| () Int)
(declare-fun |addition_#res_89| () Int)
(declare-fun |addition_#t~ret4_91| () Int)
(declare-fun |addition_#res_91| () Int)
(declare-fun |addition_#t~ret4_92| () Int)
(declare-fun |addition_#res_92| () Int)
(declare-fun |addition_#t~ret4_94| () Int)
(declare-fun |addition_#res_94| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 14)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (not (= 0 addition_~n_36)) :named ssa_37))
(assert (! (< 0 addition_~n_36) :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_39| (+ addition_~m_36 1)) (= addition_~n_36 (+ 1 |addition_#in~n_39|))) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_39| addition_~n_40) (= |addition_#in~m_39| addition_~m_40)) :named ssa_40))
(assert (! (not (= 0 addition_~n_40)) :named ssa_41))
(assert (! (< 0 addition_~n_40) :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_43| (+ addition_~m_40 1)) (= addition_~n_40 (+ 1 |addition_#in~n_43|))) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_43| addition_~n_44) (= |addition_#in~m_43| addition_~m_44)) :named ssa_44))
(assert (! (not (= 0 addition_~n_44)) :named ssa_45))
(assert (! (< 0 addition_~n_44) :named ssa_46))
(assert (! true :named ssa_47_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_47| (+ addition_~m_44 1)) (= addition_~n_44 (+ 1 |addition_#in~n_47|))) :named ssa_47_LocVarAssigCall))
(assert (! true :named ssa_47_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_47| addition_~n_48) (= |addition_#in~m_47| addition_~m_48)) :named ssa_48))
(assert (! (not (= 0 addition_~n_48)) :named ssa_49))
(assert (! (< 0 addition_~n_48) :named ssa_50))
(assert (! true :named ssa_51_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_51| (+ addition_~m_48 1)) (= addition_~n_48 (+ 1 |addition_#in~n_51|))) :named ssa_51_LocVarAssigCall))
(assert (! true :named ssa_51_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_51| addition_~n_52) (= |addition_#in~m_51| addition_~m_52)) :named ssa_52))
(assert (! (and (= 0 addition_~n_52) (= |addition_#res_53| addition_~m_52)) :named ssa_53))
(assert (! true :named ssa_54))
(assert (! (= |addition_#res_53| |addition_#t~ret4_55|) :named ssa_55_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_55|)) (<= |addition_#t~ret4_55| 9223372036854775807) (= |addition_#res_56| |addition_#t~ret4_55|)) :named ssa_56))
(assert (! true :named ssa_57))
(assert (! (= |addition_#res_56| |addition_#t~ret4_58|) :named ssa_58_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_58|)) (<= |addition_#t~ret4_58| 9223372036854775807) (= |addition_#res_59| |addition_#t~ret4_58|)) :named ssa_59))
(assert (! true :named ssa_60))
(assert (! (= |addition_#res_59| |addition_#t~ret4_61|) :named ssa_61_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_61|)) (<= |addition_#t~ret4_61| 9223372036854775807) (= |addition_#res_62| |addition_#t~ret4_61|)) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! (= |addition_#res_62| |addition_#t~ret4_64|) :named ssa_64_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_64|)) (<= |addition_#t~ret4_64| 9223372036854775807) (= |addition_#res_65| |addition_#t~ret4_64|)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! (= |addition_#res_65| |addition_#t~ret4_67|) :named ssa_67_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_67|)) (<= |addition_#t~ret4_67| 9223372036854775807) (= |addition_#res_68| |addition_#t~ret4_67|)) :named ssa_68))
(assert (! true :named ssa_69))
(assert (! (= |addition_#res_68| |addition_#t~ret4_70|) :named ssa_70_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_70|)) (<= |addition_#t~ret4_70| 9223372036854775807) (= |addition_#res_71| |addition_#t~ret4_70|)) :named ssa_71))
(assert (! true :named ssa_72))
(assert (! (= |addition_#res_71| |addition_#t~ret4_73|) :named ssa_73_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_73|)) (<= |addition_#t~ret4_73| 9223372036854775807) (= |addition_#res_74| |addition_#t~ret4_73|)) :named ssa_74))
(assert (! true :named ssa_75))
(assert (! (= |addition_#res_74| |addition_#t~ret4_76|) :named ssa_76_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_76|)) (<= |addition_#t~ret4_76| 9223372036854775807) (= |addition_#res_77| |addition_#t~ret4_76|)) :named ssa_77))
(assert (! true :named ssa_78))
(assert (! (= |addition_#res_77| |addition_#t~ret4_79|) :named ssa_79_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_79|)) (<= |addition_#t~ret4_79| 9223372036854775807) (= |addition_#res_80| |addition_#t~ret4_79|)) :named ssa_80))
(assert (! true :named ssa_81))
(assert (! (= |addition_#res_80| |addition_#t~ret4_82|) :named ssa_82_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_82|)) (<= |addition_#t~ret4_82| 9223372036854775807) (= |addition_#res_83| |addition_#t~ret4_82|)) :named ssa_83))
(assert (! true :named ssa_84))
(assert (! (= |addition_#res_83| |addition_#t~ret4_85|) :named ssa_85_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_85|)) (<= |addition_#t~ret4_85| 9223372036854775807) (= |addition_#res_86| |addition_#t~ret4_85|)) :named ssa_86))
(assert (! true :named ssa_87))
(assert (! (= |addition_#res_86| |addition_#t~ret4_88|) :named ssa_88_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_88|)) (<= |addition_#t~ret4_88| 9223372036854775807) (= |addition_#res_89| |addition_#t~ret4_88|)) :named ssa_89))
(assert (! true :named ssa_90))
(assert (! (= |addition_#res_89| |addition_#t~ret4_91|) :named ssa_91_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_91|)) (<= |addition_#t~ret4_91| 9223372036854775807) (= |addition_#res_92| |addition_#t~ret4_91|)) :named ssa_92))
(assert (! true :named ssa_93))
(assert (! (= |addition_#res_92| |addition_#t~ret4_94|) :named ssa_94_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_75 ssa_77 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_47_GlobVarAssigCall ssa_43_OldVarAssigCall ssa_60 ssa_35_LocVarAssigCall ssa_55_return ssa_81 ssa_68 ssa_84 ssa_44 ssa_16 ssa_57 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_74 ssa_40 ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_46 ssa_35_GlobVarAssigCall ssa_89 ssa_39_OldVarAssigCall ssa_90 ssa_25 ssa_47_OldVarAssigCall ssa_53 ssa_39_GlobVarAssigCall ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_51_OldVarAssigCall ssa_51_GlobVarAssigCall ssa_86 ssa_88_return ssa_67_return ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_83 ssa_70_return ssa_87 ssa_59 ssa_62 ssa_23_LocVarAssigCall ssa_61_return ssa_73_return ssa_37 ssa_72 ssa_31_OldVarAssigCall ssa_38 ssa_43_GlobVarAssigCall ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_82_return ssa_32 ssa_50 ssa_51_LocVarAssigCall ssa_31_GlobVarAssigCall ssa_19_LocVarAssigCall ssa_65 ssa_64_return ssa_48 ssa_27_OldVarAssigCall ssa_28 ssa_54 ssa_4 ssa_22 ssa_36 ssa_80 ssa_49 ssa_29 ssa_63 ssa_23_GlobVarAssigCall ssa_21 ssa_78 ssa_11_GlobVarAssigCall ssa_85_return ssa_52 ssa_18 ssa_30 ssa_66 ssa_69 ssa_17 ssa_56 ssa_47_LocVarAssigCall ssa_33 ssa_7_GlobVarAssigCall ssa_76_return ssa_35_OldVarAssigCall ssa_79_return ssa_39_LocVarAssigCall ssa_43_LocVarAssigCall ssa_27_LocVarAssigCall ssa_15_OldVarAssigCall ssa_58_return ssa_41 ssa_42 ssa_71 ssa_91_return ssa_24) ssa_92 ssa_93 (and ssa_-2_PendingContext ssa_94_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#in~m_39| () Int)
(declare-fun addition_~n_39 () Int)
(declare-fun |addition_#in~n_39| () Int)
(declare-fun addition_~m_39 () Int)
(declare-fun addition_~n_40 () Int)
(declare-fun addition_~m_40 () Int)
(declare-fun |addition_#in~m_43| () Int)
(declare-fun addition_~n_43 () Int)
(declare-fun |addition_#in~n_43| () Int)
(declare-fun addition_~m_43 () Int)
(declare-fun addition_~n_44 () Int)
(declare-fun addition_~m_44 () Int)
(declare-fun |addition_#in~m_47| () Int)
(declare-fun addition_~n_47 () Int)
(declare-fun |addition_#in~n_47| () Int)
(declare-fun addition_~m_47 () Int)
(declare-fun addition_~n_48 () Int)
(declare-fun addition_~m_48 () Int)
(declare-fun |addition_#res_49| () Int)
(declare-fun addition_~n_49 () Int)
(declare-fun addition_~m_49 () Int)
(declare-fun |addition_#t~ret4_51| () Int)
(declare-fun |addition_#res_51| () Int)
(declare-fun |addition_#t~ret4_52| () Int)
(declare-fun |addition_#res_52| () Int)
(declare-fun |addition_#t~ret4_54| () Int)
(declare-fun |addition_#res_54| () Int)
(declare-fun |addition_#t~ret4_55| () Int)
(declare-fun |addition_#res_55| () Int)
(declare-fun |addition_#t~ret4_57| () Int)
(declare-fun |addition_#res_57| () Int)
(declare-fun |addition_#t~ret4_58| () Int)
(declare-fun |addition_#res_58| () Int)
(declare-fun |addition_#t~ret4_60| () Int)
(declare-fun |addition_#res_60| () Int)
(declare-fun |addition_#t~ret4_61| () Int)
(declare-fun |addition_#res_61| () Int)
(declare-fun |addition_#t~ret4_63| () Int)
(declare-fun |addition_#res_63| () Int)
(declare-fun |addition_#t~ret4_64| () Int)
(declare-fun |addition_#res_64| () Int)
(declare-fun |addition_#t~ret4_66| () Int)
(declare-fun |addition_#res_66| () Int)
(declare-fun |addition_#t~ret4_67| () Int)
(declare-fun |addition_#res_67| () Int)
(declare-fun |addition_#t~ret4_69| () Int)
(declare-fun |addition_#res_69| () Int)
(declare-fun |addition_#t~ret4_70| () Int)
(declare-fun |addition_#res_70| () Int)
(declare-fun |addition_#t~ret4_72| () Int)
(declare-fun |addition_#res_72| () Int)
(declare-fun |addition_#t~ret4_73| () Int)
(declare-fun |addition_#res_73| () Int)
(declare-fun |addition_#t~ret4_75| () Int)
(declare-fun |addition_#res_75| () Int)
(declare-fun |addition_#t~ret4_76| () Int)
(declare-fun |addition_#res_76| () Int)
(declare-fun |addition_#t~ret4_78| () Int)
(declare-fun |addition_#res_78| () Int)
(declare-fun |addition_#t~ret4_79| () Int)
(declare-fun |addition_#res_79| () Int)
(declare-fun |addition_#t~ret4_81| () Int)
(declare-fun |addition_#res_81| () Int)
(declare-fun |addition_#t~ret4_82| () Int)
(declare-fun |addition_#res_82| () Int)
(declare-fun |addition_#t~ret4_84| () Int)
(declare-fun |addition_#res_84| () Int)
(declare-fun |addition_#t~ret4_85| () Int)
(declare-fun |addition_#res_85| () Int)
(declare-fun |addition_#t~ret4_87| () Int)
(declare-fun |addition_#res_87| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 13)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (not (= 0 addition_~n_36)) :named ssa_37))
(assert (! (< 0 addition_~n_36) :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_39| (+ addition_~m_36 1)) (= addition_~n_36 (+ 1 |addition_#in~n_39|))) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_39| addition_~n_40) (= |addition_#in~m_39| addition_~m_40)) :named ssa_40))
(assert (! (not (= 0 addition_~n_40)) :named ssa_41))
(assert (! (< 0 addition_~n_40) :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_43| (+ addition_~m_40 1)) (= addition_~n_40 (+ 1 |addition_#in~n_43|))) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_43| addition_~n_44) (= |addition_#in~m_43| addition_~m_44)) :named ssa_44))
(assert (! (not (= 0 addition_~n_44)) :named ssa_45))
(assert (! (< 0 addition_~n_44) :named ssa_46))
(assert (! true :named ssa_47_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_47| (+ addition_~m_44 1)) (= addition_~n_44 (+ 1 |addition_#in~n_47|))) :named ssa_47_LocVarAssigCall))
(assert (! true :named ssa_47_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_47| addition_~n_48) (= |addition_#in~m_47| addition_~m_48)) :named ssa_48))
(assert (! (and (= 0 addition_~n_48) (= |addition_#res_49| addition_~m_48)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! (= |addition_#res_49| |addition_#t~ret4_51|) :named ssa_51_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_51|)) (<= |addition_#t~ret4_51| 9223372036854775807) (= |addition_#res_52| |addition_#t~ret4_51|)) :named ssa_52))
(assert (! true :named ssa_53))
(assert (! (= |addition_#res_52| |addition_#t~ret4_54|) :named ssa_54_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_54|)) (<= |addition_#t~ret4_54| 9223372036854775807) (= |addition_#res_55| |addition_#t~ret4_54|)) :named ssa_55))
(assert (! true :named ssa_56))
(assert (! (= |addition_#res_55| |addition_#t~ret4_57|) :named ssa_57_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_57|)) (<= |addition_#t~ret4_57| 9223372036854775807) (= |addition_#res_58| |addition_#t~ret4_57|)) :named ssa_58))
(assert (! true :named ssa_59))
(assert (! (= |addition_#res_58| |addition_#t~ret4_60|) :named ssa_60_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_60|)) (<= |addition_#t~ret4_60| 9223372036854775807) (= |addition_#res_61| |addition_#t~ret4_60|)) :named ssa_61))
(assert (! true :named ssa_62))
(assert (! (= |addition_#res_61| |addition_#t~ret4_63|) :named ssa_63_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_63|)) (<= |addition_#t~ret4_63| 9223372036854775807) (= |addition_#res_64| |addition_#t~ret4_63|)) :named ssa_64))
(assert (! true :named ssa_65))
(assert (! (= |addition_#res_64| |addition_#t~ret4_66|) :named ssa_66_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_66|)) (<= |addition_#t~ret4_66| 9223372036854775807) (= |addition_#res_67| |addition_#t~ret4_66|)) :named ssa_67))
(assert (! true :named ssa_68))
(assert (! (= |addition_#res_67| |addition_#t~ret4_69|) :named ssa_69_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_69|)) (<= |addition_#t~ret4_69| 9223372036854775807) (= |addition_#res_70| |addition_#t~ret4_69|)) :named ssa_70))
(assert (! true :named ssa_71))
(assert (! (= |addition_#res_70| |addition_#t~ret4_72|) :named ssa_72_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_72|)) (<= |addition_#t~ret4_72| 9223372036854775807) (= |addition_#res_73| |addition_#t~ret4_72|)) :named ssa_73))
(assert (! true :named ssa_74))
(assert (! (= |addition_#res_73| |addition_#t~ret4_75|) :named ssa_75_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_75|)) (<= |addition_#t~ret4_75| 9223372036854775807) (= |addition_#res_76| |addition_#t~ret4_75|)) :named ssa_76))
(assert (! true :named ssa_77))
(assert (! (= |addition_#res_76| |addition_#t~ret4_78|) :named ssa_78_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_78|)) (<= |addition_#t~ret4_78| 9223372036854775807) (= |addition_#res_79| |addition_#t~ret4_78|)) :named ssa_79))
(assert (! true :named ssa_80))
(assert (! (= |addition_#res_79| |addition_#t~ret4_81|) :named ssa_81_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_81|)) (<= |addition_#t~ret4_81| 9223372036854775807) (= |addition_#res_82| |addition_#t~ret4_81|)) :named ssa_82))
(assert (! true :named ssa_83))
(assert (! (= |addition_#res_82| |addition_#t~ret4_84|) :named ssa_84_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_84|)) (<= |addition_#t~ret4_84| 9223372036854775807) (= |addition_#res_85| |addition_#t~ret4_84|)) :named ssa_85))
(assert (! true :named ssa_86))
(assert (! (= |addition_#res_85| |addition_#t~ret4_87|) :named ssa_87_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_77 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_47_GlobVarAssigCall ssa_64 ssa_43_OldVarAssigCall ssa_35_LocVarAssigCall ssa_76 ssa_68 ssa_44 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_55 ssa_67 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_74 ssa_40 ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_63_return ssa_46 ssa_51_return ssa_35_GlobVarAssigCall ssa_39_OldVarAssigCall ssa_25 ssa_47_OldVarAssigCall ssa_53 ssa_39_GlobVarAssigCall ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_82 ssa_69_return ssa_19_OldVarAssigCall ssa_57_return ssa_58 ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_83 ssa_61 ssa_59 ssa_62 ssa_54_return ssa_23_LocVarAssigCall ssa_37 ssa_31_OldVarAssigCall ssa_38 ssa_79 ssa_43_GlobVarAssigCall ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_50 ssa_31_GlobVarAssigCall ssa_60_return ssa_19_LocVarAssigCall ssa_65 ssa_72_return ssa_81_return ssa_48 ssa_27_OldVarAssigCall ssa_66_return ssa_84_return ssa_28 ssa_4 ssa_22 ssa_36 ssa_80 ssa_49 ssa_29 ssa_23_GlobVarAssigCall ssa_21 ssa_78_return ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_30 ssa_70 ssa_17 ssa_56 ssa_47_LocVarAssigCall ssa_33 ssa_7_GlobVarAssigCall ssa_75_return ssa_35_OldVarAssigCall ssa_39_LocVarAssigCall ssa_43_LocVarAssigCall ssa_27_LocVarAssigCall ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_71 ssa_24 ssa_73) ssa_85 ssa_86 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_87_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#in~m_39| () Int)
(declare-fun addition_~n_39 () Int)
(declare-fun |addition_#in~n_39| () Int)
(declare-fun addition_~m_39 () Int)
(declare-fun addition_~n_40 () Int)
(declare-fun addition_~m_40 () Int)
(declare-fun |addition_#in~m_43| () Int)
(declare-fun addition_~n_43 () Int)
(declare-fun |addition_#in~n_43| () Int)
(declare-fun addition_~m_43 () Int)
(declare-fun addition_~n_44 () Int)
(declare-fun addition_~m_44 () Int)
(declare-fun |addition_#res_45| () Int)
(declare-fun addition_~n_45 () Int)
(declare-fun addition_~m_45 () Int)
(declare-fun |addition_#t~ret4_47| () Int)
(declare-fun |addition_#res_47| () Int)
(declare-fun |addition_#t~ret4_48| () Int)
(declare-fun |addition_#res_48| () Int)
(declare-fun |addition_#t~ret4_50| () Int)
(declare-fun |addition_#res_50| () Int)
(declare-fun |addition_#t~ret4_51| () Int)
(declare-fun |addition_#res_51| () Int)
(declare-fun |addition_#t~ret4_53| () Int)
(declare-fun |addition_#res_53| () Int)
(declare-fun |addition_#t~ret4_54| () Int)
(declare-fun |addition_#res_54| () Int)
(declare-fun |addition_#t~ret4_56| () Int)
(declare-fun |addition_#res_56| () Int)
(declare-fun |addition_#t~ret4_57| () Int)
(declare-fun |addition_#res_57| () Int)
(declare-fun |addition_#t~ret4_59| () Int)
(declare-fun |addition_#res_59| () Int)
(declare-fun |addition_#t~ret4_60| () Int)
(declare-fun |addition_#res_60| () Int)
(declare-fun |addition_#t~ret4_62| () Int)
(declare-fun |addition_#res_62| () Int)
(declare-fun |addition_#t~ret4_63| () Int)
(declare-fun |addition_#res_63| () Int)
(declare-fun |addition_#t~ret4_65| () Int)
(declare-fun |addition_#res_65| () Int)
(declare-fun |addition_#t~ret4_66| () Int)
(declare-fun |addition_#res_66| () Int)
(declare-fun |addition_#t~ret4_68| () Int)
(declare-fun |addition_#res_68| () Int)
(declare-fun |addition_#t~ret4_69| () Int)
(declare-fun |addition_#res_69| () Int)
(declare-fun |addition_#t~ret4_71| () Int)
(declare-fun |addition_#res_71| () Int)
(declare-fun |addition_#t~ret4_72| () Int)
(declare-fun |addition_#res_72| () Int)
(declare-fun |addition_#t~ret4_74| () Int)
(declare-fun |addition_#res_74| () Int)
(declare-fun |addition_#t~ret4_75| () Int)
(declare-fun |addition_#res_75| () Int)
(declare-fun |addition_#t~ret4_77| () Int)
(declare-fun |addition_#res_77| () Int)
(declare-fun |addition_#t~ret4_78| () Int)
(declare-fun |addition_#res_78| () Int)
(declare-fun |addition_#t~ret4_80| () Int)
(declare-fun |addition_#res_80| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 12)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (not (= 0 addition_~n_36)) :named ssa_37))
(assert (! (< 0 addition_~n_36) :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_39| (+ addition_~m_36 1)) (= addition_~n_36 (+ 1 |addition_#in~n_39|))) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_39| addition_~n_40) (= |addition_#in~m_39| addition_~m_40)) :named ssa_40))
(assert (! (not (= 0 addition_~n_40)) :named ssa_41))
(assert (! (< 0 addition_~n_40) :named ssa_42))
(assert (! true :named ssa_43_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_43| (+ addition_~m_40 1)) (= addition_~n_40 (+ 1 |addition_#in~n_43|))) :named ssa_43_LocVarAssigCall))
(assert (! true :named ssa_43_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_43| addition_~n_44) (= |addition_#in~m_43| addition_~m_44)) :named ssa_44))
(assert (! (and (= 0 addition_~n_44) (= |addition_#res_45| addition_~m_44)) :named ssa_45))
(assert (! true :named ssa_46))
(assert (! (= |addition_#res_45| |addition_#t~ret4_47|) :named ssa_47_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_47|)) (<= |addition_#t~ret4_47| 9223372036854775807) (= |addition_#res_48| |addition_#t~ret4_47|)) :named ssa_48))
(assert (! true :named ssa_49))
(assert (! (= |addition_#res_48| |addition_#t~ret4_50|) :named ssa_50_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_50|)) (<= |addition_#t~ret4_50| 9223372036854775807) (= |addition_#res_51| |addition_#t~ret4_50|)) :named ssa_51))
(assert (! true :named ssa_52))
(assert (! (= |addition_#res_51| |addition_#t~ret4_53|) :named ssa_53_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_53|)) (<= |addition_#t~ret4_53| 9223372036854775807) (= |addition_#res_54| |addition_#t~ret4_53|)) :named ssa_54))
(assert (! true :named ssa_55))
(assert (! (= |addition_#res_54| |addition_#t~ret4_56|) :named ssa_56_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_56|)) (<= |addition_#t~ret4_56| 9223372036854775807) (= |addition_#res_57| |addition_#t~ret4_56|)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! (= |addition_#res_57| |addition_#t~ret4_59|) :named ssa_59_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_59|)) (<= |addition_#t~ret4_59| 9223372036854775807) (= |addition_#res_60| |addition_#t~ret4_59|)) :named ssa_60))
(assert (! true :named ssa_61))
(assert (! (= |addition_#res_60| |addition_#t~ret4_62|) :named ssa_62_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_62|)) (<= |addition_#t~ret4_62| 9223372036854775807) (= |addition_#res_63| |addition_#t~ret4_62|)) :named ssa_63))
(assert (! true :named ssa_64))
(assert (! (= |addition_#res_63| |addition_#t~ret4_65|) :named ssa_65_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_65|)) (<= |addition_#t~ret4_65| 9223372036854775807) (= |addition_#res_66| |addition_#t~ret4_65|)) :named ssa_66))
(assert (! true :named ssa_67))
(assert (! (= |addition_#res_66| |addition_#t~ret4_68|) :named ssa_68_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_68|)) (<= |addition_#t~ret4_68| 9223372036854775807) (= |addition_#res_69| |addition_#t~ret4_68|)) :named ssa_69))
(assert (! true :named ssa_70))
(assert (! (= |addition_#res_69| |addition_#t~ret4_71|) :named ssa_71_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_71|)) (<= |addition_#t~ret4_71| 9223372036854775807) (= |addition_#res_72| |addition_#t~ret4_71|)) :named ssa_72))
(assert (! true :named ssa_73))
(assert (! (= |addition_#res_72| |addition_#t~ret4_74|) :named ssa_74_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_74|)) (<= |addition_#t~ret4_74| 9223372036854775807) (= |addition_#res_75| |addition_#t~ret4_74|)) :named ssa_75))
(assert (! true :named ssa_76))
(assert (! (= |addition_#res_75| |addition_#t~ret4_77|) :named ssa_77_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_77|)) (<= |addition_#t~ret4_77| 9223372036854775807) (= |addition_#res_78| |addition_#t~ret4_77|)) :named ssa_78))
(assert (! true :named ssa_79))
(assert (! (= |addition_#res_78| |addition_#t~ret4_80|) :named ssa_80_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_75 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_64 ssa_43_OldVarAssigCall ssa_60 ssa_35_LocVarAssigCall ssa_76 ssa_44 ssa_16 ssa_57 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_55 ssa_67 ssa_3_LocVarAssigCall ssa_34 ssa_47_return ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_40 ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_46 ssa_35_GlobVarAssigCall ssa_59_return ssa_39_OldVarAssigCall ssa_25 ssa_50_return ssa_39_GlobVarAssigCall ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_19_OldVarAssigCall ssa_58 ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_53_return ssa_61 ssa_23_LocVarAssigCall ssa_37 ssa_72 ssa_31_OldVarAssigCall ssa_38 ssa_74_return ssa_43_GlobVarAssigCall ssa_12 ssa_5 ssa_56_return ssa_11_OldVarAssigCall ssa_32 ssa_31_GlobVarAssigCall ssa_71_return ssa_19_LocVarAssigCall ssa_48 ssa_27_OldVarAssigCall ssa_28 ssa_54 ssa_65_return ssa_4 ssa_22 ssa_51 ssa_36 ssa_49 ssa_29 ssa_63 ssa_68_return ssa_23_GlobVarAssigCall ssa_21 ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_30 ssa_70 ssa_66 ssa_69 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_35_OldVarAssigCall ssa_39_LocVarAssigCall ssa_43_LocVarAssigCall ssa_27_LocVarAssigCall ssa_77_return ssa_62_return ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_24 ssa_73) ssa_78 ssa_79 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_80_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#in~m_39| () Int)
(declare-fun addition_~n_39 () Int)
(declare-fun |addition_#in~n_39| () Int)
(declare-fun addition_~m_39 () Int)
(declare-fun addition_~n_40 () Int)
(declare-fun addition_~m_40 () Int)
(declare-fun |addition_#res_41| () Int)
(declare-fun addition_~n_41 () Int)
(declare-fun addition_~m_41 () Int)
(declare-fun |addition_#t~ret4_43| () Int)
(declare-fun |addition_#res_43| () Int)
(declare-fun |addition_#t~ret4_44| () Int)
(declare-fun |addition_#res_44| () Int)
(declare-fun |addition_#t~ret4_46| () Int)
(declare-fun |addition_#res_46| () Int)
(declare-fun |addition_#t~ret4_47| () Int)
(declare-fun |addition_#res_47| () Int)
(declare-fun |addition_#t~ret4_49| () Int)
(declare-fun |addition_#res_49| () Int)
(declare-fun |addition_#t~ret4_50| () Int)
(declare-fun |addition_#res_50| () Int)
(declare-fun |addition_#t~ret4_52| () Int)
(declare-fun |addition_#res_52| () Int)
(declare-fun |addition_#t~ret4_53| () Int)
(declare-fun |addition_#res_53| () Int)
(declare-fun |addition_#t~ret4_55| () Int)
(declare-fun |addition_#res_55| () Int)
(declare-fun |addition_#t~ret4_56| () Int)
(declare-fun |addition_#res_56| () Int)
(declare-fun |addition_#t~ret4_58| () Int)
(declare-fun |addition_#res_58| () Int)
(declare-fun |addition_#t~ret4_59| () Int)
(declare-fun |addition_#res_59| () Int)
(declare-fun |addition_#t~ret4_61| () Int)
(declare-fun |addition_#res_61| () Int)
(declare-fun |addition_#t~ret4_62| () Int)
(declare-fun |addition_#res_62| () Int)
(declare-fun |addition_#t~ret4_64| () Int)
(declare-fun |addition_#res_64| () Int)
(declare-fun |addition_#t~ret4_65| () Int)
(declare-fun |addition_#res_65| () Int)
(declare-fun |addition_#t~ret4_67| () Int)
(declare-fun |addition_#res_67| () Int)
(declare-fun |addition_#t~ret4_68| () Int)
(declare-fun |addition_#res_68| () Int)
(declare-fun |addition_#t~ret4_70| () Int)
(declare-fun |addition_#res_70| () Int)
(declare-fun |addition_#t~ret4_71| () Int)
(declare-fun |addition_#res_71| () Int)
(declare-fun |addition_#t~ret4_73| () Int)
(declare-fun |addition_#res_73| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 11)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (not (= 0 addition_~n_36)) :named ssa_37))
(assert (! (< 0 addition_~n_36) :named ssa_38))
(assert (! true :named ssa_39_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_39| (+ addition_~m_36 1)) (= addition_~n_36 (+ 1 |addition_#in~n_39|))) :named ssa_39_LocVarAssigCall))
(assert (! true :named ssa_39_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_39| addition_~n_40) (= |addition_#in~m_39| addition_~m_40)) :named ssa_40))
(assert (! (and (= 0 addition_~n_40) (= |addition_#res_41| addition_~m_40)) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! (= |addition_#res_41| |addition_#t~ret4_43|) :named ssa_43_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_43|)) (<= |addition_#t~ret4_43| 9223372036854775807) (= |addition_#res_44| |addition_#t~ret4_43|)) :named ssa_44))
(assert (! true :named ssa_45))
(assert (! (= |addition_#res_44| |addition_#t~ret4_46|) :named ssa_46_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_46|)) (<= |addition_#t~ret4_46| 9223372036854775807) (= |addition_#res_47| |addition_#t~ret4_46|)) :named ssa_47))
(assert (! true :named ssa_48))
(assert (! (= |addition_#res_47| |addition_#t~ret4_49|) :named ssa_49_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_49|)) (<= |addition_#t~ret4_49| 9223372036854775807) (= |addition_#res_50| |addition_#t~ret4_49|)) :named ssa_50))
(assert (! true :named ssa_51))
(assert (! (= |addition_#res_50| |addition_#t~ret4_52|) :named ssa_52_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_52|)) (<= |addition_#t~ret4_52| 9223372036854775807) (= |addition_#res_53| |addition_#t~ret4_52|)) :named ssa_53))
(assert (! true :named ssa_54))
(assert (! (= |addition_#res_53| |addition_#t~ret4_55|) :named ssa_55_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_55|)) (<= |addition_#t~ret4_55| 9223372036854775807) (= |addition_#res_56| |addition_#t~ret4_55|)) :named ssa_56))
(assert (! true :named ssa_57))
(assert (! (= |addition_#res_56| |addition_#t~ret4_58|) :named ssa_58_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_58|)) (<= |addition_#t~ret4_58| 9223372036854775807) (= |addition_#res_59| |addition_#t~ret4_58|)) :named ssa_59))
(assert (! true :named ssa_60))
(assert (! (= |addition_#res_59| |addition_#t~ret4_61|) :named ssa_61_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_61|)) (<= |addition_#t~ret4_61| 9223372036854775807) (= |addition_#res_62| |addition_#t~ret4_61|)) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! (= |addition_#res_62| |addition_#t~ret4_64|) :named ssa_64_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_64|)) (<= |addition_#t~ret4_64| 9223372036854775807) (= |addition_#res_65| |addition_#t~ret4_64|)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! (= |addition_#res_65| |addition_#t~ret4_67|) :named ssa_67_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_67|)) (<= |addition_#t~ret4_67| 9223372036854775807) (= |addition_#res_68| |addition_#t~ret4_67|)) :named ssa_68))
(assert (! true :named ssa_69))
(assert (! (= |addition_#res_68| |addition_#t~ret4_70|) :named ssa_70_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_70|)) (<= |addition_#t~ret4_70| 9223372036854775807) (= |addition_#res_71| |addition_#t~ret4_70|)) :named ssa_71))
(assert (! true :named ssa_72))
(assert (! (= |addition_#res_71| |addition_#t~ret4_73|) :named ssa_73_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_60 ssa_35_LocVarAssigCall ssa_55_return ssa_68 ssa_44 ssa_16 ssa_57 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_40 ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_35_GlobVarAssigCall ssa_47 ssa_39_OldVarAssigCall ssa_25 ssa_53 ssa_39_GlobVarAssigCall ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_67_return ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_70_return ssa_59 ssa_62 ssa_23_LocVarAssigCall ssa_61_return ssa_37 ssa_31_OldVarAssigCall ssa_43_return ssa_38 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_50 ssa_31_GlobVarAssigCall ssa_19_LocVarAssigCall ssa_65 ssa_64_return ssa_48 ssa_27_OldVarAssigCall ssa_49_return ssa_28 ssa_54 ssa_4 ssa_22 ssa_51 ssa_36 ssa_29 ssa_63 ssa_23_GlobVarAssigCall ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_30 ssa_66 ssa_69 ssa_17 ssa_56 ssa_33 ssa_7_GlobVarAssigCall ssa_35_OldVarAssigCall ssa_39_LocVarAssigCall ssa_27_LocVarAssigCall ssa_15_OldVarAssigCall ssa_58_return ssa_41 ssa_42 ssa_46_return ssa_24 ssa_52_return) ssa_71 ssa_72 (and ssa_-2_PendingContext ssa_73_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#in~m_35| () Int)
(declare-fun addition_~n_35 () Int)
(declare-fun |addition_#in~n_35| () Int)
(declare-fun addition_~m_35 () Int)
(declare-fun addition_~n_36 () Int)
(declare-fun addition_~m_36 () Int)
(declare-fun |addition_#res_37| () Int)
(declare-fun addition_~n_37 () Int)
(declare-fun addition_~m_37 () Int)
(declare-fun |addition_#t~ret4_39| () Int)
(declare-fun |addition_#res_39| () Int)
(declare-fun |addition_#t~ret4_40| () Int)
(declare-fun |addition_#res_40| () Int)
(declare-fun |addition_#t~ret4_42| () Int)
(declare-fun |addition_#res_42| () Int)
(declare-fun |addition_#t~ret4_43| () Int)
(declare-fun |addition_#res_43| () Int)
(declare-fun |addition_#t~ret4_45| () Int)
(declare-fun |addition_#res_45| () Int)
(declare-fun |addition_#t~ret4_46| () Int)
(declare-fun |addition_#res_46| () Int)
(declare-fun |addition_#t~ret4_48| () Int)
(declare-fun |addition_#res_48| () Int)
(declare-fun |addition_#t~ret4_49| () Int)
(declare-fun |addition_#res_49| () Int)
(declare-fun |addition_#t~ret4_51| () Int)
(declare-fun |addition_#res_51| () Int)
(declare-fun |addition_#t~ret4_52| () Int)
(declare-fun |addition_#res_52| () Int)
(declare-fun |addition_#t~ret4_54| () Int)
(declare-fun |addition_#res_54| () Int)
(declare-fun |addition_#t~ret4_55| () Int)
(declare-fun |addition_#res_55| () Int)
(declare-fun |addition_#t~ret4_57| () Int)
(declare-fun |addition_#res_57| () Int)
(declare-fun |addition_#t~ret4_58| () Int)
(declare-fun |addition_#res_58| () Int)
(declare-fun |addition_#t~ret4_60| () Int)
(declare-fun |addition_#res_60| () Int)
(declare-fun |addition_#t~ret4_61| () Int)
(declare-fun |addition_#res_61| () Int)
(declare-fun |addition_#t~ret4_63| () Int)
(declare-fun |addition_#res_63| () Int)
(declare-fun |addition_#t~ret4_64| () Int)
(declare-fun |addition_#res_64| () Int)
(declare-fun |addition_#t~ret4_66| () Int)
(declare-fun |addition_#res_66| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 10)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (not (= 0 addition_~n_32)) :named ssa_33))
(assert (! (< 0 addition_~n_32) :named ssa_34))
(assert (! true :named ssa_35_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_35| (+ addition_~m_32 1)) (= addition_~n_32 (+ 1 |addition_#in~n_35|))) :named ssa_35_LocVarAssigCall))
(assert (! true :named ssa_35_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_35| addition_~n_36) (= |addition_#in~m_35| addition_~m_36)) :named ssa_36))
(assert (! (and (= 0 addition_~n_36) (= |addition_#res_37| addition_~m_36)) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! (= |addition_#res_37| |addition_#t~ret4_39|) :named ssa_39_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_39|)) (<= |addition_#t~ret4_39| 9223372036854775807) (= |addition_#res_40| |addition_#t~ret4_39|)) :named ssa_40))
(assert (! true :named ssa_41))
(assert (! (= |addition_#res_40| |addition_#t~ret4_42|) :named ssa_42_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_42|)) (<= |addition_#t~ret4_42| 9223372036854775807) (= |addition_#res_43| |addition_#t~ret4_42|)) :named ssa_43))
(assert (! true :named ssa_44))
(assert (! (= |addition_#res_43| |addition_#t~ret4_45|) :named ssa_45_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_45|)) (<= |addition_#t~ret4_45| 9223372036854775807) (= |addition_#res_46| |addition_#t~ret4_45|)) :named ssa_46))
(assert (! true :named ssa_47))
(assert (! (= |addition_#res_46| |addition_#t~ret4_48|) :named ssa_48_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_48|)) (<= |addition_#t~ret4_48| 9223372036854775807) (= |addition_#res_49| |addition_#t~ret4_48|)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! (= |addition_#res_49| |addition_#t~ret4_51|) :named ssa_51_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_51|)) (<= |addition_#t~ret4_51| 9223372036854775807) (= |addition_#res_52| |addition_#t~ret4_51|)) :named ssa_52))
(assert (! true :named ssa_53))
(assert (! (= |addition_#res_52| |addition_#t~ret4_54|) :named ssa_54_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_54|)) (<= |addition_#t~ret4_54| 9223372036854775807) (= |addition_#res_55| |addition_#t~ret4_54|)) :named ssa_55))
(assert (! true :named ssa_56))
(assert (! (= |addition_#res_55| |addition_#t~ret4_57|) :named ssa_57_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_57|)) (<= |addition_#t~ret4_57| 9223372036854775807) (= |addition_#res_58| |addition_#t~ret4_57|)) :named ssa_58))
(assert (! true :named ssa_59))
(assert (! (= |addition_#res_58| |addition_#t~ret4_60|) :named ssa_60_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_60|)) (<= |addition_#t~ret4_60| 9223372036854775807) (= |addition_#res_61| |addition_#t~ret4_60|)) :named ssa_61))
(assert (! true :named ssa_62))
(assert (! (= |addition_#res_61| |addition_#t~ret4_63|) :named ssa_63_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_63|)) (<= |addition_#t~ret4_63| 9223372036854775807) (= |addition_#res_64| |addition_#t~ret4_63|)) :named ssa_64))
(assert (! true :named ssa_65))
(assert (! (= |addition_#res_64| |addition_#t~ret4_66|) :named ssa_66_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_35_LocVarAssigCall ssa_44 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_55 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_40 ssa_10 ssa_14 ssa_8 ssa_9 ssa_63_return ssa_46 ssa_51_return ssa_35_GlobVarAssigCall ssa_47 ssa_25 ssa_53 ssa_15_GlobVarAssigCall ssa_39_return ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_19_OldVarAssigCall ssa_45_return ssa_57_return ssa_58 ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_61 ssa_59 ssa_62 ssa_54_return ssa_43 ssa_23_LocVarAssigCall ssa_37 ssa_31_OldVarAssigCall ssa_38 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_50 ssa_31_GlobVarAssigCall ssa_60_return ssa_19_LocVarAssigCall ssa_48_return ssa_27_OldVarAssigCall ssa_28 ssa_4 ssa_22 ssa_36 ssa_49 ssa_29 ssa_42_return ssa_23_GlobVarAssigCall ssa_21 ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_30 ssa_17 ssa_56 ssa_33 ssa_7_GlobVarAssigCall ssa_35_OldVarAssigCall ssa_27_LocVarAssigCall ssa_15_OldVarAssigCall ssa_41 ssa_24) ssa_64 ssa_65 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_66_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#in~m_31| () Int)
(declare-fun addition_~n_31 () Int)
(declare-fun |addition_#in~n_31| () Int)
(declare-fun addition_~m_31 () Int)
(declare-fun addition_~n_32 () Int)
(declare-fun addition_~m_32 () Int)
(declare-fun |addition_#res_33| () Int)
(declare-fun addition_~n_33 () Int)
(declare-fun addition_~m_33 () Int)
(declare-fun |addition_#t~ret4_35| () Int)
(declare-fun |addition_#res_35| () Int)
(declare-fun |addition_#t~ret4_36| () Int)
(declare-fun |addition_#res_36| () Int)
(declare-fun |addition_#t~ret4_38| () Int)
(declare-fun |addition_#res_38| () Int)
(declare-fun |addition_#t~ret4_39| () Int)
(declare-fun |addition_#res_39| () Int)
(declare-fun |addition_#t~ret4_41| () Int)
(declare-fun |addition_#res_41| () Int)
(declare-fun |addition_#t~ret4_42| () Int)
(declare-fun |addition_#res_42| () Int)
(declare-fun |addition_#t~ret4_44| () Int)
(declare-fun |addition_#res_44| () Int)
(declare-fun |addition_#t~ret4_45| () Int)
(declare-fun |addition_#res_45| () Int)
(declare-fun |addition_#t~ret4_47| () Int)
(declare-fun |addition_#res_47| () Int)
(declare-fun |addition_#t~ret4_48| () Int)
(declare-fun |addition_#res_48| () Int)
(declare-fun |addition_#t~ret4_50| () Int)
(declare-fun |addition_#res_50| () Int)
(declare-fun |addition_#t~ret4_51| () Int)
(declare-fun |addition_#res_51| () Int)
(declare-fun |addition_#t~ret4_53| () Int)
(declare-fun |addition_#res_53| () Int)
(declare-fun |addition_#t~ret4_54| () Int)
(declare-fun |addition_#res_54| () Int)
(declare-fun |addition_#t~ret4_56| () Int)
(declare-fun |addition_#res_56| () Int)
(declare-fun |addition_#t~ret4_57| () Int)
(declare-fun |addition_#res_57| () Int)
(declare-fun |addition_#t~ret4_59| () Int)
(declare-fun |addition_#res_59| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 9)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (not (= 0 addition_~n_28)) :named ssa_29))
(assert (! (< 0 addition_~n_28) :named ssa_30))
(assert (! true :named ssa_31_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_31| (+ addition_~m_28 1)) (= addition_~n_28 (+ 1 |addition_#in~n_31|))) :named ssa_31_LocVarAssigCall))
(assert (! true :named ssa_31_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_31| addition_~n_32) (= |addition_#in~m_31| addition_~m_32)) :named ssa_32))
(assert (! (and (= 0 addition_~n_32) (= |addition_#res_33| addition_~m_32)) :named ssa_33))
(assert (! true :named ssa_34))
(assert (! (= |addition_#res_33| |addition_#t~ret4_35|) :named ssa_35_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_35|)) (<= |addition_#t~ret4_35| 9223372036854775807) (= |addition_#res_36| |addition_#t~ret4_35|)) :named ssa_36))
(assert (! true :named ssa_37))
(assert (! (= |addition_#res_36| |addition_#t~ret4_38|) :named ssa_38_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_38|)) (<= |addition_#t~ret4_38| 9223372036854775807) (= |addition_#res_39| |addition_#t~ret4_38|)) :named ssa_39))
(assert (! true :named ssa_40))
(assert (! (= |addition_#res_39| |addition_#t~ret4_41|) :named ssa_41_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_41|)) (<= |addition_#t~ret4_41| 9223372036854775807) (= |addition_#res_42| |addition_#t~ret4_41|)) :named ssa_42))
(assert (! true :named ssa_43))
(assert (! (= |addition_#res_42| |addition_#t~ret4_44|) :named ssa_44_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_44|)) (<= |addition_#t~ret4_44| 9223372036854775807) (= |addition_#res_45| |addition_#t~ret4_44|)) :named ssa_45))
(assert (! true :named ssa_46))
(assert (! (= |addition_#res_45| |addition_#t~ret4_47|) :named ssa_47_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_47|)) (<= |addition_#t~ret4_47| 9223372036854775807) (= |addition_#res_48| |addition_#t~ret4_47|)) :named ssa_48))
(assert (! true :named ssa_49))
(assert (! (= |addition_#res_48| |addition_#t~ret4_50|) :named ssa_50_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_50|)) (<= |addition_#t~ret4_50| 9223372036854775807) (= |addition_#res_51| |addition_#t~ret4_50|)) :named ssa_51))
(assert (! true :named ssa_52))
(assert (! (= |addition_#res_51| |addition_#t~ret4_53|) :named ssa_53_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_53|)) (<= |addition_#t~ret4_53| 9223372036854775807) (= |addition_#res_54| |addition_#t~ret4_53|)) :named ssa_54))
(assert (! true :named ssa_55))
(assert (! (= |addition_#res_54| |addition_#t~ret4_56|) :named ssa_56_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_56|)) (<= |addition_#t~ret4_56| 9223372036854775807) (= |addition_#res_57| |addition_#t~ret4_56|)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! (= |addition_#res_57| |addition_#t~ret4_59|) :named ssa_59_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_31_LocVarAssigCall ssa_55 ssa_3_LocVarAssigCall ssa_34 ssa_47_return ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_40 ssa_10 ssa_14 ssa_38_return ssa_8 ssa_45 ssa_9 ssa_46 ssa_25 ssa_50_return ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_53_return ssa_39 ssa_43 ssa_23_LocVarAssigCall ssa_37 ssa_31_OldVarAssigCall ssa_12 ssa_5 ssa_56_return ssa_41_return ssa_11_OldVarAssigCall ssa_32 ssa_31_GlobVarAssigCall ssa_19_LocVarAssigCall ssa_48 ssa_27_OldVarAssigCall ssa_28 ssa_54 ssa_4 ssa_22 ssa_51 ssa_36 ssa_49 ssa_35_return ssa_29 ssa_23_GlobVarAssigCall ssa_21 ssa_11_GlobVarAssigCall ssa_52 ssa_18 ssa_30 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_27_LocVarAssigCall ssa_44_return ssa_15_OldVarAssigCall ssa_42 ssa_24) ssa_57 ssa_58 (and ssa_-2_PendingContext ssa_59_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#in~m_27| () Int)
(declare-fun addition_~n_27 () Int)
(declare-fun |addition_#in~n_27| () Int)
(declare-fun addition_~m_27 () Int)
(declare-fun addition_~n_28 () Int)
(declare-fun addition_~m_28 () Int)
(declare-fun |addition_#res_29| () Int)
(declare-fun addition_~n_29 () Int)
(declare-fun addition_~m_29 () Int)
(declare-fun |addition_#t~ret4_31| () Int)
(declare-fun |addition_#res_31| () Int)
(declare-fun |addition_#t~ret4_32| () Int)
(declare-fun |addition_#res_32| () Int)
(declare-fun |addition_#t~ret4_34| () Int)
(declare-fun |addition_#res_34| () Int)
(declare-fun |addition_#t~ret4_35| () Int)
(declare-fun |addition_#res_35| () Int)
(declare-fun |addition_#t~ret4_37| () Int)
(declare-fun |addition_#res_37| () Int)
(declare-fun |addition_#t~ret4_38| () Int)
(declare-fun |addition_#res_38| () Int)
(declare-fun |addition_#t~ret4_40| () Int)
(declare-fun |addition_#res_40| () Int)
(declare-fun |addition_#t~ret4_41| () Int)
(declare-fun |addition_#res_41| () Int)
(declare-fun |addition_#t~ret4_43| () Int)
(declare-fun |addition_#res_43| () Int)
(declare-fun |addition_#t~ret4_44| () Int)
(declare-fun |addition_#res_44| () Int)
(declare-fun |addition_#t~ret4_46| () Int)
(declare-fun |addition_#res_46| () Int)
(declare-fun |addition_#t~ret4_47| () Int)
(declare-fun |addition_#res_47| () Int)
(declare-fun |addition_#t~ret4_49| () Int)
(declare-fun |addition_#res_49| () Int)
(declare-fun |addition_#t~ret4_50| () Int)
(declare-fun |addition_#res_50| () Int)
(declare-fun |addition_#t~ret4_52| () Int)
(declare-fun |addition_#res_52| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 8)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (not (= 0 addition_~n_24)) :named ssa_25))
(assert (! (< 0 addition_~n_24) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_27| (+ addition_~m_24 1)) (= addition_~n_24 (+ 1 |addition_#in~n_27|))) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_27| addition_~n_28) (= |addition_#in~m_27| addition_~m_28)) :named ssa_28))
(assert (! (and (= 0 addition_~n_28) (= |addition_#res_29| addition_~m_28)) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |addition_#res_29| |addition_#t~ret4_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_31|)) (<= |addition_#t~ret4_31| 9223372036854775807) (= |addition_#res_32| |addition_#t~ret4_31|)) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! (= |addition_#res_32| |addition_#t~ret4_34|) :named ssa_34_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_34|)) (<= |addition_#t~ret4_34| 9223372036854775807) (= |addition_#res_35| |addition_#t~ret4_34|)) :named ssa_35))
(assert (! true :named ssa_36))
(assert (! (= |addition_#res_35| |addition_#t~ret4_37|) :named ssa_37_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_37|)) (<= |addition_#t~ret4_37| 9223372036854775807) (= |addition_#res_38| |addition_#t~ret4_37|)) :named ssa_38))
(assert (! true :named ssa_39))
(assert (! (= |addition_#res_38| |addition_#t~ret4_40|) :named ssa_40_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_40|)) (<= |addition_#t~ret4_40| 9223372036854775807) (= |addition_#res_41| |addition_#t~ret4_40|)) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! (= |addition_#res_41| |addition_#t~ret4_43|) :named ssa_43_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_43|)) (<= |addition_#t~ret4_43| 9223372036854775807) (= |addition_#res_44| |addition_#t~ret4_43|)) :named ssa_44))
(assert (! true :named ssa_45))
(assert (! (= |addition_#res_44| |addition_#t~ret4_46|) :named ssa_46_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_46|)) (<= |addition_#t~ret4_46| 9223372036854775807) (= |addition_#res_47| |addition_#t~ret4_46|)) :named ssa_47))
(assert (! true :named ssa_48))
(assert (! (= |addition_#res_47| |addition_#t~ret4_49|) :named ssa_49_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_49|)) (<= |addition_#t~ret4_49| 9223372036854775807) (= |addition_#res_50| |addition_#t~ret4_49|)) :named ssa_50))
(assert (! true :named ssa_51))
(assert (! (= |addition_#res_50| |addition_#t~ret4_52|) :named ssa_52_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_44 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_45 ssa_9 ssa_47 ssa_25 ssa_40_return ssa_34_return ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_31_return ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_39 ssa_23_LocVarAssigCall ssa_43_return ssa_38 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_19_LocVarAssigCall ssa_48 ssa_27_OldVarAssigCall ssa_49_return ssa_28 ssa_4 ssa_22 ssa_36 ssa_29 ssa_23_GlobVarAssigCall ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_37_return ssa_30 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_35 ssa_27_LocVarAssigCall ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_46_return ssa_24) ssa_50 ssa_51 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_52_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#in~m_23| () Int)
(declare-fun addition_~n_23 () Int)
(declare-fun |addition_#in~n_23| () Int)
(declare-fun addition_~m_23 () Int)
(declare-fun addition_~n_24 () Int)
(declare-fun addition_~m_24 () Int)
(declare-fun |addition_#res_25| () Int)
(declare-fun addition_~n_25 () Int)
(declare-fun addition_~m_25 () Int)
(declare-fun |addition_#t~ret4_27| () Int)
(declare-fun |addition_#res_27| () Int)
(declare-fun |addition_#t~ret4_28| () Int)
(declare-fun |addition_#res_28| () Int)
(declare-fun |addition_#t~ret4_30| () Int)
(declare-fun |addition_#res_30| () Int)
(declare-fun |addition_#t~ret4_31| () Int)
(declare-fun |addition_#res_31| () Int)
(declare-fun |addition_#t~ret4_33| () Int)
(declare-fun |addition_#res_33| () Int)
(declare-fun |addition_#t~ret4_34| () Int)
(declare-fun |addition_#res_34| () Int)
(declare-fun |addition_#t~ret4_36| () Int)
(declare-fun |addition_#res_36| () Int)
(declare-fun |addition_#t~ret4_37| () Int)
(declare-fun |addition_#res_37| () Int)
(declare-fun |addition_#t~ret4_39| () Int)
(declare-fun |addition_#res_39| () Int)
(declare-fun |addition_#t~ret4_40| () Int)
(declare-fun |addition_#res_40| () Int)
(declare-fun |addition_#t~ret4_42| () Int)
(declare-fun |addition_#res_42| () Int)
(declare-fun |addition_#t~ret4_43| () Int)
(declare-fun |addition_#res_43| () Int)
(declare-fun |addition_#t~ret4_45| () Int)
(declare-fun |addition_#res_45| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 7)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (not (= 0 addition_~n_20)) :named ssa_21))
(assert (! (< 0 addition_~n_20) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_23| (+ addition_~m_20 1)) (= addition_~n_20 (+ 1 |addition_#in~n_23|))) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_23| addition_~n_24) (= |addition_#in~m_23| addition_~m_24)) :named ssa_24))
(assert (! (and (= 0 addition_~n_24) (= |addition_#res_25| addition_~m_24)) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |addition_#res_25| |addition_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_27|)) (<= |addition_#t~ret4_27| 9223372036854775807) (= |addition_#res_28| |addition_#t~ret4_27|)) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |addition_#res_28| |addition_#t~ret4_30|) :named ssa_30_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_30|)) (<= |addition_#t~ret4_30| 9223372036854775807) (= |addition_#res_31| |addition_#t~ret4_30|)) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |addition_#res_31| |addition_#t~ret4_33|) :named ssa_33_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_33|)) (<= |addition_#t~ret4_33| 9223372036854775807) (= |addition_#res_34| |addition_#t~ret4_33|)) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! (= |addition_#res_34| |addition_#t~ret4_36|) :named ssa_36_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_36|)) (<= |addition_#t~ret4_36| 9223372036854775807) (= |addition_#res_37| |addition_#t~ret4_36|)) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! (= |addition_#res_37| |addition_#t~ret4_39|) :named ssa_39_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_39|)) (<= |addition_#t~ret4_39| 9223372036854775807) (= |addition_#res_40| |addition_#t~ret4_39|)) :named ssa_40))
(assert (! true :named ssa_41))
(assert (! (= |addition_#res_40| |addition_#t~ret4_42|) :named ssa_42_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_42|)) (<= |addition_#t~ret4_42| 9223372036854775807) (= |addition_#res_43| |addition_#t~ret4_42|)) :named ssa_43))
(assert (! true :named ssa_44))
(assert (! (= |addition_#res_43| |addition_#t~ret4_45|) :named ssa_45_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_19_GlobVarAssigCall ssa_31 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_27_return ssa_40 ssa_10 ssa_14 ssa_8 ssa_9 ssa_25 ssa_15_GlobVarAssigCall ssa_39_return ssa_3_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_23_LocVarAssigCall ssa_37 ssa_38 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_19_LocVarAssigCall ssa_28 ssa_4 ssa_22 ssa_29 ssa_42_return ssa_23_GlobVarAssigCall ssa_21 ssa_30_return ssa_11_GlobVarAssigCall ssa_33_return ssa_18 ssa_36_return ssa_17 ssa_7_GlobVarAssigCall ssa_35 ssa_15_OldVarAssigCall ssa_41 ssa_24) ssa_43 ssa_44 (and ssa_-2_PendingContext ssa_45_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#in~m_19| () Int)
(declare-fun addition_~n_19 () Int)
(declare-fun |addition_#in~n_19| () Int)
(declare-fun addition_~m_19 () Int)
(declare-fun addition_~n_20 () Int)
(declare-fun addition_~m_20 () Int)
(declare-fun |addition_#res_21| () Int)
(declare-fun addition_~n_21 () Int)
(declare-fun addition_~m_21 () Int)
(declare-fun |addition_#t~ret4_23| () Int)
(declare-fun |addition_#res_23| () Int)
(declare-fun |addition_#t~ret4_24| () Int)
(declare-fun |addition_#res_24| () Int)
(declare-fun |addition_#t~ret4_26| () Int)
(declare-fun |addition_#res_26| () Int)
(declare-fun |addition_#t~ret4_27| () Int)
(declare-fun |addition_#res_27| () Int)
(declare-fun |addition_#t~ret4_29| () Int)
(declare-fun |addition_#res_29| () Int)
(declare-fun |addition_#t~ret4_30| () Int)
(declare-fun |addition_#res_30| () Int)
(declare-fun |addition_#t~ret4_32| () Int)
(declare-fun |addition_#res_32| () Int)
(declare-fun |addition_#t~ret4_33| () Int)
(declare-fun |addition_#res_33| () Int)
(declare-fun |addition_#t~ret4_35| () Int)
(declare-fun |addition_#res_35| () Int)
(declare-fun |addition_#t~ret4_36| () Int)
(declare-fun |addition_#res_36| () Int)
(declare-fun |addition_#t~ret4_38| () Int)
(declare-fun |addition_#res_38| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 6)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (not (= 0 addition_~n_16)) :named ssa_17))
(assert (! (< 0 addition_~n_16) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_19| (+ addition_~m_16 1)) (= addition_~n_16 (+ 1 |addition_#in~n_19|))) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_19| addition_~n_20) (= |addition_#in~m_19| addition_~m_20)) :named ssa_20))
(assert (! (and (= 0 addition_~n_20) (= |addition_#res_21| addition_~m_20)) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |addition_#res_21| |addition_#t~ret4_23|) :named ssa_23_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_23|)) (<= |addition_#t~ret4_23| 9223372036854775807) (= |addition_#res_24| |addition_#t~ret4_23|)) :named ssa_24))
(assert (! true :named ssa_25))
(assert (! (= |addition_#res_24| |addition_#t~ret4_26|) :named ssa_26_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_26|)) (<= |addition_#t~ret4_26| 9223372036854775807) (= |addition_#res_27| |addition_#t~ret4_26|)) :named ssa_27))
(assert (! true :named ssa_28))
(assert (! (= |addition_#res_27| |addition_#t~ret4_29|) :named ssa_29_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_29|)) (<= |addition_#t~ret4_29| 9223372036854775807) (= |addition_#res_30| |addition_#t~ret4_29|)) :named ssa_30))
(assert (! true :named ssa_31))
(assert (! (= |addition_#res_30| |addition_#t~ret4_32|) :named ssa_32_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_32|)) (<= |addition_#t~ret4_32| 9223372036854775807) (= |addition_#res_33| |addition_#t~ret4_32|)) :named ssa_33))
(assert (! true :named ssa_34))
(assert (! (= |addition_#res_33| |addition_#t~ret4_35|) :named ssa_35_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_35|)) (<= |addition_#t~ret4_35| 9223372036854775807) (= |addition_#res_36| |addition_#t~ret4_35|)) :named ssa_36))
(assert (! true :named ssa_37))
(assert (! (= |addition_#res_36| |addition_#t~ret4_38|) :named ssa_38_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_19_GlobVarAssigCall ssa_31 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_9 ssa_25 ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_26_return ssa_19_OldVarAssigCall ssa_7_OldVarAssigCall ssa_29_return ssa_32_return ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_19_LocVarAssigCall ssa_28 ssa_4 ssa_22 ssa_35_return ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_23_return ssa_30 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_15_OldVarAssigCall ssa_24) ssa_36 ssa_37 (and ssa_38_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#in~m_15| () Int)
(declare-fun addition_~n_15 () Int)
(declare-fun |addition_#in~n_15| () Int)
(declare-fun addition_~m_15 () Int)
(declare-fun addition_~n_16 () Int)
(declare-fun addition_~m_16 () Int)
(declare-fun |addition_#res_17| () Int)
(declare-fun addition_~n_17 () Int)
(declare-fun addition_~m_17 () Int)
(declare-fun |addition_#t~ret4_19| () Int)
(declare-fun |addition_#res_19| () Int)
(declare-fun |addition_#t~ret4_20| () Int)
(declare-fun |addition_#res_20| () Int)
(declare-fun |addition_#t~ret4_22| () Int)
(declare-fun |addition_#res_22| () Int)
(declare-fun |addition_#t~ret4_23| () Int)
(declare-fun |addition_#res_23| () Int)
(declare-fun |addition_#t~ret4_25| () Int)
(declare-fun |addition_#res_25| () Int)
(declare-fun |addition_#t~ret4_26| () Int)
(declare-fun |addition_#res_26| () Int)
(declare-fun |addition_#t~ret4_28| () Int)
(declare-fun |addition_#res_28| () Int)
(declare-fun |addition_#t~ret4_29| () Int)
(declare-fun |addition_#res_29| () Int)
(declare-fun |addition_#t~ret4_31| () Int)
(declare-fun |addition_#res_31| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 5)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (not (= 0 addition_~n_12)) :named ssa_13))
(assert (! (< 0 addition_~n_12) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_15| (+ addition_~m_12 1)) (= addition_~n_12 (+ 1 |addition_#in~n_15|))) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_15| addition_~n_16) (= |addition_#in~m_15| addition_~m_16)) :named ssa_16))
(assert (! (and (= 0 addition_~n_16) (= |addition_#res_17| addition_~m_16)) :named ssa_17))
(assert (! true :named ssa_18))
(assert (! (= |addition_#res_17| |addition_#t~ret4_19|) :named ssa_19_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_19|)) (<= |addition_#t~ret4_19| 9223372036854775807) (= |addition_#res_20| |addition_#t~ret4_19|)) :named ssa_20))
(assert (! true :named ssa_21))
(assert (! (= |addition_#res_20| |addition_#t~ret4_22|) :named ssa_22_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_22|)) (<= |addition_#t~ret4_22| 9223372036854775807) (= |addition_#res_23| |addition_#t~ret4_22|)) :named ssa_23))
(assert (! true :named ssa_24))
(assert (! (= |addition_#res_23| |addition_#t~ret4_25|) :named ssa_25_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_25|)) (<= |addition_#t~ret4_25| 9223372036854775807) (= |addition_#res_26| |addition_#t~ret4_25|)) :named ssa_26))
(assert (! true :named ssa_27))
(assert (! (= |addition_#res_26| |addition_#t~ret4_28|) :named ssa_28_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_28|)) (<= |addition_#t~ret4_28| 9223372036854775807) (= |addition_#res_29| |addition_#t~ret4_28|)) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |addition_#res_29| |addition_#t~ret4_31|) :named ssa_31_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_25_return ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_9 ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_28_return ssa_7_OldVarAssigCall ssa_22_return ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_19_return ssa_4 ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_23 ssa_17 ssa_7_GlobVarAssigCall ssa_15_OldVarAssigCall ssa_24) ssa_29 ssa_30 (and ssa_-2_PendingContext ssa_31_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#in~m_11| () Int)
(declare-fun addition_~n_11 () Int)
(declare-fun |addition_#in~n_11| () Int)
(declare-fun addition_~m_11 () Int)
(declare-fun addition_~n_12 () Int)
(declare-fun addition_~m_12 () Int)
(declare-fun |addition_#res_13| () Int)
(declare-fun addition_~n_13 () Int)
(declare-fun addition_~m_13 () Int)
(declare-fun |addition_#t~ret4_15| () Int)
(declare-fun |addition_#res_15| () Int)
(declare-fun |addition_#t~ret4_16| () Int)
(declare-fun |addition_#res_16| () Int)
(declare-fun |addition_#t~ret4_18| () Int)
(declare-fun |addition_#res_18| () Int)
(declare-fun |addition_#t~ret4_19| () Int)
(declare-fun |addition_#res_19| () Int)
(declare-fun |addition_#t~ret4_21| () Int)
(declare-fun |addition_#res_21| () Int)
(declare-fun |addition_#t~ret4_22| () Int)
(declare-fun |addition_#res_22| () Int)
(declare-fun |addition_#t~ret4_24| () Int)
(declare-fun |addition_#res_24| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 4)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (not (= 0 addition_~n_8)) :named ssa_9))
(assert (! (< 0 addition_~n_8) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_11| (+ addition_~m_8 1)) (= addition_~n_8 (+ 1 |addition_#in~n_11|))) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_11| addition_~n_12) (= |addition_#in~m_11| addition_~m_12)) :named ssa_12))
(assert (! (and (= 0 addition_~n_12) (= |addition_#res_13| addition_~m_12)) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |addition_#res_13| |addition_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_15|)) (<= |addition_#t~ret4_15| 9223372036854775807) (= |addition_#res_16| |addition_#t~ret4_15|)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |addition_#res_16| |addition_#t~ret4_18|) :named ssa_18_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_18|)) (<= |addition_#t~ret4_18| 9223372036854775807) (= |addition_#res_19| |addition_#t~ret4_18|)) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! (= |addition_#res_19| |addition_#t~ret4_21|) :named ssa_21_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_21|)) (<= |addition_#t~ret4_21| 9223372036854775807) (= |addition_#res_22| |addition_#t~ret4_21|)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |addition_#res_22| |addition_#t~ret4_24|) :named ssa_24_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_20 ssa_18_return ssa_16 ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_19 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_4 ssa_11_GlobVarAssigCall ssa_21_return ssa_17 ssa_7_GlobVarAssigCall ssa_15_return) ssa_22 ssa_23 (and ssa_-2_PendingContext ssa_24_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#in~m_7| () Int)
(declare-fun addition_~n_7 () Int)
(declare-fun |addition_#in~n_7| () Int)
(declare-fun addition_~m_7 () Int)
(declare-fun addition_~n_8 () Int)
(declare-fun addition_~m_8 () Int)
(declare-fun |addition_#res_9| () Int)
(declare-fun addition_~n_9 () Int)
(declare-fun addition_~m_9 () Int)
(declare-fun |addition_#t~ret4_11| () Int)
(declare-fun |addition_#res_11| () Int)
(declare-fun |addition_#t~ret4_12| () Int)
(declare-fun |addition_#res_12| () Int)
(declare-fun |addition_#t~ret4_14| () Int)
(declare-fun |addition_#res_14| () Int)
(declare-fun |addition_#t~ret4_15| () Int)
(declare-fun |addition_#res_15| () Int)
(declare-fun |addition_#t~ret4_17| () Int)
(declare-fun |addition_#res_17| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 3)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (not (= 0 addition_~n_4)) :named ssa_5))
(assert (! (< 0 addition_~n_4) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_7| (+ addition_~m_4 1)) (= addition_~n_4 (+ 1 |addition_#in~n_7|))) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_7| addition_~n_8) (= |addition_#in~m_7| addition_~m_8)) :named ssa_8))
(assert (! (and (= 0 addition_~n_8) (= |addition_#res_9| addition_~m_8)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! (= |addition_#res_9| |addition_#t~ret4_11|) :named ssa_11_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_11|)) (<= |addition_#t~ret4_11| 9223372036854775807) (= |addition_#res_12| |addition_#t~ret4_11|)) :named ssa_12))
(assert (! true :named ssa_13))
(assert (! (= |addition_#res_12| |addition_#t~ret4_14|) :named ssa_14_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_14|)) (<= |addition_#t~ret4_14| 9223372036854775807) (= |addition_#res_15| |addition_#t~ret4_14|)) :named ssa_15))
(assert (! true :named ssa_16))
(assert (! (= |addition_#res_15| |addition_#t~ret4_17|) :named ssa_17_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_11_return ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_12 ssa_5 ssa_4 ssa_7_GlobVarAssigCall ssa_14_return) ssa_15 ssa_16 (and ssa_-2_PendingContext ssa_17_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#in~m_3| () Int)
(declare-fun addition_~n_3 () Int)
(declare-fun |addition_#in~n_3| () Int)
(declare-fun addition_~m_3 () Int)
(declare-fun addition_~n_4 () Int)
(declare-fun addition_~m_4 () Int)
(declare-fun |addition_#res_5| () Int)
(declare-fun addition_~n_5 () Int)
(declare-fun addition_~m_5 () Int)
(declare-fun |addition_#t~ret4_7| () Int)
(declare-fun |addition_#res_7| () Int)
(declare-fun |addition_#t~ret4_8| () Int)
(declare-fun |addition_#res_8| () Int)
(declare-fun |addition_#t~ret4_10| () Int)
(declare-fun |addition_#res_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 2)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (not (= 0 addition_~n_0)) :named ssa_1))
(assert (! (< 0 addition_~n_0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= |addition_#in~m_3| (+ addition_~m_0 1)) (= addition_~n_0 (+ 1 |addition_#in~n_3|))) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= |addition_#in~n_3| addition_~n_4) (= |addition_#in~m_3| addition_~m_4)) :named ssa_4))
(assert (! (and (= 0 addition_~n_4) (= |addition_#res_5| addition_~m_4)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |addition_#res_5| |addition_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ 9223372036854775808 |addition_#t~ret4_7|)) (<= |addition_#t~ret4_7| 9223372036854775807) (= |addition_#res_8| |addition_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |addition_#res_8| |addition_#t~ret4_10|) :named ssa_10_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun addition_~n_-2 () Int)
(declare-fun |addition_#in~n_-2| () Int)
(declare-fun addition_~m_-2 () Int)
(declare-fun |addition_#in~m_-1| () Int)
(declare-fun addition_~n_-1 () Int)
(declare-fun |addition_#in~n_-1| () Int)
(declare-fun addition_~m_-1 () Int)
(declare-fun addition_~n_0 () Int)
(declare-fun addition_~m_0 () Int)
(declare-fun |addition_#res_1| () Int)
(declare-fun addition_~n_1 () Int)
(declare-fun addition_~m_1 () Int)
(declare-fun |addition_#t~ret4_3| () Int)
(declare-fun |addition_#res_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |addition_#in~n_-2| 1)) :named ssa_postcond))
(assert (! (and (= |addition_#in~n_-1| addition_~n_0) (= |addition_#in~m_-1| addition_~m_0)) :named ssa_0))
(assert (! (and (= 0 addition_~n_0) (= |addition_#res_1| addition_~m_0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |addition_#res_1| |addition_#t~ret4_3|) :named ssa_3_return))
(assert (! (= |addition_#in~n_-2| addition_~n_-2) :named ssa_-2_PendingContext))
(assert (! (and (= |addition_#in~m_-1| (+ addition_~m_-2 1)) (= addition_~n_-2 (+ 1 |addition_#in~n_-1|))) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
