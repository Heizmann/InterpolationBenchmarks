(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:14:33+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id id_i20_o20-1.c_AllErrorsAtOnce_Iteration8)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~ret5| () Int)
(declare-fun |c_main_#t~ret5_primed| () Int)
(declare-fun c_main_~input~0 () Int)
(declare-fun c_main_~input~0_primed () Int)
(declare-fun c_main_~result~0 () Int)
(declare-fun c_main_~result~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret6| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret6_primed| () Int)
(declare-fun |c_id_#in~x| () Int)
(declare-fun |c_id_#in~x_primed| () Int)
(declare-fun |c_id_#res| () Int)
(declare-fun |c_id_#res_primed| () Int)
(declare-fun |c_id_#t~ret4| () Int)
(declare-fun |c_id_#t~ret4_primed| () Int)
(declare-fun c_id_~x () Int)
(declare-fun c_id_~x_primed () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret6_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun main_~input~0_4 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun main_~input~0_5 () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun id_~x_11 () Int)
(declare-fun |id_#in~x_11| () Int)
(declare-fun id_~x_12 () Int)
(declare-fun id_~x_14 () Int)
(declare-fun |id_#in~x_14| () Int)
(declare-fun id_~x_15 () Int)
(declare-fun id_~x_17 () Int)
(declare-fun |id_#in~x_17| () Int)
(declare-fun id_~x_18 () Int)
(declare-fun id_~x_20 () Int)
(declare-fun |id_#in~x_20| () Int)
(declare-fun id_~x_21 () Int)
(declare-fun id_~x_23 () Int)
(declare-fun |id_#in~x_23| () Int)
(declare-fun id_~x_24 () Int)
(declare-fun id_~x_26 () Int)
(declare-fun |id_#in~x_26| () Int)
(declare-fun id_~x_27 () Int)
(declare-fun |id_#res_28| () Int)
(declare-fun id_~x_28 () Int)
(declare-fun |id_#res_30| () Int)
(declare-fun |id_#t~ret4_30| () Int)
(declare-fun |id_#res_31| () Int)
(declare-fun |id_#t~ret4_31| () Int)
(declare-fun |id_#res_33| () Int)
(declare-fun |id_#t~ret4_33| () Int)
(declare-fun |id_#res_34| () Int)
(declare-fun |id_#t~ret4_34| () Int)
(declare-fun |id_#res_36| () Int)
(declare-fun |id_#t~ret4_36| () Int)
(declare-fun |id_#res_37| () Int)
(declare-fun |id_#t~ret4_37| () Int)
(declare-fun |id_#res_39| () Int)
(declare-fun |id_#t~ret4_39| () Int)
(declare-fun |id_#res_40| () Int)
(declare-fun |id_#t~ret4_40| () Int)
(declare-fun |id_#res_42| () Int)
(declare-fun |id_#t~ret4_42| () Int)
(declare-fun |id_#res_43| () Int)
(declare-fun |id_#t~ret4_43| () Int)
(declare-fun |id_#res_45| () Int)
(declare-fun |id_#t~ret4_45| () Int)
(declare-fun |id_#res_46| () Int)
(declare-fun |id_#t~ret4_46| () Int)
(declare-fun |id_#res_48| () Int)
(declare-fun |id_#t~ret4_48| () Int)
(declare-fun |id_#res_49| () Int)
(declare-fun |id_#t~ret4_49| () Int)
(declare-fun |main_#t~ret5_51| () Int)
(declare-fun |id_#res_51| () Int)
(declare-fun main_~result~0_52 () Int)
(declare-fun |main_#t~ret5_52| () Int)
(declare-fun main_~result~0_53 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 15 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (= main_~input~0_4 20) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= main_~input~0_4 |id_#in~x_5|) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (not (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= id_~x_9 (+ |id_#in~x_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= id_~x_12 |id_#in~x_11|) :named ssa_12))
(assert (! (not (= id_~x_12 0)) :named ssa_13))
(assert (! true :named ssa_14_GlobVarAssigCall))
(assert (! (= id_~x_12 (+ |id_#in~x_14| 1)) :named ssa_14_LocVarAssigCall))
(assert (! true :named ssa_14_OldVarAssigCall))
(assert (! (= id_~x_15 |id_#in~x_14|) :named ssa_15))
(assert (! (not (= id_~x_15 0)) :named ssa_16))
(assert (! true :named ssa_17_GlobVarAssigCall))
(assert (! (= id_~x_15 (+ |id_#in~x_17| 1)) :named ssa_17_LocVarAssigCall))
(assert (! true :named ssa_17_OldVarAssigCall))
(assert (! (= id_~x_18 |id_#in~x_17|) :named ssa_18))
(assert (! (not (= id_~x_18 0)) :named ssa_19))
(assert (! true :named ssa_20_GlobVarAssigCall))
(assert (! (= id_~x_18 (+ |id_#in~x_20| 1)) :named ssa_20_LocVarAssigCall))
(assert (! true :named ssa_20_OldVarAssigCall))
(assert (! (= id_~x_21 |id_#in~x_20|) :named ssa_21))
(assert (! (not (= id_~x_21 0)) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (= id_~x_21 (+ |id_#in~x_23| 1)) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (= id_~x_24 |id_#in~x_23|) :named ssa_24))
(assert (! (not (= id_~x_24 0)) :named ssa_25))
(assert (! true :named ssa_26_GlobVarAssigCall))
(assert (! (= id_~x_24 (+ |id_#in~x_26| 1)) :named ssa_26_LocVarAssigCall))
(assert (! true :named ssa_26_OldVarAssigCall))
(assert (! (= id_~x_27 |id_#in~x_26|) :named ssa_27))
(assert (! (and (= |id_#res_28| 0) (= id_~x_27 0)) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |id_#res_28| |id_#t~ret4_30|) :named ssa_30_return))
(assert (! (and (<= |id_#t~ret4_30| 2147483647) (= |id_#res_31| (+ |id_#t~ret4_30| 1)) (<= 0 (+ |id_#t~ret4_30| 2147483648))) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |id_#res_31| |id_#t~ret4_33|) :named ssa_33_return))
(assert (! (and (<= |id_#t~ret4_33| 2147483647) (= |id_#res_34| (+ |id_#t~ret4_33| 1)) (<= 0 (+ |id_#t~ret4_33| 2147483648))) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! (= |id_#res_34| |id_#t~ret4_36|) :named ssa_36_return))
(assert (! (and (<= |id_#t~ret4_36| 2147483647) (= |id_#res_37| (+ |id_#t~ret4_36| 1)) (<= 0 (+ |id_#t~ret4_36| 2147483648))) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! (= |id_#res_37| |id_#t~ret4_39|) :named ssa_39_return))
(assert (! (and (<= |id_#t~ret4_39| 2147483647) (= |id_#res_40| (+ |id_#t~ret4_39| 1)) (<= 0 (+ |id_#t~ret4_39| 2147483648))) :named ssa_40))
(assert (! true :named ssa_41))
(assert (! (= |id_#res_40| |id_#t~ret4_42|) :named ssa_42_return))
(assert (! (and (<= |id_#t~ret4_42| 2147483647) (= |id_#res_43| (+ |id_#t~ret4_42| 1)) (<= 0 (+ |id_#t~ret4_42| 2147483648))) :named ssa_43))
(assert (! true :named ssa_44))
(assert (! (= |id_#res_43| |id_#t~ret4_45|) :named ssa_45_return))
(assert (! (and (<= |id_#t~ret4_45| 2147483647) (= |id_#res_46| (+ |id_#t~ret4_45| 1)) (<= 0 (+ |id_#t~ret4_45| 2147483648))) :named ssa_46))
(assert (! true :named ssa_47))
(assert (! (= |id_#res_46| |id_#t~ret4_48|) :named ssa_48_return))
(assert (! (and (<= |id_#t~ret4_48| 2147483647) (= |id_#res_49| (+ |id_#t~ret4_48| 1)) (<= 0 (+ |id_#t~ret4_48| 2147483648))) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! (= |id_#res_49| |main_#t~ret5_51|) :named ssa_51_return))
(assert (! (and (<= 0 (+ |main_#t~ret5_51| 2147483648)) (= main_~result~0_52 |main_#t~ret5_51|) (<= |main_#t~ret5_51| 2147483647)) :named ssa_52))
(assert (! (not (= main_~result~0_52 20)) :named ssa_53))
(assert (! true :named ssa_54))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 (and ssa_13 ssa_14_OldVarAssigCall ssa_27 ssa_17_LocVarAssigCall ssa_5_LocVarAssigCall ssa_31 ssa_5_GlobVarAssigCall ssa_7 ssa_44 ssa_16 ssa_6 ssa_34 ssa_17_GlobVarAssigCall ssa_8_GlobVarAssigCall ssa_11_LocVarAssigCall ssa_14_LocVarAssigCall ssa_26_GlobVarAssigCall ssa_40 ssa_10 ssa_9 ssa_46 ssa_51_return ssa_26_LocVarAssigCall ssa_47 ssa_25 ssa_39_return ssa_14_GlobVarAssigCall ssa_23_OldVarAssigCall ssa_20_GlobVarAssigCall ssa_20_OldVarAssigCall ssa_45_return ssa_19 ssa_43 ssa_23_LocVarAssigCall ssa_37 ssa_17_OldVarAssigCall ssa_20_LocVarAssigCall ssa_38 ssa_12 ssa_11_OldVarAssigCall ssa_32 ssa_5_OldVarAssigCall ssa_50 ssa_8_OldVarAssigCall ssa_48_return ssa_28 ssa_22 ssa_15 ssa_49 ssa_29 ssa_42_return ssa_23_GlobVarAssigCall ssa_21 ssa_30_return ssa_11_GlobVarAssigCall ssa_33_return ssa_18 ssa_36_return ssa_35 ssa_41 ssa_8_LocVarAssigCall ssa_24 ssa_26_OldVarAssigCall) ssa_52 ssa_53 (and ssa_54 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 15 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun main_~input~0_-2 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun main_~input~0_-1 () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun id_~x_11 () Int)
(declare-fun |id_#in~x_11| () Int)
(declare-fun id_~x_12 () Int)
(declare-fun id_~x_14 () Int)
(declare-fun |id_#in~x_14| () Int)
(declare-fun id_~x_15 () Int)
(declare-fun id_~x_17 () Int)
(declare-fun |id_#in~x_17| () Int)
(declare-fun id_~x_18 () Int)
(declare-fun id_~x_20 () Int)
(declare-fun |id_#in~x_20| () Int)
(declare-fun id_~x_21 () Int)
(declare-fun |id_#res_22| () Int)
(declare-fun id_~x_22 () Int)
(declare-fun |id_#res_24| () Int)
(declare-fun |id_#t~ret4_24| () Int)
(declare-fun |id_#res_25| () Int)
(declare-fun |id_#t~ret4_25| () Int)
(declare-fun |id_#res_27| () Int)
(declare-fun |id_#t~ret4_27| () Int)
(declare-fun |id_#res_28| () Int)
(declare-fun |id_#t~ret4_28| () Int)
(declare-fun |id_#res_30| () Int)
(declare-fun |id_#t~ret4_30| () Int)
(declare-fun |id_#res_31| () Int)
(declare-fun |id_#t~ret4_31| () Int)
(declare-fun |id_#res_33| () Int)
(declare-fun |id_#t~ret4_33| () Int)
(declare-fun |id_#res_34| () Int)
(declare-fun |id_#t~ret4_34| () Int)
(declare-fun |id_#res_36| () Int)
(declare-fun |id_#t~ret4_36| () Int)
(declare-fun |id_#res_37| () Int)
(declare-fun |id_#t~ret4_37| () Int)
(declare-fun |id_#res_39| () Int)
(declare-fun |id_#t~ret4_39| () Int)
(declare-fun |id_#res_40| () Int)
(declare-fun |id_#t~ret4_40| () Int)
(declare-fun |id_#res_42| () Int)
(declare-fun |id_#t~ret4_42| () Int)
(declare-fun |id_#res_43| () Int)
(declare-fun |id_#t~ret4_43| () Int)
(declare-fun |main_#t~ret5_45| () Int)
(declare-fun |id_#res_45| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (not (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= id_~x_9 (+ |id_#in~x_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= id_~x_12 |id_#in~x_11|) :named ssa_12))
(assert (! (not (= id_~x_12 0)) :named ssa_13))
(assert (! true :named ssa_14_GlobVarAssigCall))
(assert (! (= id_~x_12 (+ |id_#in~x_14| 1)) :named ssa_14_LocVarAssigCall))
(assert (! true :named ssa_14_OldVarAssigCall))
(assert (! (= id_~x_15 |id_#in~x_14|) :named ssa_15))
(assert (! (not (= id_~x_15 0)) :named ssa_16))
(assert (! true :named ssa_17_GlobVarAssigCall))
(assert (! (= id_~x_15 (+ |id_#in~x_17| 1)) :named ssa_17_LocVarAssigCall))
(assert (! true :named ssa_17_OldVarAssigCall))
(assert (! (= id_~x_18 |id_#in~x_17|) :named ssa_18))
(assert (! (not (= id_~x_18 0)) :named ssa_19))
(assert (! true :named ssa_20_GlobVarAssigCall))
(assert (! (= id_~x_18 (+ |id_#in~x_20| 1)) :named ssa_20_LocVarAssigCall))
(assert (! true :named ssa_20_OldVarAssigCall))
(assert (! (= id_~x_21 |id_#in~x_20|) :named ssa_21))
(assert (! (and (= |id_#res_22| 0) (= id_~x_21 0)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |id_#res_22| |id_#t~ret4_24|) :named ssa_24_return))
(assert (! (and (<= |id_#t~ret4_24| 2147483647) (= |id_#res_25| (+ |id_#t~ret4_24| 1)) (<= 0 (+ |id_#t~ret4_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |id_#res_25| |id_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= |id_#t~ret4_27| 2147483647) (= |id_#res_28| (+ |id_#t~ret4_27| 1)) (<= 0 (+ |id_#t~ret4_27| 2147483648))) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |id_#res_28| |id_#t~ret4_30|) :named ssa_30_return))
(assert (! (and (<= |id_#t~ret4_30| 2147483647) (= |id_#res_31| (+ |id_#t~ret4_30| 1)) (<= 0 (+ |id_#t~ret4_30| 2147483648))) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |id_#res_31| |id_#t~ret4_33|) :named ssa_33_return))
(assert (! (and (<= |id_#t~ret4_33| 2147483647) (= |id_#res_34| (+ |id_#t~ret4_33| 1)) (<= 0 (+ |id_#t~ret4_33| 2147483648))) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! (= |id_#res_34| |id_#t~ret4_36|) :named ssa_36_return))
(assert (! (and (<= |id_#t~ret4_36| 2147483647) (= |id_#res_37| (+ |id_#t~ret4_36| 1)) (<= 0 (+ |id_#t~ret4_36| 2147483648))) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! (= |id_#res_37| |id_#t~ret4_39|) :named ssa_39_return))
(assert (! (and (<= |id_#t~ret4_39| 2147483647) (= |id_#res_40| (+ |id_#t~ret4_39| 1)) (<= 0 (+ |id_#t~ret4_39| 2147483648))) :named ssa_40))
(assert (! true :named ssa_41))
(assert (! (= |id_#res_40| |id_#t~ret4_42|) :named ssa_42_return))
(assert (! (and (<= |id_#t~ret4_42| 2147483647) (= |id_#res_43| (+ |id_#t~ret4_42| 1)) (<= 0 (+ |id_#t~ret4_42| 2147483648))) :named ssa_43))
(assert (! true :named ssa_44))
(assert (! (= |id_#res_43| |main_#t~ret5_45|) :named ssa_45_return))
(assert (! (<= 20 main_~input~0_-2) :named ssa_-2_PendingContext))
(assert (! (= main_~input~0_-2 |id_#in~x_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_13 ssa_14_OldVarAssigCall ssa_17_LocVarAssigCall ssa_5_LocVarAssigCall ssa_31 ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_26 ssa_34 ssa_17_GlobVarAssigCall ssa_8_GlobVarAssigCall ssa_11_LocVarAssigCall ssa_14_LocVarAssigCall ssa_27_return ssa_40 ssa_10 ssa_9 ssa_2_OldVarAssigCall ssa_25 ssa_39_return ssa_14_GlobVarAssigCall ssa_20_GlobVarAssigCall ssa_20_OldVarAssigCall ssa_24_return ssa_2_GlobVarAssigCall ssa_19 ssa_3 ssa_37 ssa_17_OldVarAssigCall ssa_20_LocVarAssigCall ssa_38 ssa_12 ssa_11_OldVarAssigCall ssa_32 ssa_5_OldVarAssigCall ssa_8_OldVarAssigCall ssa_2_LocVarAssigCall ssa_28 ssa_4 ssa_22 ssa_15 ssa_29 ssa_42_return ssa_21 ssa_30_return ssa_11_GlobVarAssigCall ssa_33_return ssa_18 ssa_23 ssa_36_return ssa_35 ssa_41 ssa_8_LocVarAssigCall) ssa_43 ssa_44 (and ssa_-2_PendingContext ssa_45_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun id_~x_11 () Int)
(declare-fun |id_#in~x_11| () Int)
(declare-fun id_~x_12 () Int)
(declare-fun id_~x_14 () Int)
(declare-fun |id_#in~x_14| () Int)
(declare-fun id_~x_15 () Int)
(declare-fun id_~x_17 () Int)
(declare-fun |id_#in~x_17| () Int)
(declare-fun id_~x_18 () Int)
(declare-fun |id_#res_19| () Int)
(declare-fun id_~x_19 () Int)
(declare-fun |id_#res_21| () Int)
(declare-fun |id_#t~ret4_21| () Int)
(declare-fun |id_#res_22| () Int)
(declare-fun |id_#t~ret4_22| () Int)
(declare-fun |id_#res_24| () Int)
(declare-fun |id_#t~ret4_24| () Int)
(declare-fun |id_#res_25| () Int)
(declare-fun |id_#t~ret4_25| () Int)
(declare-fun |id_#res_27| () Int)
(declare-fun |id_#t~ret4_27| () Int)
(declare-fun |id_#res_28| () Int)
(declare-fun |id_#t~ret4_28| () Int)
(declare-fun |id_#res_30| () Int)
(declare-fun |id_#t~ret4_30| () Int)
(declare-fun |id_#res_31| () Int)
(declare-fun |id_#t~ret4_31| () Int)
(declare-fun |id_#res_33| () Int)
(declare-fun |id_#t~ret4_33| () Int)
(declare-fun |id_#res_34| () Int)
(declare-fun |id_#t~ret4_34| () Int)
(declare-fun |id_#res_36| () Int)
(declare-fun |id_#t~ret4_36| () Int)
(declare-fun |id_#res_37| () Int)
(declare-fun |id_#t~ret4_37| () Int)
(declare-fun |id_#res_39| () Int)
(declare-fun |id_#t~ret4_39| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 7)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (not (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= id_~x_9 (+ |id_#in~x_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= id_~x_12 |id_#in~x_11|) :named ssa_12))
(assert (! (not (= id_~x_12 0)) :named ssa_13))
(assert (! true :named ssa_14_GlobVarAssigCall))
(assert (! (= id_~x_12 (+ |id_#in~x_14| 1)) :named ssa_14_LocVarAssigCall))
(assert (! true :named ssa_14_OldVarAssigCall))
(assert (! (= id_~x_15 |id_#in~x_14|) :named ssa_15))
(assert (! (not (= id_~x_15 0)) :named ssa_16))
(assert (! true :named ssa_17_GlobVarAssigCall))
(assert (! (= id_~x_15 (+ |id_#in~x_17| 1)) :named ssa_17_LocVarAssigCall))
(assert (! true :named ssa_17_OldVarAssigCall))
(assert (! (= id_~x_18 |id_#in~x_17|) :named ssa_18))
(assert (! (and (= |id_#res_19| 0) (= id_~x_18 0)) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! (= |id_#res_19| |id_#t~ret4_21|) :named ssa_21_return))
(assert (! (and (<= |id_#t~ret4_21| 2147483647) (= |id_#res_22| (+ |id_#t~ret4_21| 1)) (<= 0 (+ |id_#t~ret4_21| 2147483648))) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |id_#res_22| |id_#t~ret4_24|) :named ssa_24_return))
(assert (! (and (<= |id_#t~ret4_24| 2147483647) (= |id_#res_25| (+ |id_#t~ret4_24| 1)) (<= 0 (+ |id_#t~ret4_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |id_#res_25| |id_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= |id_#t~ret4_27| 2147483647) (= |id_#res_28| (+ |id_#t~ret4_27| 1)) (<= 0 (+ |id_#t~ret4_27| 2147483648))) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |id_#res_28| |id_#t~ret4_30|) :named ssa_30_return))
(assert (! (and (<= |id_#t~ret4_30| 2147483647) (= |id_#res_31| (+ |id_#t~ret4_30| 1)) (<= 0 (+ |id_#t~ret4_30| 2147483648))) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |id_#res_31| |id_#t~ret4_33|) :named ssa_33_return))
(assert (! (and (<= |id_#t~ret4_33| 2147483647) (= |id_#res_34| (+ |id_#t~ret4_33| 1)) (<= 0 (+ |id_#t~ret4_33| 2147483648))) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! (= |id_#res_34| |id_#t~ret4_36|) :named ssa_36_return))
(assert (! (and (<= |id_#t~ret4_36| 2147483647) (= |id_#res_37| (+ |id_#t~ret4_36| 1)) (<= 0 (+ |id_#t~ret4_36| 2147483648))) :named ssa_37))
(assert (! true :named ssa_38))
(assert (! (= |id_#res_37| |id_#t~ret4_39|) :named ssa_39_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_13 ssa_14_OldVarAssigCall ssa_20 ssa_17_LocVarAssigCall ssa_5_LocVarAssigCall ssa_31 ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_26 ssa_34 ssa_17_GlobVarAssigCall ssa_8_GlobVarAssigCall ssa_11_LocVarAssigCall ssa_14_LocVarAssigCall ssa_27_return ssa_10 ssa_9 ssa_2_OldVarAssigCall ssa_25 ssa_14_GlobVarAssigCall ssa_24_return ssa_2_GlobVarAssigCall ssa_19 ssa_3 ssa_17_OldVarAssigCall ssa_12 ssa_11_OldVarAssigCall ssa_32 ssa_5_OldVarAssigCall ssa_8_OldVarAssigCall ssa_2_LocVarAssigCall ssa_28 ssa_4 ssa_22 ssa_15 ssa_29 ssa_30_return ssa_11_GlobVarAssigCall ssa_33_return ssa_18 ssa_23 ssa_21_return ssa_36_return ssa_35 ssa_8_LocVarAssigCall) ssa_37 ssa_38 (and ssa_-2_PendingContext ssa_39_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun id_~x_11 () Int)
(declare-fun |id_#in~x_11| () Int)
(declare-fun id_~x_12 () Int)
(declare-fun id_~x_14 () Int)
(declare-fun |id_#in~x_14| () Int)
(declare-fun id_~x_15 () Int)
(declare-fun |id_#res_16| () Int)
(declare-fun id_~x_16 () Int)
(declare-fun |id_#res_18| () Int)
(declare-fun |id_#t~ret4_18| () Int)
(declare-fun |id_#res_19| () Int)
(declare-fun |id_#t~ret4_19| () Int)
(declare-fun |id_#res_21| () Int)
(declare-fun |id_#t~ret4_21| () Int)
(declare-fun |id_#res_22| () Int)
(declare-fun |id_#t~ret4_22| () Int)
(declare-fun |id_#res_24| () Int)
(declare-fun |id_#t~ret4_24| () Int)
(declare-fun |id_#res_25| () Int)
(declare-fun |id_#t~ret4_25| () Int)
(declare-fun |id_#res_27| () Int)
(declare-fun |id_#t~ret4_27| () Int)
(declare-fun |id_#res_28| () Int)
(declare-fun |id_#t~ret4_28| () Int)
(declare-fun |id_#res_30| () Int)
(declare-fun |id_#t~ret4_30| () Int)
(declare-fun |id_#res_31| () Int)
(declare-fun |id_#t~ret4_31| () Int)
(declare-fun |id_#res_33| () Int)
(declare-fun |id_#t~ret4_33| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 6)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (not (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= id_~x_9 (+ |id_#in~x_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= id_~x_12 |id_#in~x_11|) :named ssa_12))
(assert (! (not (= id_~x_12 0)) :named ssa_13))
(assert (! true :named ssa_14_GlobVarAssigCall))
(assert (! (= id_~x_12 (+ |id_#in~x_14| 1)) :named ssa_14_LocVarAssigCall))
(assert (! true :named ssa_14_OldVarAssigCall))
(assert (! (= id_~x_15 |id_#in~x_14|) :named ssa_15))
(assert (! (and (= |id_#res_16| 0) (= id_~x_15 0)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |id_#res_16| |id_#t~ret4_18|) :named ssa_18_return))
(assert (! (and (<= |id_#t~ret4_18| 2147483647) (= |id_#res_19| (+ |id_#t~ret4_18| 1)) (<= 0 (+ |id_#t~ret4_18| 2147483648))) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! (= |id_#res_19| |id_#t~ret4_21|) :named ssa_21_return))
(assert (! (and (<= |id_#t~ret4_21| 2147483647) (= |id_#res_22| (+ |id_#t~ret4_21| 1)) (<= 0 (+ |id_#t~ret4_21| 2147483648))) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |id_#res_22| |id_#t~ret4_24|) :named ssa_24_return))
(assert (! (and (<= |id_#t~ret4_24| 2147483647) (= |id_#res_25| (+ |id_#t~ret4_24| 1)) (<= 0 (+ |id_#t~ret4_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |id_#res_25| |id_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= |id_#t~ret4_27| 2147483647) (= |id_#res_28| (+ |id_#t~ret4_27| 1)) (<= 0 (+ |id_#t~ret4_27| 2147483648))) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |id_#res_28| |id_#t~ret4_30|) :named ssa_30_return))
(assert (! (and (<= |id_#t~ret4_30| 2147483647) (= |id_#res_31| (+ |id_#t~ret4_30| 1)) (<= 0 (+ |id_#t~ret4_30| 2147483648))) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |id_#res_31| |id_#t~ret4_33|) :named ssa_33_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_13 ssa_14_OldVarAssigCall ssa_20 ssa_5_LocVarAssigCall ssa_18_return ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_26 ssa_8_GlobVarAssigCall ssa_11_LocVarAssigCall ssa_14_LocVarAssigCall ssa_27_return ssa_10 ssa_9 ssa_2_OldVarAssigCall ssa_25 ssa_14_GlobVarAssigCall ssa_24_return ssa_2_GlobVarAssigCall ssa_19 ssa_3 ssa_12 ssa_11_OldVarAssigCall ssa_5_OldVarAssigCall ssa_8_OldVarAssigCall ssa_2_LocVarAssigCall ssa_28 ssa_4 ssa_22 ssa_15 ssa_29 ssa_30_return ssa_11_GlobVarAssigCall ssa_23 ssa_21_return ssa_17 ssa_8_LocVarAssigCall) ssa_31 ssa_32 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_33_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun id_~x_11 () Int)
(declare-fun |id_#in~x_11| () Int)
(declare-fun id_~x_12 () Int)
(declare-fun |id_#res_13| () Int)
(declare-fun id_~x_13 () Int)
(declare-fun |id_#res_15| () Int)
(declare-fun |id_#t~ret4_15| () Int)
(declare-fun |id_#res_16| () Int)
(declare-fun |id_#t~ret4_16| () Int)
(declare-fun |id_#res_18| () Int)
(declare-fun |id_#t~ret4_18| () Int)
(declare-fun |id_#res_19| () Int)
(declare-fun |id_#t~ret4_19| () Int)
(declare-fun |id_#res_21| () Int)
(declare-fun |id_#t~ret4_21| () Int)
(declare-fun |id_#res_22| () Int)
(declare-fun |id_#t~ret4_22| () Int)
(declare-fun |id_#res_24| () Int)
(declare-fun |id_#t~ret4_24| () Int)
(declare-fun |id_#res_25| () Int)
(declare-fun |id_#t~ret4_25| () Int)
(declare-fun |id_#res_27| () Int)
(declare-fun |id_#t~ret4_27| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 5)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (not (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (= id_~x_9 (+ |id_#in~x_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (= id_~x_12 |id_#in~x_11|) :named ssa_12))
(assert (! (and (= |id_#res_13| 0) (= id_~x_12 0)) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |id_#res_13| |id_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= |id_#t~ret4_15| 2147483647) (= |id_#res_16| (+ |id_#t~ret4_15| 1)) (<= 0 (+ |id_#t~ret4_15| 2147483648))) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |id_#res_16| |id_#t~ret4_18|) :named ssa_18_return))
(assert (! (and (<= |id_#t~ret4_18| 2147483647) (= |id_#res_19| (+ |id_#t~ret4_18| 1)) (<= 0 (+ |id_#t~ret4_18| 2147483648))) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! (= |id_#res_19| |id_#t~ret4_21|) :named ssa_21_return))
(assert (! (and (<= |id_#t~ret4_21| 2147483647) (= |id_#res_22| (+ |id_#t~ret4_21| 1)) (<= 0 (+ |id_#t~ret4_21| 2147483648))) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |id_#res_22| |id_#t~ret4_24|) :named ssa_24_return))
(assert (! (and (<= |id_#t~ret4_24| 2147483647) (= |id_#res_25| (+ |id_#t~ret4_24| 1)) (<= 0 (+ |id_#t~ret4_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |id_#res_25| |id_#t~ret4_27|) :named ssa_27_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_13 ssa_20 ssa_5_LocVarAssigCall ssa_18_return ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_8_GlobVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_9 ssa_2_OldVarAssigCall ssa_24_return ssa_2_GlobVarAssigCall ssa_19 ssa_3 ssa_12 ssa_11_OldVarAssigCall ssa_5_OldVarAssigCall ssa_8_OldVarAssigCall ssa_2_LocVarAssigCall ssa_4 ssa_22 ssa_11_GlobVarAssigCall ssa_23 ssa_21_return ssa_17 ssa_15_return ssa_8_LocVarAssigCall) ssa_25 ssa_26 (and ssa_27_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun id_~x_8 () Int)
(declare-fun |id_#in~x_8| () Int)
(declare-fun id_~x_9 () Int)
(declare-fun |id_#res_10| () Int)
(declare-fun id_~x_10 () Int)
(declare-fun |id_#res_12| () Int)
(declare-fun |id_#t~ret4_12| () Int)
(declare-fun |id_#res_13| () Int)
(declare-fun |id_#t~ret4_13| () Int)
(declare-fun |id_#res_15| () Int)
(declare-fun |id_#t~ret4_15| () Int)
(declare-fun |id_#res_16| () Int)
(declare-fun |id_#t~ret4_16| () Int)
(declare-fun |id_#res_18| () Int)
(declare-fun |id_#t~ret4_18| () Int)
(declare-fun |id_#res_19| () Int)
(declare-fun |id_#t~ret4_19| () Int)
(declare-fun |id_#res_21| () Int)
(declare-fun |id_#t~ret4_21| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 4)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (not (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8_GlobVarAssigCall))
(assert (! (= id_~x_6 (+ |id_#in~x_8| 1)) :named ssa_8_LocVarAssigCall))
(assert (! true :named ssa_8_OldVarAssigCall))
(assert (! (= id_~x_9 |id_#in~x_8|) :named ssa_9))
(assert (! (and (= |id_#res_10| 0) (= id_~x_9 0)) :named ssa_10))
(assert (! true :named ssa_11))
(assert (! (= |id_#res_10| |id_#t~ret4_12|) :named ssa_12_return))
(assert (! (and (<= |id_#t~ret4_12| 2147483647) (= |id_#res_13| (+ |id_#t~ret4_12| 1)) (<= 0 (+ |id_#t~ret4_12| 2147483648))) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |id_#res_13| |id_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= |id_#t~ret4_15| 2147483647) (= |id_#res_16| (+ |id_#t~ret4_15| 1)) (<= 0 (+ |id_#t~ret4_15| 2147483648))) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |id_#res_16| |id_#t~ret4_18|) :named ssa_18_return))
(assert (! (and (<= |id_#t~ret4_18| 2147483647) (= |id_#res_19| (+ |id_#t~ret4_18| 1)) (<= 0 (+ |id_#t~ret4_18| 2147483648))) :named ssa_19))
(assert (! true :named ssa_20))
(assert (! (= |id_#res_19| |id_#t~ret4_21|) :named ssa_21_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_13 ssa_5_LocVarAssigCall ssa_18_return ssa_5_GlobVarAssigCall ssa_7 ssa_16 ssa_6 ssa_8_GlobVarAssigCall ssa_10 ssa_14 ssa_9 ssa_2_OldVarAssigCall ssa_2_GlobVarAssigCall ssa_3 ssa_5_OldVarAssigCall ssa_8_OldVarAssigCall ssa_2_LocVarAssigCall ssa_11 ssa_4 ssa_12_return ssa_17 ssa_15_return ssa_8_LocVarAssigCall) ssa_19 ssa_20 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_21_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun id_~x_5 () Int)
(declare-fun |id_#in~x_5| () Int)
(declare-fun id_~x_6 () Int)
(declare-fun |id_#res_7| () Int)
(declare-fun id_~x_7 () Int)
(declare-fun |id_#res_9| () Int)
(declare-fun |id_#t~ret4_9| () Int)
(declare-fun |id_#res_10| () Int)
(declare-fun |id_#t~ret4_10| () Int)
(declare-fun |id_#res_12| () Int)
(declare-fun |id_#t~ret4_12| () Int)
(declare-fun |id_#res_13| () Int)
(declare-fun |id_#t~ret4_13| () Int)
(declare-fun |id_#res_15| () Int)
(declare-fun |id_#t~ret4_15| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 3)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (not (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5_GlobVarAssigCall))
(assert (! (= id_~x_3 (+ |id_#in~x_5| 1)) :named ssa_5_LocVarAssigCall))
(assert (! true :named ssa_5_OldVarAssigCall))
(assert (! (= id_~x_6 |id_#in~x_5|) :named ssa_6))
(assert (! (and (= |id_#res_7| 0) (= id_~x_6 0)) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! (= |id_#res_7| |id_#t~ret4_9|) :named ssa_9_return))
(assert (! (and (<= |id_#t~ret4_9| 2147483647) (= |id_#res_10| (+ |id_#t~ret4_9| 1)) (<= 0 (+ |id_#t~ret4_9| 2147483648))) :named ssa_10))
(assert (! true :named ssa_11))
(assert (! (= |id_#res_10| |id_#t~ret4_12|) :named ssa_12_return))
(assert (! (and (<= |id_#t~ret4_12| 2147483647) (= |id_#res_13| (+ |id_#t~ret4_12| 1)) (<= 0 (+ |id_#t~ret4_12| 2147483648))) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |id_#res_13| |id_#t~ret4_15|) :named ssa_15_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_5_LocVarAssigCall ssa_5_GlobVarAssigCall ssa_7 ssa_6 ssa_10 ssa_8 ssa_2_OldVarAssigCall ssa_2_GlobVarAssigCall ssa_3 ssa_5_OldVarAssigCall ssa_2_LocVarAssigCall ssa_11 ssa_4 ssa_12_return ssa_9_return) ssa_13 ssa_14 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_15_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun id_~x_2 () Int)
(declare-fun |id_#in~x_2| () Int)
(declare-fun id_~x_3 () Int)
(declare-fun |id_#res_4| () Int)
(declare-fun id_~x_4 () Int)
(declare-fun |id_#res_6| () Int)
(declare-fun |id_#t~ret4_6| () Int)
(declare-fun |id_#res_7| () Int)
(declare-fun |id_#t~ret4_7| () Int)
(declare-fun |id_#res_9| () Int)
(declare-fun |id_#t~ret4_9| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 2)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (not (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2_GlobVarAssigCall))
(assert (! (= id_~x_0 (+ |id_#in~x_2| 1)) :named ssa_2_LocVarAssigCall))
(assert (! true :named ssa_2_OldVarAssigCall))
(assert (! (= id_~x_3 |id_#in~x_2|) :named ssa_3))
(assert (! (and (= |id_#res_4| 0) (= id_~x_3 0)) :named ssa_4))
(assert (! true :named ssa_5))
(assert (! (= |id_#res_4| |id_#t~ret4_6|) :named ssa_6_return))
(assert (! (and (<= |id_#t~ret4_6| 2147483647) (= |id_#res_7| (+ |id_#t~ret4_6| 1)) (<= 0 (+ |id_#t~ret4_6| 2147483648))) :named ssa_7))
(assert (! true :named ssa_8))
(assert (! (= |id_#res_7| |id_#t~ret4_9|) :named ssa_9_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 (and ssa_2_OldVarAssigCall ssa_6_return ssa_2_GlobVarAssigCall ssa_3 ssa_5 ssa_2_LocVarAssigCall ssa_4) ssa_7 ssa_8 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_9_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun id_~x_-2 () Int)
(declare-fun |id_#in~x_-2| () Int)
(declare-fun id_~x_-1 () Int)
(declare-fun |id_#in~x_-1| () Int)
(declare-fun id_~x_0 () Int)
(declare-fun |id_#res_1| () Int)
(declare-fun id_~x_1 () Int)
(declare-fun |id_#res_3| () Int)
(declare-fun |id_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |id_#in~x_-2| 1)) :named ssa_postcond))
(assert (! (= id_~x_0 |id_#in~x_-1|) :named ssa_0))
(assert (! (and (= |id_#res_1| 0) (= id_~x_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |id_#res_1| |id_#t~ret4_3|) :named ssa_3_return))
(assert (! (= |id_#in~x_-2| id_~x_-2) :named ssa_-2_PendingContext))
(assert (! (= id_~x_-2 (+ |id_#in~x_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
