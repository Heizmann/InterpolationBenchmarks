(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-31T00:14:55+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id Ackermann03.c_AllErrorsAtOnce_Iteration7)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet7| () Int)
(declare-fun |c_main_#t~nondet7_primed| () Int)
(declare-fun |c_main_#t~nondet8| () Int)
(declare-fun |c_main_#t~nondet8_primed| () Int)
(declare-fun |c_main_#t~ret9| () Int)
(declare-fun |c_main_#t~ret9_primed| () Int)
(declare-fun c_main_~m~0 () Int)
(declare-fun c_main_~m~0_primed () Int)
(declare-fun c_main_~n~0 () Int)
(declare-fun c_main_~n~0_primed () Int)
(declare-fun c_main_~result~0 () Int)
(declare-fun c_main_~result~0_primed () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret10_primed| () Int)
(declare-fun |c_ackermann_#in~m| () Int)
(declare-fun |c_ackermann_#in~m_primed| () Int)
(declare-fun |c_ackermann_#in~n| () Int)
(declare-fun |c_ackermann_#in~n_primed| () Int)
(declare-fun |c_ackermann_#res| () Int)
(declare-fun |c_ackermann_#res_primed| () Int)
(declare-fun |c_ackermann_#t~ret4| () Int)
(declare-fun |c_ackermann_#t~ret4_primed| () Int)
(declare-fun |c_ackermann_#t~ret5| () Int)
(declare-fun |c_ackermann_#t~ret5_primed| () Int)
(declare-fun |c_ackermann_#t~ret6| () Int)
(declare-fun |c_ackermann_#t~ret6_primed| () Int)
(declare-fun c_ackermann_~m () Int)
(declare-fun c_ackermann_~m_primed () Int)
(declare-fun c_ackermann_~n () Int)
(declare-fun c_ackermann_~n_primed () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret10_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |main_#t~nondet7_4| () Int)
(declare-fun main_~m~0_4 () Int)
(declare-fun main_~n~0_5 () Int)
(declare-fun |main_#t~nondet8_5| () Int)
(declare-fun main_~m~0_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun main_~n~0_7 () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_11 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_15 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun |ackermann_#in~m_19| () Int)
(declare-fun |ackermann_#in~n_19| () Int)
(declare-fun ackermann_~m_19 () Int)
(declare-fun ackermann_~n_20 () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun ackermann_~n_23 () Int)
(declare-fun |ackermann_#in~m_23| () Int)
(declare-fun |ackermann_#in~n_23| () Int)
(declare-fun ackermann_~m_23 () Int)
(declare-fun ackermann_~n_24 () Int)
(declare-fun ackermann_~m_24 () Int)
(declare-fun ackermann_~n_26 () Int)
(declare-fun |ackermann_#in~m_27| () Int)
(declare-fun |ackermann_#in~n_27| () Int)
(declare-fun ackermann_~m_27 () Int)
(declare-fun ackermann_~n_28 () Int)
(declare-fun ackermann_~m_28 () Int)
(declare-fun |ackermann_#res_29| () Int)
(declare-fun ackermann_~n_29 () Int)
(declare-fun ackermann_~m_29 () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun |ackermann_#t~ret4_31| () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret4_32| () Int)
(declare-fun |ackermann_#res_34| () Int)
(declare-fun |ackermann_#t~ret5_34| () Int)
(declare-fun |ackermann_#t~ret5_36| () Int)
(declare-fun |ackermann_#in~m_36| () Int)
(declare-fun |ackermann_#in~n_36| () Int)
(declare-fun ackermann_~m_36 () Int)
(declare-fun ackermann_~n_37 () Int)
(declare-fun ackermann_~m_37 () Int)
(declare-fun |ackermann_#res_38| () Int)
(declare-fun ackermann_~n_38 () Int)
(declare-fun ackermann_~m_38 () Int)
(declare-fun |ackermann_#res_40| () Int)
(declare-fun |ackermann_#t~ret6_40| () Int)
(declare-fun |ackermann_#res_41| () Int)
(declare-fun |ackermann_#t~ret6_41| () Int)
(declare-fun |ackermann_#t~ret5_41| () Int)
(declare-fun |ackermann_#res_43| () Int)
(declare-fun |ackermann_#t~ret4_43| () Int)
(declare-fun |ackermann_#res_44| () Int)
(declare-fun |ackermann_#t~ret4_44| () Int)
(declare-fun |ackermann_#res_46| () Int)
(declare-fun |ackermann_#t~ret5_46| () Int)
(declare-fun |ackermann_#t~ret5_48| () Int)
(declare-fun |ackermann_#in~m_48| () Int)
(declare-fun |ackermann_#in~n_48| () Int)
(declare-fun ackermann_~m_48 () Int)
(declare-fun ackermann_~n_49 () Int)
(declare-fun ackermann_~m_49 () Int)
(declare-fun ackermann_~n_52 () Int)
(declare-fun |ackermann_#in~m_52| () Int)
(declare-fun |ackermann_#in~n_52| () Int)
(declare-fun ackermann_~m_52 () Int)
(declare-fun ackermann_~n_53 () Int)
(declare-fun ackermann_~m_53 () Int)
(declare-fun ackermann_~n_55 () Int)
(declare-fun |ackermann_#in~m_56| () Int)
(declare-fun |ackermann_#in~n_56| () Int)
(declare-fun ackermann_~m_56 () Int)
(declare-fun ackermann_~n_57 () Int)
(declare-fun ackermann_~m_57 () Int)
(declare-fun |ackermann_#res_58| () Int)
(declare-fun ackermann_~n_58 () Int)
(declare-fun ackermann_~m_58 () Int)
(declare-fun |ackermann_#res_60| () Int)
(declare-fun |ackermann_#t~ret4_60| () Int)
(declare-fun |ackermann_#res_61| () Int)
(declare-fun |ackermann_#t~ret4_61| () Int)
(declare-fun |ackermann_#res_63| () Int)
(declare-fun |ackermann_#t~ret5_63| () Int)
(declare-fun |ackermann_#t~ret5_65| () Int)
(declare-fun |ackermann_#in~m_65| () Int)
(declare-fun |ackermann_#in~n_65| () Int)
(declare-fun ackermann_~m_65 () Int)
(declare-fun ackermann_~n_66 () Int)
(declare-fun ackermann_~m_66 () Int)
(declare-fun |ackermann_#res_67| () Int)
(declare-fun ackermann_~n_67 () Int)
(declare-fun ackermann_~m_67 () Int)
(declare-fun |ackermann_#res_69| () Int)
(declare-fun |ackermann_#t~ret6_69| () Int)
(declare-fun |ackermann_#res_70| () Int)
(declare-fun |ackermann_#t~ret6_70| () Int)
(declare-fun |ackermann_#t~ret5_70| () Int)
(declare-fun |ackermann_#res_72| () Int)
(declare-fun |ackermann_#t~ret6_72| () Int)
(declare-fun |ackermann_#res_73| () Int)
(declare-fun |ackermann_#t~ret6_73| () Int)
(declare-fun |ackermann_#t~ret5_73| () Int)
(declare-fun |ackermann_#res_75| () Int)
(declare-fun |ackermann_#t~ret5_75| () Int)
(declare-fun |ackermann_#t~ret5_77| () Int)
(declare-fun |ackermann_#in~m_77| () Int)
(declare-fun |ackermann_#in~n_77| () Int)
(declare-fun ackermann_~m_77 () Int)
(declare-fun ackermann_~n_78 () Int)
(declare-fun ackermann_~m_78 () Int)
(declare-fun ackermann_~n_81 () Int)
(declare-fun |ackermann_#in~m_81| () Int)
(declare-fun |ackermann_#in~n_81| () Int)
(declare-fun ackermann_~m_81 () Int)
(declare-fun ackermann_~n_82 () Int)
(declare-fun ackermann_~m_82 () Int)
(declare-fun ackermann_~n_85 () Int)
(declare-fun |ackermann_#in~m_85| () Int)
(declare-fun |ackermann_#in~n_85| () Int)
(declare-fun ackermann_~m_85 () Int)
(declare-fun ackermann_~n_86 () Int)
(declare-fun ackermann_~m_86 () Int)
(declare-fun ackermann_~n_89 () Int)
(declare-fun |ackermann_#in~m_89| () Int)
(declare-fun |ackermann_#in~n_89| () Int)
(declare-fun ackermann_~m_89 () Int)
(declare-fun ackermann_~n_90 () Int)
(declare-fun ackermann_~m_90 () Int)
(declare-fun ackermann_~n_92 () Int)
(declare-fun |ackermann_#in~m_93| () Int)
(declare-fun |ackermann_#in~n_93| () Int)
(declare-fun ackermann_~m_93 () Int)
(declare-fun ackermann_~n_94 () Int)
(declare-fun ackermann_~m_94 () Int)
(declare-fun |ackermann_#res_95| () Int)
(declare-fun ackermann_~n_95 () Int)
(declare-fun ackermann_~m_95 () Int)
(declare-fun |ackermann_#res_97| () Int)
(declare-fun |ackermann_#t~ret4_97| () Int)
(declare-fun |ackermann_#res_98| () Int)
(declare-fun |ackermann_#t~ret4_98| () Int)
(declare-fun |ackermann_#res_100| () Int)
(declare-fun |ackermann_#t~ret5_100| () Int)
(declare-fun |ackermann_#t~ret5_102| () Int)
(declare-fun |ackermann_#in~m_102| () Int)
(declare-fun |ackermann_#in~n_102| () Int)
(declare-fun ackermann_~m_102 () Int)
(declare-fun ackermann_~n_103 () Int)
(declare-fun ackermann_~m_103 () Int)
(declare-fun |ackermann_#res_104| () Int)
(declare-fun ackermann_~n_104 () Int)
(declare-fun ackermann_~m_104 () Int)
(declare-fun |ackermann_#res_106| () Int)
(declare-fun |ackermann_#t~ret6_106| () Int)
(declare-fun |ackermann_#res_107| () Int)
(declare-fun |ackermann_#t~ret6_107| () Int)
(declare-fun |ackermann_#t~ret5_107| () Int)
(declare-fun |ackermann_#res_109| () Int)
(declare-fun |ackermann_#t~ret5_109| () Int)
(declare-fun |ackermann_#t~ret5_111| () Int)
(declare-fun |ackermann_#in~m_111| () Int)
(declare-fun |ackermann_#in~n_111| () Int)
(declare-fun ackermann_~m_111 () Int)
(declare-fun ackermann_~n_112 () Int)
(declare-fun ackermann_~m_112 () Int)
(declare-fun |ackermann_#res_113| () Int)
(declare-fun ackermann_~n_113 () Int)
(declare-fun ackermann_~m_113 () Int)
(declare-fun |ackermann_#res_115| () Int)
(declare-fun |ackermann_#t~ret6_115| () Int)
(declare-fun |ackermann_#res_116| () Int)
(declare-fun |ackermann_#t~ret6_116| () Int)
(declare-fun |ackermann_#t~ret5_116| () Int)
(declare-fun |ackermann_#res_118| () Int)
(declare-fun |ackermann_#t~ret5_118| () Int)
(declare-fun |ackermann_#t~ret5_120| () Int)
(declare-fun |ackermann_#in~m_120| () Int)
(declare-fun |ackermann_#in~n_120| () Int)
(declare-fun ackermann_~m_120 () Int)
(declare-fun ackermann_~n_121 () Int)
(declare-fun ackermann_~m_121 () Int)
(declare-fun |ackermann_#res_122| () Int)
(declare-fun ackermann_~n_122 () Int)
(declare-fun ackermann_~m_122 () Int)
(declare-fun |ackermann_#res_124| () Int)
(declare-fun |ackermann_#t~ret6_124| () Int)
(declare-fun |ackermann_#res_125| () Int)
(declare-fun |ackermann_#t~ret6_125| () Int)
(declare-fun |ackermann_#t~ret5_125| () Int)
(declare-fun |ackermann_#res_127| () Int)
(declare-fun |ackermann_#t~ret6_127| () Int)
(declare-fun |ackermann_#res_128| () Int)
(declare-fun |ackermann_#t~ret6_128| () Int)
(declare-fun |ackermann_#t~ret5_128| () Int)
(declare-fun |ackermann_#res_130| () Int)
(declare-fun |main_#t~ret9_130| () Int)
(declare-fun main_~result~0_131 () Int)
(declare-fun |main_#t~ret9_131| () Int)
(declare-fun main_~result~0_132 () Int)
(declare-fun main_~m~0_132 () Int)
(declare-fun main_~n~0_132 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 14 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (<= main_~m~0_4 2147483647) (<= 0 (+ main_~m~0_4 2147483648))) :named ssa_4))
(assert (! (and (<= main_~n~0_5 2147483647) (<= 0 (+ main_~n~0_5 2147483648)) (<= main_~m~0_4 3) (<= 0 main_~m~0_4)) :named ssa_5))
(assert (! (and (<= 0 main_~n~0_5) (<= main_~n~0_5 23)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= main_~n~0_5 |ackermann_#in~n_7|) (= main_~m~0_4 |ackermann_#in~m_7|)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (not (= ackermann_~n_8 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_8 (+ |ackermann_#in~n_11| 1)) (= |ackermann_#in~m_11| ackermann_~m_8)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (not (= ackermann_~n_12 0)) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_12 (+ |ackermann_#in~n_15| 1)) (= |ackermann_#in~m_15| ackermann_~m_12)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (not (= ackermann_~m_16 0)) :named ssa_17))
(assert (! (= ackermann_~n_16 0) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_16 (+ |ackermann_#in~m_19| 1)) (= |ackermann_#in~n_19| 1)) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= ackermann_~n_20 |ackermann_#in~n_19|) (= ackermann_~m_20 |ackermann_#in~m_19|)) :named ssa_20))
(assert (! (not (= ackermann_~m_20 0)) :named ssa_21))
(assert (! (not (= ackermann_~n_20 0)) :named ssa_22))
(assert (! true :named ssa_23_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_20 (+ |ackermann_#in~n_23| 1)) (= |ackermann_#in~m_23| ackermann_~m_20)) :named ssa_23_LocVarAssigCall))
(assert (! true :named ssa_23_OldVarAssigCall))
(assert (! (and (= ackermann_~n_24 |ackermann_#in~n_23|) (= ackermann_~m_24 |ackermann_#in~m_23|)) :named ssa_24))
(assert (! (not (= ackermann_~m_24 0)) :named ssa_25))
(assert (! (= ackermann_~n_24 0) :named ssa_26))
(assert (! true :named ssa_27_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_24 (+ |ackermann_#in~m_27| 1)) (= |ackermann_#in~n_27| 1)) :named ssa_27_LocVarAssigCall))
(assert (! true :named ssa_27_OldVarAssigCall))
(assert (! (and (= ackermann_~n_28 |ackermann_#in~n_27|) (= ackermann_~m_28 |ackermann_#in~m_27|)) :named ssa_28))
(assert (! (and (= |ackermann_#res_29| (+ ackermann_~n_28 1)) (= ackermann_~m_28 0)) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |ackermann_#res_29| |ackermann_#t~ret4_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_31| 2147483648)) (<= |ackermann_#t~ret4_31| 2147483647) (= |ackermann_#res_32| |ackermann_#t~ret4_31|)) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! (= |ackermann_#res_32| |ackermann_#t~ret5_34|) :named ssa_34_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_34| 2147483648)) (<= |ackermann_#t~ret5_34| 2147483647)) :named ssa_35))
(assert (! true :named ssa_36_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_36| 1) ackermann_~m_20) (= |ackermann_#in~n_36| |ackermann_#t~ret5_34|)) :named ssa_36_LocVarAssigCall))
(assert (! true :named ssa_36_OldVarAssigCall))
(assert (! (and (= ackermann_~n_37 |ackermann_#in~n_36|) (= ackermann_~m_37 |ackermann_#in~m_36|)) :named ssa_37))
(assert (! (and (= |ackermann_#res_38| (+ ackermann_~n_37 1)) (= ackermann_~m_37 0)) :named ssa_38))
(assert (! true :named ssa_39))
(assert (! (= |ackermann_#res_38| |ackermann_#t~ret6_40|) :named ssa_40_return))
(assert (! (and (= |ackermann_#res_41| |ackermann_#t~ret6_40|) (<= |ackermann_#t~ret6_40| 2147483647) (<= 0 (+ |ackermann_#t~ret6_40| 2147483648))) :named ssa_41))
(assert (! true :named ssa_42))
(assert (! (= |ackermann_#res_41| |ackermann_#t~ret4_43|) :named ssa_43_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_43| 2147483648)) (<= |ackermann_#t~ret4_43| 2147483647) (= |ackermann_#res_44| |ackermann_#t~ret4_43|)) :named ssa_44))
(assert (! true :named ssa_45))
(assert (! (= |ackermann_#res_44| |ackermann_#t~ret5_46|) :named ssa_46_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_46| 2147483648)) (<= |ackermann_#t~ret5_46| 2147483647)) :named ssa_47))
(assert (! true :named ssa_48_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_48| 1) ackermann_~m_12) (= |ackermann_#in~n_48| |ackermann_#t~ret5_46|)) :named ssa_48_LocVarAssigCall))
(assert (! true :named ssa_48_OldVarAssigCall))
(assert (! (and (= ackermann_~n_49 |ackermann_#in~n_48|) (= ackermann_~m_49 |ackermann_#in~m_48|)) :named ssa_49))
(assert (! (not (= ackermann_~m_49 0)) :named ssa_50))
(assert (! (not (= ackermann_~n_49 0)) :named ssa_51))
(assert (! true :named ssa_52_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_49 (+ |ackermann_#in~n_52| 1)) (= |ackermann_#in~m_52| ackermann_~m_49)) :named ssa_52_LocVarAssigCall))
(assert (! true :named ssa_52_OldVarAssigCall))
(assert (! (and (= ackermann_~n_53 |ackermann_#in~n_52|) (= ackermann_~m_53 |ackermann_#in~m_52|)) :named ssa_53))
(assert (! (not (= ackermann_~m_53 0)) :named ssa_54))
(assert (! (= ackermann_~n_53 0) :named ssa_55))
(assert (! true :named ssa_56_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_53 (+ |ackermann_#in~m_56| 1)) (= |ackermann_#in~n_56| 1)) :named ssa_56_LocVarAssigCall))
(assert (! true :named ssa_56_OldVarAssigCall))
(assert (! (and (= ackermann_~n_57 |ackermann_#in~n_56|) (= ackermann_~m_57 |ackermann_#in~m_56|)) :named ssa_57))
(assert (! (and (= |ackermann_#res_58| (+ ackermann_~n_57 1)) (= ackermann_~m_57 0)) :named ssa_58))
(assert (! true :named ssa_59))
(assert (! (= |ackermann_#res_58| |ackermann_#t~ret4_60|) :named ssa_60_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_60| 2147483648)) (<= |ackermann_#t~ret4_60| 2147483647) (= |ackermann_#res_61| |ackermann_#t~ret4_60|)) :named ssa_61))
(assert (! true :named ssa_62))
(assert (! (= |ackermann_#res_61| |ackermann_#t~ret5_63|) :named ssa_63_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_63| 2147483648)) (<= |ackermann_#t~ret5_63| 2147483647)) :named ssa_64))
(assert (! true :named ssa_65_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_65| 1) ackermann_~m_49) (= |ackermann_#in~n_65| |ackermann_#t~ret5_63|)) :named ssa_65_LocVarAssigCall))
(assert (! true :named ssa_65_OldVarAssigCall))
(assert (! (and (= ackermann_~n_66 |ackermann_#in~n_65|) (= ackermann_~m_66 |ackermann_#in~m_65|)) :named ssa_66))
(assert (! (and (= |ackermann_#res_67| (+ ackermann_~n_66 1)) (= ackermann_~m_66 0)) :named ssa_67))
(assert (! true :named ssa_68))
(assert (! (= |ackermann_#res_67| |ackermann_#t~ret6_69|) :named ssa_69_return))
(assert (! (and (= |ackermann_#res_70| |ackermann_#t~ret6_69|) (<= |ackermann_#t~ret6_69| 2147483647) (<= 0 (+ |ackermann_#t~ret6_69| 2147483648))) :named ssa_70))
(assert (! true :named ssa_71))
(assert (! (= |ackermann_#res_70| |ackermann_#t~ret6_72|) :named ssa_72_return))
(assert (! (and (= |ackermann_#res_73| |ackermann_#t~ret6_72|) (<= |ackermann_#t~ret6_72| 2147483647) (<= 0 (+ |ackermann_#t~ret6_72| 2147483648))) :named ssa_73))
(assert (! true :named ssa_74))
(assert (! (= |ackermann_#res_73| |ackermann_#t~ret5_75|) :named ssa_75_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_75| 2147483648)) (<= |ackermann_#t~ret5_75| 2147483647)) :named ssa_76))
(assert (! true :named ssa_77_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_77| 1) ackermann_~m_8) (= |ackermann_#in~n_77| |ackermann_#t~ret5_75|)) :named ssa_77_LocVarAssigCall))
(assert (! true :named ssa_77_OldVarAssigCall))
(assert (! (and (= ackermann_~n_78 |ackermann_#in~n_77|) (= ackermann_~m_78 |ackermann_#in~m_77|)) :named ssa_78))
(assert (! (not (= ackermann_~m_78 0)) :named ssa_79))
(assert (! (not (= ackermann_~n_78 0)) :named ssa_80))
(assert (! true :named ssa_81_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_78 (+ |ackermann_#in~n_81| 1)) (= |ackermann_#in~m_81| ackermann_~m_78)) :named ssa_81_LocVarAssigCall))
(assert (! true :named ssa_81_OldVarAssigCall))
(assert (! (and (= ackermann_~n_82 |ackermann_#in~n_81|) (= ackermann_~m_82 |ackermann_#in~m_81|)) :named ssa_82))
(assert (! (not (= ackermann_~m_82 0)) :named ssa_83))
(assert (! (not (= ackermann_~n_82 0)) :named ssa_84))
(assert (! true :named ssa_85_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_82 (+ |ackermann_#in~n_85| 1)) (= |ackermann_#in~m_85| ackermann_~m_82)) :named ssa_85_LocVarAssigCall))
(assert (! true :named ssa_85_OldVarAssigCall))
(assert (! (and (= ackermann_~n_86 |ackermann_#in~n_85|) (= ackermann_~m_86 |ackermann_#in~m_85|)) :named ssa_86))
(assert (! (not (= ackermann_~m_86 0)) :named ssa_87))
(assert (! (not (= ackermann_~n_86 0)) :named ssa_88))
(assert (! true :named ssa_89_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_86 (+ |ackermann_#in~n_89| 1)) (= |ackermann_#in~m_89| ackermann_~m_86)) :named ssa_89_LocVarAssigCall))
(assert (! true :named ssa_89_OldVarAssigCall))
(assert (! (and (= ackermann_~n_90 |ackermann_#in~n_89|) (= ackermann_~m_90 |ackermann_#in~m_89|)) :named ssa_90))
(assert (! (not (= ackermann_~m_90 0)) :named ssa_91))
(assert (! (= ackermann_~n_90 0) :named ssa_92))
(assert (! true :named ssa_93_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_90 (+ |ackermann_#in~m_93| 1)) (= |ackermann_#in~n_93| 1)) :named ssa_93_LocVarAssigCall))
(assert (! true :named ssa_93_OldVarAssigCall))
(assert (! (and (= ackermann_~n_94 |ackermann_#in~n_93|) (= ackermann_~m_94 |ackermann_#in~m_93|)) :named ssa_94))
(assert (! (and (= |ackermann_#res_95| (+ ackermann_~n_94 1)) (= ackermann_~m_94 0)) :named ssa_95))
(assert (! true :named ssa_96))
(assert (! (= |ackermann_#res_95| |ackermann_#t~ret4_97|) :named ssa_97_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_97| 2147483648)) (<= |ackermann_#t~ret4_97| 2147483647) (= |ackermann_#res_98| |ackermann_#t~ret4_97|)) :named ssa_98))
(assert (! true :named ssa_99))
(assert (! (= |ackermann_#res_98| |ackermann_#t~ret5_100|) :named ssa_100_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_100| 2147483648)) (<= |ackermann_#t~ret5_100| 2147483647)) :named ssa_101))
(assert (! true :named ssa_102_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_102| 1) ackermann_~m_86) (= |ackermann_#in~n_102| |ackermann_#t~ret5_100|)) :named ssa_102_LocVarAssigCall))
(assert (! true :named ssa_102_OldVarAssigCall))
(assert (! (and (= ackermann_~n_103 |ackermann_#in~n_102|) (= ackermann_~m_103 |ackermann_#in~m_102|)) :named ssa_103))
(assert (! (and (= |ackermann_#res_104| (+ ackermann_~n_103 1)) (= ackermann_~m_103 0)) :named ssa_104))
(assert (! true :named ssa_105))
(assert (! (= |ackermann_#res_104| |ackermann_#t~ret6_106|) :named ssa_106_return))
(assert (! (and (= |ackermann_#res_107| |ackermann_#t~ret6_106|) (<= |ackermann_#t~ret6_106| 2147483647) (<= 0 (+ |ackermann_#t~ret6_106| 2147483648))) :named ssa_107))
(assert (! true :named ssa_108))
(assert (! (= |ackermann_#res_107| |ackermann_#t~ret5_109|) :named ssa_109_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_109| 2147483648)) (<= |ackermann_#t~ret5_109| 2147483647)) :named ssa_110))
(assert (! true :named ssa_111_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_111| 1) ackermann_~m_82) (= |ackermann_#in~n_111| |ackermann_#t~ret5_109|)) :named ssa_111_LocVarAssigCall))
(assert (! true :named ssa_111_OldVarAssigCall))
(assert (! (and (= ackermann_~n_112 |ackermann_#in~n_111|) (= ackermann_~m_112 |ackermann_#in~m_111|)) :named ssa_112))
(assert (! (and (= |ackermann_#res_113| (+ ackermann_~n_112 1)) (= ackermann_~m_112 0)) :named ssa_113))
(assert (! true :named ssa_114))
(assert (! (= |ackermann_#res_113| |ackermann_#t~ret6_115|) :named ssa_115_return))
(assert (! (and (= |ackermann_#res_116| |ackermann_#t~ret6_115|) (<= |ackermann_#t~ret6_115| 2147483647) (<= 0 (+ |ackermann_#t~ret6_115| 2147483648))) :named ssa_116))
(assert (! true :named ssa_117))
(assert (! (= |ackermann_#res_116| |ackermann_#t~ret5_118|) :named ssa_118_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_118| 2147483648)) (<= |ackermann_#t~ret5_118| 2147483647)) :named ssa_119))
(assert (! true :named ssa_120_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_120| 1) ackermann_~m_78) (= |ackermann_#in~n_120| |ackermann_#t~ret5_118|)) :named ssa_120_LocVarAssigCall))
(assert (! true :named ssa_120_OldVarAssigCall))
(assert (! (and (= ackermann_~n_121 |ackermann_#in~n_120|) (= ackermann_~m_121 |ackermann_#in~m_120|)) :named ssa_121))
(assert (! (and (= |ackermann_#res_122| (+ ackermann_~n_121 1)) (= ackermann_~m_121 0)) :named ssa_122))
(assert (! true :named ssa_123))
(assert (! (= |ackermann_#res_122| |ackermann_#t~ret6_124|) :named ssa_124_return))
(assert (! (and (= |ackermann_#res_125| |ackermann_#t~ret6_124|) (<= |ackermann_#t~ret6_124| 2147483647) (<= 0 (+ |ackermann_#t~ret6_124| 2147483648))) :named ssa_125))
(assert (! true :named ssa_126))
(assert (! (= |ackermann_#res_125| |ackermann_#t~ret6_127|) :named ssa_127_return))
(assert (! (and (= |ackermann_#res_128| |ackermann_#t~ret6_127|) (<= |ackermann_#t~ret6_127| 2147483647) (<= 0 (+ |ackermann_#t~ret6_127| 2147483648))) :named ssa_128))
(assert (! true :named ssa_129))
(assert (! (= |main_#t~ret9_130| |ackermann_#res_128|) :named ssa_130_return))
(assert (! (and (<= 0 (+ |main_#t~ret9_130| 2147483648)) (= main_~result~0_131 |main_#t~ret9_130|) (<= |main_#t~ret9_130| 2147483647)) :named ssa_131))
(assert (! (and (= main_~n~0_5 2) (= main_~m~0_4 2) (not (= 7 main_~result~0_131))) :named ssa_132))
(assert (! true :named ssa_133))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_13 ssa_65_OldVarAssigCall ssa_116 ssa_20 ssa_19_GlobVarAssigCall ssa_95 ssa_81_LocVarAssigCall ssa_64 ssa_99 ssa_76 ssa_88 ssa_68 ssa_125 ssa_84 ssa_44 ssa_16 ssa_57 ssa_120_OldVarAssigCall ssa_102_LocVarAssigCall ssa_15_LocVarAssigCall ssa_26 ssa_102_GlobVarAssigCall ssa_55 ssa_67 ssa_93_LocVarAssigCall ssa_56_GlobVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_74 ssa_109_return ssa_85_OldVarAssigCall ssa_10 ssa_14 ssa_96 ssa_111_OldVarAssigCall ssa_8 ssa_89_GlobVarAssigCall ssa_45 ssa_77_LocVarAssigCall ssa_9 ssa_63_return ssa_121 ssa_122 ssa_124_return ssa_85_GlobVarAssigCall ssa_47 ssa_90 ssa_25 ssa_40_return ssa_111_LocVarAssigCall ssa_94 ssa_34_return ssa_102_OldVarAssigCall ssa_53 ssa_85_LocVarAssigCall ssa_113 ssa_15_GlobVarAssigCall ssa_89_OldVarAssigCall ssa_105 ssa_23_OldVarAssigCall ssa_82 ssa_111_GlobVarAssigCall ssa_56_OldVarAssigCall ssa_31_return ssa_101 ssa_56_LocVarAssigCall ssa_69_return ssa_86 ssa_97_return ssa_48_OldVarAssigCall ssa_19_OldVarAssigCall ssa_58 ssa_108 ssa_110 ssa_7_OldVarAssigCall ssa_27_GlobVarAssigCall ssa_83 ssa_87 ssa_61 ssa_59 ssa_39 ssa_62 ssa_23_LocVarAssigCall ssa_106_return ssa_37 ssa_43_return ssa_119 ssa_38 ssa_79 ssa_100_return ssa_12 ssa_93_GlobVarAssigCall ssa_52_LocVarAssigCall ssa_115_return ssa_126 ssa_11_OldVarAssigCall ssa_128 ssa_32 ssa_50 ssa_81_GlobVarAssigCall ssa_118_return ssa_65_LocVarAssigCall ssa_81_OldVarAssigCall ssa_104 ssa_36_OldVarAssigCall ssa_103 ssa_60_return ssa_19_LocVarAssigCall ssa_93_OldVarAssigCall ssa_117 ssa_72_return ssa_89_LocVarAssigCall ssa_114 ssa_36_GlobVarAssigCall ssa_27_OldVarAssigCall ssa_28 ssa_48_GlobVarAssigCall ssa_54 ssa_22 ssa_98 ssa_51 ssa_77_OldVarAssigCall ssa_80 ssa_49 ssa_107 ssa_48_LocVarAssigCall ssa_29 ssa_127_return ssa_120_GlobVarAssigCall ssa_36_LocVarAssigCall ssa_23_GlobVarAssigCall ssa_21 ssa_78 ssa_11_GlobVarAssigCall ssa_123 ssa_18 ssa_77_GlobVarAssigCall ssa_52_OldVarAssigCall ssa_129 ssa_91 ssa_30 ssa_70 ssa_66 ssa_17 ssa_92 ssa_33 ssa_52_GlobVarAssigCall ssa_7_GlobVarAssigCall ssa_35 ssa_75_return ssa_27_LocVarAssigCall ssa_65_GlobVarAssigCall ssa_112 ssa_120_LocVarAssigCall ssa_130_return ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_71 ssa_46_return ssa_24 ssa_73) ssa_131 ssa_132 (and ssa_133 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#valid_-1| () (Array Int Int))
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (< 0 |#StackHeapBarrier_-1|) (= 12 (select |#length_-1| 3)) (= (select |#valid_-1| 3) 1) (= (select |#valid_-1| 2) 1) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#length_-1| 1) 2) (= 14 (select |#length_-1| 2)) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#valid_-1| 0) 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun main_~m~0_-2 () Int)
(declare-fun main_~n~0_-2 () Int)
(declare-fun main_~m~0_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun main_~n~0_-1 () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_10 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_15 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun |ackermann_#in~m_19| () Int)
(declare-fun |ackermann_#in~n_19| () Int)
(declare-fun ackermann_~m_19 () Int)
(declare-fun ackermann_~n_20 () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun ackermann_~n_21 () Int)
(declare-fun ackermann_~m_21 () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret4_23| () Int)
(declare-fun |ackermann_#res_24| () Int)
(declare-fun |ackermann_#t~ret4_24| () Int)
(declare-fun |ackermann_#res_26| () Int)
(declare-fun |ackermann_#t~ret5_26| () Int)
(declare-fun |ackermann_#t~ret5_28| () Int)
(declare-fun |ackermann_#in~m_28| () Int)
(declare-fun |ackermann_#in~n_28| () Int)
(declare-fun ackermann_~m_28 () Int)
(declare-fun ackermann_~n_29 () Int)
(declare-fun ackermann_~m_29 () Int)
(declare-fun |ackermann_#res_30| () Int)
(declare-fun ackermann_~n_30 () Int)
(declare-fun ackermann_~m_30 () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret6_32| () Int)
(declare-fun |ackermann_#res_33| () Int)
(declare-fun |ackermann_#t~ret6_33| () Int)
(declare-fun |ackermann_#t~ret5_33| () Int)
(declare-fun |ackermann_#res_35| () Int)
(declare-fun |ackermann_#t~ret4_35| () Int)
(declare-fun |ackermann_#res_36| () Int)
(declare-fun |ackermann_#t~ret4_36| () Int)
(declare-fun |ackermann_#res_38| () Int)
(declare-fun |ackermann_#t~ret5_38| () Int)
(declare-fun |ackermann_#t~ret5_40| () Int)
(declare-fun |ackermann_#in~m_40| () Int)
(declare-fun |ackermann_#in~n_40| () Int)
(declare-fun ackermann_~m_40 () Int)
(declare-fun ackermann_~n_41 () Int)
(declare-fun ackermann_~m_41 () Int)
(declare-fun ackermann_~n_44 () Int)
(declare-fun |ackermann_#in~m_44| () Int)
(declare-fun |ackermann_#in~n_44| () Int)
(declare-fun ackermann_~m_44 () Int)
(declare-fun ackermann_~n_45 () Int)
(declare-fun ackermann_~m_45 () Int)
(declare-fun ackermann_~n_47 () Int)
(declare-fun |ackermann_#in~m_48| () Int)
(declare-fun |ackermann_#in~n_48| () Int)
(declare-fun ackermann_~m_48 () Int)
(declare-fun ackermann_~n_49 () Int)
(declare-fun ackermann_~m_49 () Int)
(declare-fun |ackermann_#res_50| () Int)
(declare-fun ackermann_~n_50 () Int)
(declare-fun ackermann_~m_50 () Int)
(declare-fun |ackermann_#res_52| () Int)
(declare-fun |ackermann_#t~ret4_52| () Int)
(declare-fun |ackermann_#res_53| () Int)
(declare-fun |ackermann_#t~ret4_53| () Int)
(declare-fun |ackermann_#res_55| () Int)
(declare-fun |ackermann_#t~ret5_55| () Int)
(declare-fun |ackermann_#t~ret5_57| () Int)
(declare-fun |ackermann_#in~m_57| () Int)
(declare-fun |ackermann_#in~n_57| () Int)
(declare-fun ackermann_~m_57 () Int)
(declare-fun ackermann_~n_58 () Int)
(declare-fun ackermann_~m_58 () Int)
(declare-fun |ackermann_#res_59| () Int)
(declare-fun ackermann_~n_59 () Int)
(declare-fun ackermann_~m_59 () Int)
(declare-fun |ackermann_#res_61| () Int)
(declare-fun |ackermann_#t~ret6_61| () Int)
(declare-fun |ackermann_#res_62| () Int)
(declare-fun |ackermann_#t~ret6_62| () Int)
(declare-fun |ackermann_#t~ret5_62| () Int)
(declare-fun |ackermann_#res_64| () Int)
(declare-fun |ackermann_#t~ret6_64| () Int)
(declare-fun |ackermann_#res_65| () Int)
(declare-fun |ackermann_#t~ret6_65| () Int)
(declare-fun |ackermann_#t~ret5_65| () Int)
(declare-fun |ackermann_#res_67| () Int)
(declare-fun |ackermann_#t~ret5_67| () Int)
(declare-fun |ackermann_#t~ret5_69| () Int)
(declare-fun |ackermann_#in~m_69| () Int)
(declare-fun |ackermann_#in~n_69| () Int)
(declare-fun ackermann_~m_69 () Int)
(declare-fun ackermann_~n_70 () Int)
(declare-fun ackermann_~m_70 () Int)
(declare-fun ackermann_~n_73 () Int)
(declare-fun |ackermann_#in~m_73| () Int)
(declare-fun |ackermann_#in~n_73| () Int)
(declare-fun ackermann_~m_73 () Int)
(declare-fun ackermann_~n_74 () Int)
(declare-fun ackermann_~m_74 () Int)
(declare-fun ackermann_~n_77 () Int)
(declare-fun |ackermann_#in~m_77| () Int)
(declare-fun |ackermann_#in~n_77| () Int)
(declare-fun ackermann_~m_77 () Int)
(declare-fun ackermann_~n_78 () Int)
(declare-fun ackermann_~m_78 () Int)
(declare-fun ackermann_~n_81 () Int)
(declare-fun |ackermann_#in~m_81| () Int)
(declare-fun |ackermann_#in~n_81| () Int)
(declare-fun ackermann_~m_81 () Int)
(declare-fun ackermann_~n_82 () Int)
(declare-fun ackermann_~m_82 () Int)
(declare-fun ackermann_~n_84 () Int)
(declare-fun |ackermann_#in~m_85| () Int)
(declare-fun |ackermann_#in~n_85| () Int)
(declare-fun ackermann_~m_85 () Int)
(declare-fun ackermann_~n_86 () Int)
(declare-fun ackermann_~m_86 () Int)
(declare-fun |ackermann_#res_87| () Int)
(declare-fun ackermann_~n_87 () Int)
(declare-fun ackermann_~m_87 () Int)
(declare-fun |ackermann_#res_89| () Int)
(declare-fun |ackermann_#t~ret4_89| () Int)
(declare-fun |ackermann_#res_90| () Int)
(declare-fun |ackermann_#t~ret4_90| () Int)
(declare-fun |ackermann_#res_92| () Int)
(declare-fun |ackermann_#t~ret5_92| () Int)
(declare-fun |ackermann_#t~ret5_94| () Int)
(declare-fun |ackermann_#in~m_94| () Int)
(declare-fun |ackermann_#in~n_94| () Int)
(declare-fun ackermann_~m_94 () Int)
(declare-fun ackermann_~n_95 () Int)
(declare-fun ackermann_~m_95 () Int)
(declare-fun |ackermann_#res_96| () Int)
(declare-fun ackermann_~n_96 () Int)
(declare-fun ackermann_~m_96 () Int)
(declare-fun |ackermann_#res_98| () Int)
(declare-fun |ackermann_#t~ret6_98| () Int)
(declare-fun |ackermann_#res_99| () Int)
(declare-fun |ackermann_#t~ret6_99| () Int)
(declare-fun |ackermann_#t~ret5_99| () Int)
(declare-fun |ackermann_#res_101| () Int)
(declare-fun |ackermann_#t~ret5_101| () Int)
(declare-fun |ackermann_#t~ret5_103| () Int)
(declare-fun |ackermann_#in~m_103| () Int)
(declare-fun |ackermann_#in~n_103| () Int)
(declare-fun ackermann_~m_103 () Int)
(declare-fun ackermann_~n_104 () Int)
(declare-fun ackermann_~m_104 () Int)
(declare-fun |ackermann_#res_105| () Int)
(declare-fun ackermann_~n_105 () Int)
(declare-fun ackermann_~m_105 () Int)
(declare-fun |ackermann_#res_107| () Int)
(declare-fun |ackermann_#t~ret6_107| () Int)
(declare-fun |ackermann_#res_108| () Int)
(declare-fun |ackermann_#t~ret6_108| () Int)
(declare-fun |ackermann_#t~ret5_108| () Int)
(declare-fun |ackermann_#res_110| () Int)
(declare-fun |ackermann_#t~ret5_110| () Int)
(declare-fun |ackermann_#t~ret5_112| () Int)
(declare-fun |ackermann_#in~m_112| () Int)
(declare-fun |ackermann_#in~n_112| () Int)
(declare-fun ackermann_~m_112 () Int)
(declare-fun ackermann_~n_113 () Int)
(declare-fun ackermann_~m_113 () Int)
(declare-fun |ackermann_#res_114| () Int)
(declare-fun ackermann_~n_114 () Int)
(declare-fun ackermann_~m_114 () Int)
(declare-fun |ackermann_#res_116| () Int)
(declare-fun |ackermann_#t~ret6_116| () Int)
(declare-fun |ackermann_#res_117| () Int)
(declare-fun |ackermann_#t~ret6_117| () Int)
(declare-fun |ackermann_#t~ret5_117| () Int)
(declare-fun |ackermann_#res_119| () Int)
(declare-fun |ackermann_#t~ret6_119| () Int)
(declare-fun |ackermann_#res_120| () Int)
(declare-fun |ackermann_#t~ret6_120| () Int)
(declare-fun |ackermann_#t~ret5_120| () Int)
(declare-fun |ackermann_#res_122| () Int)
(declare-fun |main_#t~ret9_122| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (= ackermann_~n_8 0) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_8 (+ |ackermann_#in~m_11| 1)) (= |ackermann_#in~n_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (not (= ackermann_~n_12 0)) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_12 (+ |ackermann_#in~n_15| 1)) (= |ackermann_#in~m_15| ackermann_~m_12)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (not (= ackermann_~m_16 0)) :named ssa_17))
(assert (! (= ackermann_~n_16 0) :named ssa_18))
(assert (! true :named ssa_19_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_16 (+ |ackermann_#in~m_19| 1)) (= |ackermann_#in~n_19| 1)) :named ssa_19_LocVarAssigCall))
(assert (! true :named ssa_19_OldVarAssigCall))
(assert (! (and (= ackermann_~n_20 |ackermann_#in~n_19|) (= ackermann_~m_20 |ackermann_#in~m_19|)) :named ssa_20))
(assert (! (and (= |ackermann_#res_21| (+ ackermann_~n_20 1)) (= ackermann_~m_20 0)) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret4_23|) :named ssa_23_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_23| 2147483648)) (<= |ackermann_#t~ret4_23| 2147483647) (= |ackermann_#res_24| |ackermann_#t~ret4_23|)) :named ssa_24))
(assert (! true :named ssa_25))
(assert (! (= |ackermann_#res_24| |ackermann_#t~ret5_26|) :named ssa_26_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_26| 2147483648)) (<= |ackermann_#t~ret5_26| 2147483647)) :named ssa_27))
(assert (! true :named ssa_28_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_28| 1) ackermann_~m_12) (= |ackermann_#in~n_28| |ackermann_#t~ret5_26|)) :named ssa_28_LocVarAssigCall))
(assert (! true :named ssa_28_OldVarAssigCall))
(assert (! (and (= ackermann_~n_29 |ackermann_#in~n_28|) (= ackermann_~m_29 |ackermann_#in~m_28|)) :named ssa_29))
(assert (! (and (= |ackermann_#res_30| (+ ackermann_~n_29 1)) (= ackermann_~m_29 0)) :named ssa_30))
(assert (! true :named ssa_31))
(assert (! (= |ackermann_#res_30| |ackermann_#t~ret6_32|) :named ssa_32_return))
(assert (! (and (= |ackermann_#res_33| |ackermann_#t~ret6_32|) (<= |ackermann_#t~ret6_32| 2147483647) (<= 0 (+ |ackermann_#t~ret6_32| 2147483648))) :named ssa_33))
(assert (! true :named ssa_34))
(assert (! (= |ackermann_#res_33| |ackermann_#t~ret4_35|) :named ssa_35_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_35| 2147483648)) (<= |ackermann_#t~ret4_35| 2147483647) (= |ackermann_#res_36| |ackermann_#t~ret4_35|)) :named ssa_36))
(assert (! true :named ssa_37))
(assert (! (= |ackermann_#res_36| |ackermann_#t~ret5_38|) :named ssa_38_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_38| 2147483648)) (<= |ackermann_#t~ret5_38| 2147483647)) :named ssa_39))
(assert (! true :named ssa_40_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_40| 1) ackermann_~m_4) (= |ackermann_#in~n_40| |ackermann_#t~ret5_38|)) :named ssa_40_LocVarAssigCall))
(assert (! true :named ssa_40_OldVarAssigCall))
(assert (! (and (= ackermann_~n_41 |ackermann_#in~n_40|) (= ackermann_~m_41 |ackermann_#in~m_40|)) :named ssa_41))
(assert (! (not (= ackermann_~m_41 0)) :named ssa_42))
(assert (! (not (= ackermann_~n_41 0)) :named ssa_43))
(assert (! true :named ssa_44_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_41 (+ |ackermann_#in~n_44| 1)) (= |ackermann_#in~m_44| ackermann_~m_41)) :named ssa_44_LocVarAssigCall))
(assert (! true :named ssa_44_OldVarAssigCall))
(assert (! (and (= ackermann_~n_45 |ackermann_#in~n_44|) (= ackermann_~m_45 |ackermann_#in~m_44|)) :named ssa_45))
(assert (! (not (= ackermann_~m_45 0)) :named ssa_46))
(assert (! (= ackermann_~n_45 0) :named ssa_47))
(assert (! true :named ssa_48_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_45 (+ |ackermann_#in~m_48| 1)) (= |ackermann_#in~n_48| 1)) :named ssa_48_LocVarAssigCall))
(assert (! true :named ssa_48_OldVarAssigCall))
(assert (! (and (= ackermann_~n_49 |ackermann_#in~n_48|) (= ackermann_~m_49 |ackermann_#in~m_48|)) :named ssa_49))
(assert (! (and (= |ackermann_#res_50| (+ ackermann_~n_49 1)) (= ackermann_~m_49 0)) :named ssa_50))
(assert (! true :named ssa_51))
(assert (! (= |ackermann_#res_50| |ackermann_#t~ret4_52|) :named ssa_52_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_52| 2147483648)) (<= |ackermann_#t~ret4_52| 2147483647) (= |ackermann_#res_53| |ackermann_#t~ret4_52|)) :named ssa_53))
(assert (! true :named ssa_54))
(assert (! (= |ackermann_#res_53| |ackermann_#t~ret5_55|) :named ssa_55_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_55| 2147483648)) (<= |ackermann_#t~ret5_55| 2147483647)) :named ssa_56))
(assert (! true :named ssa_57_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_57| 1) ackermann_~m_41) (= |ackermann_#in~n_57| |ackermann_#t~ret5_55|)) :named ssa_57_LocVarAssigCall))
(assert (! true :named ssa_57_OldVarAssigCall))
(assert (! (and (= ackermann_~n_58 |ackermann_#in~n_57|) (= ackermann_~m_58 |ackermann_#in~m_57|)) :named ssa_58))
(assert (! (and (= |ackermann_#res_59| (+ ackermann_~n_58 1)) (= ackermann_~m_58 0)) :named ssa_59))
(assert (! true :named ssa_60))
(assert (! (= |ackermann_#res_59| |ackermann_#t~ret6_61|) :named ssa_61_return))
(assert (! (and (= |ackermann_#res_62| |ackermann_#t~ret6_61|) (<= |ackermann_#t~ret6_61| 2147483647) (<= 0 (+ |ackermann_#t~ret6_61| 2147483648))) :named ssa_62))
(assert (! true :named ssa_63))
(assert (! (= |ackermann_#res_62| |ackermann_#t~ret6_64|) :named ssa_64_return))
(assert (! (and (= |ackermann_#res_65| |ackermann_#t~ret6_64|) (<= |ackermann_#t~ret6_64| 2147483647) (<= 0 (+ |ackermann_#t~ret6_64| 2147483648))) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! (= |ackermann_#res_65| |ackermann_#t~ret5_67|) :named ssa_67_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_67| 2147483648)) (<= |ackermann_#t~ret5_67| 2147483647)) :named ssa_68))
(assert (! true :named ssa_69_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_69| 1) ackermann_~m_0) (= |ackermann_#in~n_69| |ackermann_#t~ret5_67|)) :named ssa_69_LocVarAssigCall))
(assert (! true :named ssa_69_OldVarAssigCall))
(assert (! (and (= ackermann_~n_70 |ackermann_#in~n_69|) (= ackermann_~m_70 |ackermann_#in~m_69|)) :named ssa_70))
(assert (! (not (= ackermann_~m_70 0)) :named ssa_71))
(assert (! (not (= ackermann_~n_70 0)) :named ssa_72))
(assert (! true :named ssa_73_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_70 (+ |ackermann_#in~n_73| 1)) (= |ackermann_#in~m_73| ackermann_~m_70)) :named ssa_73_LocVarAssigCall))
(assert (! true :named ssa_73_OldVarAssigCall))
(assert (! (and (= ackermann_~n_74 |ackermann_#in~n_73|) (= ackermann_~m_74 |ackermann_#in~m_73|)) :named ssa_74))
(assert (! (not (= ackermann_~m_74 0)) :named ssa_75))
(assert (! (not (= ackermann_~n_74 0)) :named ssa_76))
(assert (! true :named ssa_77_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_74 (+ |ackermann_#in~n_77| 1)) (= |ackermann_#in~m_77| ackermann_~m_74)) :named ssa_77_LocVarAssigCall))
(assert (! true :named ssa_77_OldVarAssigCall))
(assert (! (and (= ackermann_~n_78 |ackermann_#in~n_77|) (= ackermann_~m_78 |ackermann_#in~m_77|)) :named ssa_78))
(assert (! (not (= ackermann_~m_78 0)) :named ssa_79))
(assert (! (not (= ackermann_~n_78 0)) :named ssa_80))
(assert (! true :named ssa_81_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_78 (+ |ackermann_#in~n_81| 1)) (= |ackermann_#in~m_81| ackermann_~m_78)) :named ssa_81_LocVarAssigCall))
(assert (! true :named ssa_81_OldVarAssigCall))
(assert (! (and (= ackermann_~n_82 |ackermann_#in~n_81|) (= ackermann_~m_82 |ackermann_#in~m_81|)) :named ssa_82))
(assert (! (not (= ackermann_~m_82 0)) :named ssa_83))
(assert (! (= ackermann_~n_82 0) :named ssa_84))
(assert (! true :named ssa_85_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_82 (+ |ackermann_#in~m_85| 1)) (= |ackermann_#in~n_85| 1)) :named ssa_85_LocVarAssigCall))
(assert (! true :named ssa_85_OldVarAssigCall))
(assert (! (and (= ackermann_~n_86 |ackermann_#in~n_85|) (= ackermann_~m_86 |ackermann_#in~m_85|)) :named ssa_86))
(assert (! (and (= |ackermann_#res_87| (+ ackermann_~n_86 1)) (= ackermann_~m_86 0)) :named ssa_87))
(assert (! true :named ssa_88))
(assert (! (= |ackermann_#res_87| |ackermann_#t~ret4_89|) :named ssa_89_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_89| 2147483648)) (<= |ackermann_#t~ret4_89| 2147483647) (= |ackermann_#res_90| |ackermann_#t~ret4_89|)) :named ssa_90))
(assert (! true :named ssa_91))
(assert (! (= |ackermann_#res_90| |ackermann_#t~ret5_92|) :named ssa_92_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_92| 2147483648)) (<= |ackermann_#t~ret5_92| 2147483647)) :named ssa_93))
(assert (! true :named ssa_94_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_94| 1) ackermann_~m_78) (= |ackermann_#in~n_94| |ackermann_#t~ret5_92|)) :named ssa_94_LocVarAssigCall))
(assert (! true :named ssa_94_OldVarAssigCall))
(assert (! (and (= ackermann_~n_95 |ackermann_#in~n_94|) (= ackermann_~m_95 |ackermann_#in~m_94|)) :named ssa_95))
(assert (! (and (= |ackermann_#res_96| (+ ackermann_~n_95 1)) (= ackermann_~m_95 0)) :named ssa_96))
(assert (! true :named ssa_97))
(assert (! (= |ackermann_#res_96| |ackermann_#t~ret6_98|) :named ssa_98_return))
(assert (! (and (= |ackermann_#res_99| |ackermann_#t~ret6_98|) (<= |ackermann_#t~ret6_98| 2147483647) (<= 0 (+ |ackermann_#t~ret6_98| 2147483648))) :named ssa_99))
(assert (! true :named ssa_100))
(assert (! (= |ackermann_#res_99| |ackermann_#t~ret5_101|) :named ssa_101_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_101| 2147483648)) (<= |ackermann_#t~ret5_101| 2147483647)) :named ssa_102))
(assert (! true :named ssa_103_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_103| 1) ackermann_~m_74) (= |ackermann_#in~n_103| |ackermann_#t~ret5_101|)) :named ssa_103_LocVarAssigCall))
(assert (! true :named ssa_103_OldVarAssigCall))
(assert (! (and (= ackermann_~n_104 |ackermann_#in~n_103|) (= ackermann_~m_104 |ackermann_#in~m_103|)) :named ssa_104))
(assert (! (and (= |ackermann_#res_105| (+ ackermann_~n_104 1)) (= ackermann_~m_104 0)) :named ssa_105))
(assert (! true :named ssa_106))
(assert (! (= |ackermann_#res_105| |ackermann_#t~ret6_107|) :named ssa_107_return))
(assert (! (and (= |ackermann_#res_108| |ackermann_#t~ret6_107|) (<= |ackermann_#t~ret6_107| 2147483647) (<= 0 (+ |ackermann_#t~ret6_107| 2147483648))) :named ssa_108))
(assert (! true :named ssa_109))
(assert (! (= |ackermann_#res_108| |ackermann_#t~ret5_110|) :named ssa_110_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_110| 2147483648)) (<= |ackermann_#t~ret5_110| 2147483647)) :named ssa_111))
(assert (! true :named ssa_112_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_112| 1) ackermann_~m_70) (= |ackermann_#in~n_112| |ackermann_#t~ret5_110|)) :named ssa_112_LocVarAssigCall))
(assert (! true :named ssa_112_OldVarAssigCall))
(assert (! (and (= ackermann_~n_113 |ackermann_#in~n_112|) (= ackermann_~m_113 |ackermann_#in~m_112|)) :named ssa_113))
(assert (! (and (= |ackermann_#res_114| (+ ackermann_~n_113 1)) (= ackermann_~m_113 0)) :named ssa_114))
(assert (! true :named ssa_115))
(assert (! (= |ackermann_#res_114| |ackermann_#t~ret6_116|) :named ssa_116_return))
(assert (! (and (= |ackermann_#res_117| |ackermann_#t~ret6_116|) (<= |ackermann_#t~ret6_116| 2147483647) (<= 0 (+ |ackermann_#t~ret6_116| 2147483648))) :named ssa_117))
(assert (! true :named ssa_118))
(assert (! (= |ackermann_#res_117| |ackermann_#t~ret6_119|) :named ssa_119_return))
(assert (! (and (= |ackermann_#res_120| |ackermann_#t~ret6_119|) (<= |ackermann_#t~ret6_119| 2147483647) (<= 0 (+ |ackermann_#t~ret6_119| 2147483648))) :named ssa_120))
(assert (! true :named ssa_121))
(assert (! (= |main_#t~ret9_122| |ackermann_#res_120|) :named ssa_122_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= main_~n~0_-2 |ackermann_#in~n_-1|) (= main_~m~0_-2 |ackermann_#in~m_-1|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_57_OldVarAssigCall ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_19_GlobVarAssigCall ssa_44_LocVarAssigCall ssa_31 ssa_60 ssa_55_return ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_38_return ssa_40_OldVarAssigCall ssa_8 ssa_45 ssa_40_LocVarAssigCall ssa_9 ssa_46 ssa_47 ssa_25 ssa_53 ssa_15_GlobVarAssigCall ssa_44_OldVarAssigCall ssa_3_GlobVarAssigCall ssa_44_GlobVarAssigCall ssa_67_return ssa_26_return ssa_48_OldVarAssigCall ssa_19_OldVarAssigCall ssa_58 ssa_7_OldVarAssigCall ssa_32_return ssa_59 ssa_39 ssa_62 ssa_40_GlobVarAssigCall ssa_43 ssa_61_return ssa_37 ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_50 ssa_28_OldVarAssigCall ssa_19_LocVarAssigCall ssa_65 ssa_64_return ssa_48_GlobVarAssigCall ssa_54 ssa_4 ssa_22 ssa_51 ssa_36 ssa_49 ssa_35_return ssa_48_LocVarAssigCall ssa_29 ssa_63 ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_23_return ssa_30 ssa_66 ssa_17 ssa_56 ssa_28_GlobVarAssigCall ssa_57_LocVarAssigCall ssa_33 ssa_7_GlobVarAssigCall ssa_28_LocVarAssigCall ssa_15_OldVarAssigCall ssa_41 ssa_42 ssa_57_GlobVarAssigCall ssa_24 ssa_52_return) ssa_68 (and ssa_75 ssa_115 ssa_95 ssa_81_LocVarAssigCall ssa_89_return ssa_99 ssa_76 ssa_88 ssa_84 ssa_109 ssa_100 ssa_69_OldVarAssigCall ssa_74 ssa_112_LocVarAssigCall ssa_85_OldVarAssigCall ssa_96 ssa_77_LocVarAssigCall ssa_110_return ssa_94_LocVarAssigCall ssa_116_return ssa_85_GlobVarAssigCall ssa_111 ssa_90 ssa_85_LocVarAssigCall ssa_113 ssa_103_GlobVarAssigCall ssa_105 ssa_82 ssa_86 ssa_112_OldVarAssigCall ssa_98_return ssa_73_GlobVarAssigCall ssa_108 ssa_83 ssa_87 ssa_92_return ssa_118 ssa_69_GlobVarAssigCall ssa_101_return ssa_72 ssa_107_return ssa_103_LocVarAssigCall ssa_79 ssa_97 ssa_81_GlobVarAssigCall ssa_94_OldVarAssigCall ssa_81_OldVarAssigCall ssa_104 ssa_117 ssa_114 ssa_106 ssa_73_LocVarAssigCall ssa_112_GlobVarAssigCall ssa_119_return ssa_77_OldVarAssigCall ssa_80 ssa_102 ssa_78 ssa_103_OldVarAssigCall ssa_77_GlobVarAssigCall ssa_69_LocVarAssigCall ssa_91 ssa_70 ssa_94_GlobVarAssigCall ssa_93 ssa_73_OldVarAssigCall ssa_71) ssa_120 ssa_121 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_122_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_11 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_14 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun |ackermann_#res_17| () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_19| () Int)
(declare-fun |ackermann_#t~ret4_19| () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret4_20| () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun |ackermann_#t~ret5_22| () Int)
(declare-fun |ackermann_#t~ret5_24| () Int)
(declare-fun |ackermann_#in~m_24| () Int)
(declare-fun |ackermann_#in~n_24| () Int)
(declare-fun ackermann_~m_24 () Int)
(declare-fun ackermann_~n_25 () Int)
(declare-fun ackermann_~m_25 () Int)
(declare-fun |ackermann_#res_26| () Int)
(declare-fun ackermann_~n_26 () Int)
(declare-fun ackermann_~m_26 () Int)
(declare-fun |ackermann_#res_28| () Int)
(declare-fun |ackermann_#t~ret6_28| () Int)
(declare-fun |ackermann_#res_29| () Int)
(declare-fun |ackermann_#t~ret6_29| () Int)
(declare-fun |ackermann_#t~ret5_29| () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun |ackermann_#t~ret4_31| () Int)
(declare-fun |ackermann_#res_32| () Int)
(declare-fun |ackermann_#t~ret4_32| () Int)
(declare-fun |ackermann_#res_34| () Int)
(declare-fun |ackermann_#t~ret5_34| () Int)
(declare-fun |ackermann_#t~ret5_36| () Int)
(declare-fun |ackermann_#in~m_36| () Int)
(declare-fun |ackermann_#in~n_36| () Int)
(declare-fun ackermann_~m_36 () Int)
(declare-fun ackermann_~n_37 () Int)
(declare-fun ackermann_~m_37 () Int)
(declare-fun ackermann_~n_40 () Int)
(declare-fun |ackermann_#in~m_40| () Int)
(declare-fun |ackermann_#in~n_40| () Int)
(declare-fun ackermann_~m_40 () Int)
(declare-fun ackermann_~n_41 () Int)
(declare-fun ackermann_~m_41 () Int)
(declare-fun ackermann_~n_43 () Int)
(declare-fun |ackermann_#in~m_44| () Int)
(declare-fun |ackermann_#in~n_44| () Int)
(declare-fun ackermann_~m_44 () Int)
(declare-fun ackermann_~n_45 () Int)
(declare-fun ackermann_~m_45 () Int)
(declare-fun |ackermann_#res_46| () Int)
(declare-fun ackermann_~n_46 () Int)
(declare-fun ackermann_~m_46 () Int)
(declare-fun |ackermann_#res_48| () Int)
(declare-fun |ackermann_#t~ret4_48| () Int)
(declare-fun |ackermann_#res_49| () Int)
(declare-fun |ackermann_#t~ret4_49| () Int)
(declare-fun |ackermann_#res_51| () Int)
(declare-fun |ackermann_#t~ret5_51| () Int)
(declare-fun |ackermann_#t~ret5_53| () Int)
(declare-fun |ackermann_#in~m_53| () Int)
(declare-fun |ackermann_#in~n_53| () Int)
(declare-fun ackermann_~m_53 () Int)
(declare-fun ackermann_~n_54 () Int)
(declare-fun ackermann_~m_54 () Int)
(declare-fun |ackermann_#res_55| () Int)
(declare-fun ackermann_~n_55 () Int)
(declare-fun ackermann_~m_55 () Int)
(declare-fun |ackermann_#res_57| () Int)
(declare-fun |ackermann_#t~ret6_57| () Int)
(declare-fun |ackermann_#res_58| () Int)
(declare-fun |ackermann_#t~ret6_58| () Int)
(declare-fun |ackermann_#t~ret5_58| () Int)
(declare-fun |ackermann_#res_60| () Int)
(declare-fun |ackermann_#t~ret6_60| () Int)
(declare-fun |ackermann_#res_61| () Int)
(declare-fun |ackermann_#t~ret6_61| () Int)
(declare-fun |ackermann_#t~ret5_61| () Int)
(declare-fun |ackermann_#res_63| () Int)
(declare-fun |ackermann_#t~ret5_63| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (not (= ackermann_~n_8 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_8 (+ |ackermann_#in~n_11| 1)) (= |ackermann_#in~m_11| ackermann_~m_8)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (= ackermann_~n_12 0) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_12 (+ |ackermann_#in~m_15| 1)) (= |ackermann_#in~n_15| 1)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (and (= |ackermann_#res_17| (+ ackermann_~n_16 1)) (= ackermann_~m_16 0)) :named ssa_17))
(assert (! true :named ssa_18))
(assert (! (= |ackermann_#res_17| |ackermann_#t~ret4_19|) :named ssa_19_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_19| 2147483648)) (<= |ackermann_#t~ret4_19| 2147483647) (= |ackermann_#res_20| |ackermann_#t~ret4_19|)) :named ssa_20))
(assert (! true :named ssa_21))
(assert (! (= |ackermann_#res_20| |ackermann_#t~ret5_22|) :named ssa_22_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_22| 2147483648)) (<= |ackermann_#t~ret5_22| 2147483647)) :named ssa_23))
(assert (! true :named ssa_24_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_24| 1) ackermann_~m_8) (= |ackermann_#in~n_24| |ackermann_#t~ret5_22|)) :named ssa_24_LocVarAssigCall))
(assert (! true :named ssa_24_OldVarAssigCall))
(assert (! (and (= ackermann_~n_25 |ackermann_#in~n_24|) (= ackermann_~m_25 |ackermann_#in~m_24|)) :named ssa_25))
(assert (! (and (= |ackermann_#res_26| (+ ackermann_~n_25 1)) (= ackermann_~m_25 0)) :named ssa_26))
(assert (! true :named ssa_27))
(assert (! (= |ackermann_#res_26| |ackermann_#t~ret6_28|) :named ssa_28_return))
(assert (! (and (= |ackermann_#res_29| |ackermann_#t~ret6_28|) (<= |ackermann_#t~ret6_28| 2147483647) (<= 0 (+ |ackermann_#t~ret6_28| 2147483648))) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |ackermann_#res_29| |ackermann_#t~ret4_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_31| 2147483648)) (<= |ackermann_#t~ret4_31| 2147483647) (= |ackermann_#res_32| |ackermann_#t~ret4_31|)) :named ssa_32))
(assert (! true :named ssa_33))
(assert (! (= |ackermann_#res_32| |ackermann_#t~ret5_34|) :named ssa_34_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_34| 2147483648)) (<= |ackermann_#t~ret5_34| 2147483647)) :named ssa_35))
(assert (! true :named ssa_36_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_36| 1) ackermann_~m_0) (= |ackermann_#in~n_36| |ackermann_#t~ret5_34|)) :named ssa_36_LocVarAssigCall))
(assert (! true :named ssa_36_OldVarAssigCall))
(assert (! (and (= ackermann_~n_37 |ackermann_#in~n_36|) (= ackermann_~m_37 |ackermann_#in~m_36|)) :named ssa_37))
(assert (! (not (= ackermann_~m_37 0)) :named ssa_38))
(assert (! (not (= ackermann_~n_37 0)) :named ssa_39))
(assert (! true :named ssa_40_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_37 (+ |ackermann_#in~n_40| 1)) (= |ackermann_#in~m_40| ackermann_~m_37)) :named ssa_40_LocVarAssigCall))
(assert (! true :named ssa_40_OldVarAssigCall))
(assert (! (and (= ackermann_~n_41 |ackermann_#in~n_40|) (= ackermann_~m_41 |ackermann_#in~m_40|)) :named ssa_41))
(assert (! (not (= ackermann_~m_41 0)) :named ssa_42))
(assert (! (= ackermann_~n_41 0) :named ssa_43))
(assert (! true :named ssa_44_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_41 (+ |ackermann_#in~m_44| 1)) (= |ackermann_#in~n_44| 1)) :named ssa_44_LocVarAssigCall))
(assert (! true :named ssa_44_OldVarAssigCall))
(assert (! (and (= ackermann_~n_45 |ackermann_#in~n_44|) (= ackermann_~m_45 |ackermann_#in~m_44|)) :named ssa_45))
(assert (! (and (= |ackermann_#res_46| (+ ackermann_~n_45 1)) (= ackermann_~m_45 0)) :named ssa_46))
(assert (! true :named ssa_47))
(assert (! (= |ackermann_#res_46| |ackermann_#t~ret4_48|) :named ssa_48_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_48| 2147483648)) (<= |ackermann_#t~ret4_48| 2147483647) (= |ackermann_#res_49| |ackermann_#t~ret4_48|)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! (= |ackermann_#res_49| |ackermann_#t~ret5_51|) :named ssa_51_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_51| 2147483648)) (<= |ackermann_#t~ret5_51| 2147483647)) :named ssa_52))
(assert (! true :named ssa_53_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_53| 1) ackermann_~m_37) (= |ackermann_#in~n_53| |ackermann_#t~ret5_51|)) :named ssa_53_LocVarAssigCall))
(assert (! true :named ssa_53_OldVarAssigCall))
(assert (! (and (= ackermann_~n_54 |ackermann_#in~n_53|) (= ackermann_~m_54 |ackermann_#in~m_53|)) :named ssa_54))
(assert (! (and (= |ackermann_#res_55| (+ ackermann_~n_54 1)) (= ackermann_~m_54 0)) :named ssa_55))
(assert (! true :named ssa_56))
(assert (! (= |ackermann_#res_55| |ackermann_#t~ret6_57|) :named ssa_57_return))
(assert (! (and (= |ackermann_#res_58| |ackermann_#t~ret6_57|) (<= |ackermann_#t~ret6_57| 2147483647) (<= 0 (+ |ackermann_#t~ret6_57| 2147483648))) :named ssa_58))
(assert (! true :named ssa_59))
(assert (! (= |ackermann_#res_58| |ackermann_#t~ret6_60|) :named ssa_60_return))
(assert (! (and (= |ackermann_#res_61| |ackermann_#t~ret6_60|) (<= |ackermann_#t~ret6_60| 2147483647) (<= 0 (+ |ackermann_#t~ret6_60| 2147483648))) :named ssa_61))
(assert (! true :named ssa_62))
(assert (! (= |ackermann_#res_61| |ackermann_#t~ret5_63|) :named ssa_63_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_24_GlobVarAssigCall ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_24_LocVarAssigCall ssa_9 ssa_25 ssa_34_return ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_31_return ssa_28_return ssa_7_OldVarAssigCall ssa_24_OldVarAssigCall ssa_22_return ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_19_return ssa_4 ssa_29 ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_23 ssa_30 ssa_17 ssa_33 ssa_7_GlobVarAssigCall ssa_15_OldVarAssigCall) ssa_35 (and ssa_44_LocVarAssigCall ssa_55 ssa_40_OldVarAssigCall ssa_45 ssa_40_LocVarAssigCall ssa_46 ssa_51_return ssa_53_GlobVarAssigCall ssa_47 ssa_44_OldVarAssigCall ssa_44_GlobVarAssigCall ssa_57_return ssa_58 ssa_59 ssa_39 ssa_53_LocVarAssigCall ssa_40_GlobVarAssigCall ssa_43 ssa_37 ssa_38 ssa_50 ssa_36_OldVarAssigCall ssa_60_return ssa_48_return ssa_36_GlobVarAssigCall ssa_53_OldVarAssigCall ssa_54 ssa_49 ssa_36_LocVarAssigCall ssa_52 ssa_56 ssa_41 ssa_42) ssa_61 ssa_62 (and ssa_63_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_10 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun |ackermann_#res_13| () Int)
(declare-fun ackermann_~n_13 () Int)
(declare-fun ackermann_~m_13 () Int)
(declare-fun |ackermann_#res_15| () Int)
(declare-fun |ackermann_#t~ret4_15| () Int)
(declare-fun |ackermann_#res_16| () Int)
(declare-fun |ackermann_#t~ret4_16| () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun |ackermann_#t~ret5_18| () Int)
(declare-fun |ackermann_#t~ret5_20| () Int)
(declare-fun |ackermann_#in~m_20| () Int)
(declare-fun |ackermann_#in~n_20| () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun ackermann_~n_21 () Int)
(declare-fun ackermann_~m_21 () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun ackermann_~n_22 () Int)
(declare-fun ackermann_~m_22 () Int)
(declare-fun |ackermann_#res_24| () Int)
(declare-fun |ackermann_#t~ret6_24| () Int)
(declare-fun |ackermann_#res_25| () Int)
(declare-fun |ackermann_#t~ret6_25| () Int)
(declare-fun |ackermann_#t~ret5_25| () Int)
(declare-fun |ackermann_#res_27| () Int)
(declare-fun |ackermann_#t~ret4_27| () Int)
(declare-fun |ackermann_#res_28| () Int)
(declare-fun |ackermann_#t~ret4_28| () Int)
(declare-fun |ackermann_#res_30| () Int)
(declare-fun |ackermann_#t~ret5_30| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret5_30|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (= ackermann_~n_8 0) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_8 (+ |ackermann_#in~m_11| 1)) (= |ackermann_#in~n_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (and (= |ackermann_#res_13| (+ ackermann_~n_12 1)) (= ackermann_~m_12 0)) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |ackermann_#res_13| |ackermann_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_15| 2147483648)) (<= |ackermann_#t~ret4_15| 2147483647) (= |ackermann_#res_16| |ackermann_#t~ret4_15|)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |ackermann_#res_16| |ackermann_#t~ret5_18|) :named ssa_18_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_18| 2147483648)) (<= |ackermann_#t~ret5_18| 2147483647)) :named ssa_19))
(assert (! true :named ssa_20_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_20| 1) ackermann_~m_4) (= |ackermann_#in~n_20| |ackermann_#t~ret5_18|)) :named ssa_20_LocVarAssigCall))
(assert (! true :named ssa_20_OldVarAssigCall))
(assert (! (and (= ackermann_~n_21 |ackermann_#in~n_20|) (= ackermann_~m_21 |ackermann_#in~m_20|)) :named ssa_21))
(assert (! (and (= |ackermann_#res_22| (+ ackermann_~n_21 1)) (= ackermann_~m_21 0)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |ackermann_#res_22| |ackermann_#t~ret6_24|) :named ssa_24_return))
(assert (! (and (= |ackermann_#res_25| |ackermann_#t~ret6_24|) (<= |ackermann_#t~ret6_24| 2147483647) (<= 0 (+ |ackermann_#t~ret6_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |ackermann_#res_25| |ackermann_#t~ret4_27|) :named ssa_27_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_27| 2147483648)) (<= |ackermann_#t~ret4_27| 2147483647) (= |ackermann_#res_28| |ackermann_#t~ret4_27|)) :named ssa_28))
(assert (! true :named ssa_29))
(assert (! (= |ackermann_#res_28| |ackermann_#t~ret5_30|) :named ssa_30_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_18_return ssa_16 ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_27_return ssa_10 ssa_14 ssa_8 ssa_9 ssa_25 ssa_3_GlobVarAssigCall ssa_20_GlobVarAssigCall ssa_20_OldVarAssigCall ssa_24_return ssa_7_OldVarAssigCall ssa_19 ssa_20_LocVarAssigCall ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_4 ssa_22 ssa_21 ssa_11_GlobVarAssigCall ssa_23 ssa_17 ssa_7_GlobVarAssigCall ssa_15_return) ssa_28 ssa_29 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_30_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun |ackermann_#res_9| () Int)
(declare-fun ackermann_~n_9 () Int)
(declare-fun ackermann_~m_9 () Int)
(declare-fun |ackermann_#res_11| () Int)
(declare-fun |ackermann_#t~ret4_11| () Int)
(declare-fun |ackermann_#res_12| () Int)
(declare-fun |ackermann_#t~ret4_12| () Int)
(declare-fun |ackermann_#res_14| () Int)
(declare-fun |ackermann_#t~ret5_14| () Int)
(declare-fun |ackermann_#t~ret5_16| () Int)
(declare-fun |ackermann_#in~m_16| () Int)
(declare-fun |ackermann_#in~n_16| () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun ackermann_~m_18 () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret6_20| () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun |ackermann_#t~ret6_21| () Int)
(declare-fun |ackermann_#t~ret5_21| () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret4_23| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret4_23|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (and (= |ackermann_#res_9| (+ ackermann_~n_8 1)) (= ackermann_~m_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! (= |ackermann_#res_9| |ackermann_#t~ret4_11|) :named ssa_11_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_11| 2147483648)) (<= |ackermann_#t~ret4_11| 2147483647) (= |ackermann_#res_12| |ackermann_#t~ret4_11|)) :named ssa_12))
(assert (! true :named ssa_13))
(assert (! (= |ackermann_#res_12| |ackermann_#t~ret5_14|) :named ssa_14_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_14| 2147483648)) (<= |ackermann_#t~ret5_14| 2147483647)) :named ssa_15))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_16| 1) ackermann_~m_0) (= |ackermann_#in~n_16| |ackermann_#t~ret5_14|)) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (and (= ackermann_~n_17 |ackermann_#in~n_16|) (= ackermann_~m_17 |ackermann_#in~m_16|)) :named ssa_17))
(assert (! (and (= |ackermann_#res_18| (+ ackermann_~n_17 1)) (= ackermann_~m_17 0)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! (= |ackermann_#res_18| |ackermann_#t~ret6_20|) :named ssa_20_return))
(assert (! (and (= |ackermann_#res_21| |ackermann_#t~ret6_20|) (<= |ackermann_#t~ret6_20| 2147483647) (<= 0 (+ |ackermann_#t~ret6_20| 2147483648))) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret4_23|) :named ssa_23_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_11_return ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_12 ssa_5 ssa_4 ssa_7_GlobVarAssigCall ssa_14_return) ssa_15 (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) ssa_21 ssa_22 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_23_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret5_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 2 |ackermann_#t~ret5_10|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret5_10|) :named ssa_10_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 2 |ackermann_#t~ret4_3|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= 3 |ackermann_#t~ret6_3|)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! (<= 2 |ackermann_#t~ret5_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun |ackermann_#res_9| () Int)
(declare-fun ackermann_~n_9 () Int)
(declare-fun ackermann_~m_9 () Int)
(declare-fun |ackermann_#res_11| () Int)
(declare-fun |ackermann_#t~ret4_11| () Int)
(declare-fun |ackermann_#res_12| () Int)
(declare-fun |ackermann_#t~ret4_12| () Int)
(declare-fun |ackermann_#res_14| () Int)
(declare-fun |ackermann_#t~ret5_14| () Int)
(declare-fun |ackermann_#t~ret5_16| () Int)
(declare-fun |ackermann_#in~m_16| () Int)
(declare-fun |ackermann_#in~n_16| () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun ackermann_~m_18 () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret6_20| () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun |ackermann_#t~ret6_21| () Int)
(declare-fun |ackermann_#t~ret5_21| () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret6_23| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (and (= |ackermann_#res_9| (+ ackermann_~n_8 1)) (= ackermann_~m_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! (= |ackermann_#res_9| |ackermann_#t~ret4_11|) :named ssa_11_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_11| 2147483648)) (<= |ackermann_#t~ret4_11| 2147483647) (= |ackermann_#res_12| |ackermann_#t~ret4_11|)) :named ssa_12))
(assert (! true :named ssa_13))
(assert (! (= |ackermann_#res_12| |ackermann_#t~ret5_14|) :named ssa_14_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_14| 2147483648)) (<= |ackermann_#t~ret5_14| 2147483647)) :named ssa_15))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_16| 1) ackermann_~m_0) (= |ackermann_#in~n_16| |ackermann_#t~ret5_14|)) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (and (= ackermann_~n_17 |ackermann_#in~n_16|) (= ackermann_~m_17 |ackermann_#in~m_16|)) :named ssa_17))
(assert (! (and (= |ackermann_#res_18| (+ ackermann_~n_17 1)) (= ackermann_~m_17 0)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! (= |ackermann_#res_18| |ackermann_#t~ret6_20|) :named ssa_20_return))
(assert (! (and (= |ackermann_#res_21| |ackermann_#t~ret6_20|) (<= |ackermann_#t~ret6_20| 2147483647) (<= 0 (+ |ackermann_#t~ret6_20| 2147483648))) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret6_23|) :named ssa_23_return))
(assert (! (<= 3 |ackermann_#t~ret5_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_11_return ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_12 ssa_5 ssa_4 ssa_7_GlobVarAssigCall ssa_14_return) ssa_15 (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) ssa_21 ssa_22 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_23_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun |ackermann_#in~n_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret5_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |ackermann_#in~n_-2| 1)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret5_10|) :named ssa_10_return))
(assert (! (= ackermann_~n_-2 |ackermann_#in~n_-2|) :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#in~n_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= |ackermann_#in~n_-2| 0)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! (= |ackermann_#in~n_-2| 0) :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#in~n_-2| () Int)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not (<= |ackermann_#in~n_-2| 1)) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! (<= |ackermann_#in~n_-2| 1) :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_11 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun ackermann_~n_14 () Int)
(declare-fun |ackermann_#in~m_15| () Int)
(declare-fun |ackermann_#in~n_15| () Int)
(declare-fun ackermann_~m_15 () Int)
(declare-fun ackermann_~n_16 () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun |ackermann_#res_17| () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_19| () Int)
(declare-fun |ackermann_#t~ret4_19| () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret4_20| () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun |ackermann_#t~ret5_22| () Int)
(declare-fun |ackermann_#t~ret5_24| () Int)
(declare-fun |ackermann_#in~m_24| () Int)
(declare-fun |ackermann_#in~n_24| () Int)
(declare-fun ackermann_~m_24 () Int)
(declare-fun ackermann_~n_25 () Int)
(declare-fun ackermann_~m_25 () Int)
(declare-fun |ackermann_#res_26| () Int)
(declare-fun ackermann_~n_26 () Int)
(declare-fun ackermann_~m_26 () Int)
(declare-fun |ackermann_#res_28| () Int)
(declare-fun |ackermann_#t~ret6_28| () Int)
(declare-fun |ackermann_#res_29| () Int)
(declare-fun |ackermann_#t~ret6_29| () Int)
(declare-fun |ackermann_#t~ret5_29| () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun |ackermann_#t~ret5_31| () Int)
(declare-fun |ackermann_#t~ret5_33| () Int)
(declare-fun |ackermann_#in~m_33| () Int)
(declare-fun |ackermann_#in~n_33| () Int)
(declare-fun ackermann_~m_33 () Int)
(declare-fun ackermann_~n_34 () Int)
(declare-fun ackermann_~m_34 () Int)
(declare-fun |ackermann_#res_35| () Int)
(declare-fun ackermann_~n_35 () Int)
(declare-fun ackermann_~m_35 () Int)
(declare-fun |ackermann_#res_37| () Int)
(declare-fun |ackermann_#t~ret6_37| () Int)
(declare-fun |ackermann_#res_38| () Int)
(declare-fun |ackermann_#t~ret6_38| () Int)
(declare-fun |ackermann_#t~ret5_38| () Int)
(declare-fun |ackermann_#res_40| () Int)
(declare-fun |ackermann_#t~ret5_40| () Int)
(declare-fun |ackermann_#t~ret5_42| () Int)
(declare-fun |ackermann_#in~m_42| () Int)
(declare-fun |ackermann_#in~n_42| () Int)
(declare-fun ackermann_~m_42 () Int)
(declare-fun ackermann_~n_43 () Int)
(declare-fun ackermann_~m_43 () Int)
(declare-fun |ackermann_#res_44| () Int)
(declare-fun ackermann_~n_44 () Int)
(declare-fun ackermann_~m_44 () Int)
(declare-fun |ackermann_#res_46| () Int)
(declare-fun |ackermann_#t~ret6_46| () Int)
(declare-fun |ackermann_#res_47| () Int)
(declare-fun |ackermann_#t~ret6_47| () Int)
(declare-fun |ackermann_#t~ret5_47| () Int)
(declare-fun |ackermann_#res_49| () Int)
(declare-fun |ackermann_#t~ret6_49| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (not (= ackermann_~n_8 0)) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_8 (+ |ackermann_#in~n_11| 1)) (= |ackermann_#in~m_11| ackermann_~m_8)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (not (= ackermann_~m_12 0)) :named ssa_13))
(assert (! (= ackermann_~n_12 0) :named ssa_14))
(assert (! true :named ssa_15_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_12 (+ |ackermann_#in~m_15| 1)) (= |ackermann_#in~n_15| 1)) :named ssa_15_LocVarAssigCall))
(assert (! true :named ssa_15_OldVarAssigCall))
(assert (! (and (= ackermann_~n_16 |ackermann_#in~n_15|) (= ackermann_~m_16 |ackermann_#in~m_15|)) :named ssa_16))
(assert (! (and (= |ackermann_#res_17| (+ ackermann_~n_16 1)) (= ackermann_~m_16 0)) :named ssa_17))
(assert (! true :named ssa_18))
(assert (! (= |ackermann_#res_17| |ackermann_#t~ret4_19|) :named ssa_19_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_19| 2147483648)) (<= |ackermann_#t~ret4_19| 2147483647) (= |ackermann_#res_20| |ackermann_#t~ret4_19|)) :named ssa_20))
(assert (! true :named ssa_21))
(assert (! (= |ackermann_#res_20| |ackermann_#t~ret5_22|) :named ssa_22_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_22| 2147483648)) (<= |ackermann_#t~ret5_22| 2147483647)) :named ssa_23))
(assert (! true :named ssa_24_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_24| 1) ackermann_~m_8) (= |ackermann_#in~n_24| |ackermann_#t~ret5_22|)) :named ssa_24_LocVarAssigCall))
(assert (! true :named ssa_24_OldVarAssigCall))
(assert (! (and (= ackermann_~n_25 |ackermann_#in~n_24|) (= ackermann_~m_25 |ackermann_#in~m_24|)) :named ssa_25))
(assert (! (and (= |ackermann_#res_26| (+ ackermann_~n_25 1)) (= ackermann_~m_25 0)) :named ssa_26))
(assert (! true :named ssa_27))
(assert (! (= |ackermann_#res_26| |ackermann_#t~ret6_28|) :named ssa_28_return))
(assert (! (and (= |ackermann_#res_29| |ackermann_#t~ret6_28|) (<= |ackermann_#t~ret6_28| 2147483647) (<= 0 (+ |ackermann_#t~ret6_28| 2147483648))) :named ssa_29))
(assert (! true :named ssa_30))
(assert (! (= |ackermann_#res_29| |ackermann_#t~ret5_31|) :named ssa_31_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_31| 2147483648)) (<= |ackermann_#t~ret5_31| 2147483647)) :named ssa_32))
(assert (! true :named ssa_33_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_33| 1) ackermann_~m_4) (= |ackermann_#in~n_33| |ackermann_#t~ret5_31|)) :named ssa_33_LocVarAssigCall))
(assert (! true :named ssa_33_OldVarAssigCall))
(assert (! (and (= ackermann_~n_34 |ackermann_#in~n_33|) (= ackermann_~m_34 |ackermann_#in~m_33|)) :named ssa_34))
(assert (! (and (= |ackermann_#res_35| (+ ackermann_~n_34 1)) (= ackermann_~m_34 0)) :named ssa_35))
(assert (! true :named ssa_36))
(assert (! (= |ackermann_#res_35| |ackermann_#t~ret6_37|) :named ssa_37_return))
(assert (! (and (= |ackermann_#res_38| |ackermann_#t~ret6_37|) (<= |ackermann_#t~ret6_37| 2147483647) (<= 0 (+ |ackermann_#t~ret6_37| 2147483648))) :named ssa_38))
(assert (! true :named ssa_39))
(assert (! (= |ackermann_#res_38| |ackermann_#t~ret5_40|) :named ssa_40_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_40| 2147483648)) (<= |ackermann_#t~ret5_40| 2147483647)) :named ssa_41))
(assert (! true :named ssa_42_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_42| 1) ackermann_~m_0) (= |ackermann_#in~n_42| |ackermann_#t~ret5_40|)) :named ssa_42_LocVarAssigCall))
(assert (! true :named ssa_42_OldVarAssigCall))
(assert (! (and (= ackermann_~n_43 |ackermann_#in~n_42|) (= ackermann_~m_43 |ackermann_#in~m_42|)) :named ssa_43))
(assert (! (and (= |ackermann_#res_44| (+ ackermann_~n_43 1)) (= ackermann_~m_43 0)) :named ssa_44))
(assert (! true :named ssa_45))
(assert (! (= |ackermann_#res_44| |ackermann_#t~ret6_46|) :named ssa_46_return))
(assert (! (and (= |ackermann_#res_47| |ackermann_#t~ret6_46|) (<= |ackermann_#t~ret6_46| 2147483647) (<= 0 (+ |ackermann_#t~ret6_46| 2147483648))) :named ssa_47))
(assert (! true :named ssa_48))
(assert (! (= |ackermann_#res_47| |ackermann_#t~ret6_49|) :named ssa_49_return))
(assert (! false :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_24_GlobVarAssigCall ssa_3_OldVarAssigCall ssa_27 ssa_20 ssa_16 ssa_15_LocVarAssigCall ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_34 ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_10 ssa_14 ssa_8 ssa_24_LocVarAssigCall ssa_9 ssa_25 ssa_40_return ssa_15_GlobVarAssigCall ssa_3_GlobVarAssigCall ssa_31_return ssa_28_return ssa_33_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_24_OldVarAssigCall ssa_33_LocVarAssigCall ssa_39 ssa_38 ssa_22_return ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_32 ssa_19_return ssa_4 ssa_36 ssa_29 ssa_21 ssa_11_GlobVarAssigCall ssa_18 ssa_37_return ssa_23 ssa_30 ssa_17 ssa_7_GlobVarAssigCall ssa_35 ssa_33_OldVarAssigCall ssa_15_OldVarAssigCall) ssa_41 (and ssa_44 ssa_45 ssa_42_LocVarAssigCall ssa_43 ssa_42_GlobVarAssigCall ssa_42_OldVarAssigCall ssa_46_return) ssa_47 ssa_48 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_49_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_7 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun ackermann_~n_10 () Int)
(declare-fun |ackermann_#in~m_11| () Int)
(declare-fun |ackermann_#in~n_11| () Int)
(declare-fun ackermann_~m_11 () Int)
(declare-fun ackermann_~n_12 () Int)
(declare-fun ackermann_~m_12 () Int)
(declare-fun |ackermann_#res_13| () Int)
(declare-fun ackermann_~n_13 () Int)
(declare-fun ackermann_~m_13 () Int)
(declare-fun |ackermann_#res_15| () Int)
(declare-fun |ackermann_#t~ret4_15| () Int)
(declare-fun |ackermann_#res_16| () Int)
(declare-fun |ackermann_#t~ret4_16| () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun |ackermann_#t~ret5_18| () Int)
(declare-fun |ackermann_#t~ret5_20| () Int)
(declare-fun |ackermann_#in~m_20| () Int)
(declare-fun |ackermann_#in~n_20| () Int)
(declare-fun ackermann_~m_20 () Int)
(declare-fun ackermann_~n_21 () Int)
(declare-fun ackermann_~m_21 () Int)
(declare-fun |ackermann_#res_22| () Int)
(declare-fun ackermann_~n_22 () Int)
(declare-fun ackermann_~m_22 () Int)
(declare-fun |ackermann_#res_24| () Int)
(declare-fun |ackermann_#t~ret6_24| () Int)
(declare-fun |ackermann_#res_25| () Int)
(declare-fun |ackermann_#t~ret6_25| () Int)
(declare-fun |ackermann_#t~ret5_25| () Int)
(declare-fun |ackermann_#res_27| () Int)
(declare-fun |ackermann_#t~ret5_27| () Int)
(declare-fun |ackermann_#t~ret5_29| () Int)
(declare-fun |ackermann_#in~m_29| () Int)
(declare-fun |ackermann_#in~n_29| () Int)
(declare-fun ackermann_~m_29 () Int)
(declare-fun ackermann_~n_30 () Int)
(declare-fun ackermann_~m_30 () Int)
(declare-fun |ackermann_#res_31| () Int)
(declare-fun ackermann_~n_31 () Int)
(declare-fun ackermann_~m_31 () Int)
(declare-fun |ackermann_#res_33| () Int)
(declare-fun |ackermann_#t~ret6_33| () Int)
(declare-fun |ackermann_#res_34| () Int)
(declare-fun |ackermann_#t~ret6_34| () Int)
(declare-fun |ackermann_#t~ret5_34| () Int)
(declare-fun |ackermann_#res_36| () Int)
(declare-fun |ackermann_#t~ret5_36| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (not (= ackermann_~n_4 0)) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_4 (+ |ackermann_#in~n_7| 1)) (= |ackermann_#in~m_7| ackermann_~m_4)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (not (= ackermann_~m_8 0)) :named ssa_9))
(assert (! (= ackermann_~n_8 0) :named ssa_10))
(assert (! true :named ssa_11_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_8 (+ |ackermann_#in~m_11| 1)) (= |ackermann_#in~n_11| 1)) :named ssa_11_LocVarAssigCall))
(assert (! true :named ssa_11_OldVarAssigCall))
(assert (! (and (= ackermann_~n_12 |ackermann_#in~n_11|) (= ackermann_~m_12 |ackermann_#in~m_11|)) :named ssa_12))
(assert (! (and (= |ackermann_#res_13| (+ ackermann_~n_12 1)) (= ackermann_~m_12 0)) :named ssa_13))
(assert (! true :named ssa_14))
(assert (! (= |ackermann_#res_13| |ackermann_#t~ret4_15|) :named ssa_15_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_15| 2147483648)) (<= |ackermann_#t~ret4_15| 2147483647) (= |ackermann_#res_16| |ackermann_#t~ret4_15|)) :named ssa_16))
(assert (! true :named ssa_17))
(assert (! (= |ackermann_#res_16| |ackermann_#t~ret5_18|) :named ssa_18_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_18| 2147483648)) (<= |ackermann_#t~ret5_18| 2147483647)) :named ssa_19))
(assert (! true :named ssa_20_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_20| 1) ackermann_~m_4) (= |ackermann_#in~n_20| |ackermann_#t~ret5_18|)) :named ssa_20_LocVarAssigCall))
(assert (! true :named ssa_20_OldVarAssigCall))
(assert (! (and (= ackermann_~n_21 |ackermann_#in~n_20|) (= ackermann_~m_21 |ackermann_#in~m_20|)) :named ssa_21))
(assert (! (and (= |ackermann_#res_22| (+ ackermann_~n_21 1)) (= ackermann_~m_21 0)) :named ssa_22))
(assert (! true :named ssa_23))
(assert (! (= |ackermann_#res_22| |ackermann_#t~ret6_24|) :named ssa_24_return))
(assert (! (and (= |ackermann_#res_25| |ackermann_#t~ret6_24|) (<= |ackermann_#t~ret6_24| 2147483647) (<= 0 (+ |ackermann_#t~ret6_24| 2147483648))) :named ssa_25))
(assert (! true :named ssa_26))
(assert (! (= |ackermann_#res_25| |ackermann_#t~ret5_27|) :named ssa_27_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_27| 2147483648)) (<= |ackermann_#t~ret5_27| 2147483647)) :named ssa_28))
(assert (! true :named ssa_29_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_29| 1) ackermann_~m_0) (= |ackermann_#in~n_29| |ackermann_#t~ret5_27|)) :named ssa_29_LocVarAssigCall))
(assert (! true :named ssa_29_OldVarAssigCall))
(assert (! (and (= ackermann_~n_30 |ackermann_#in~n_29|) (= ackermann_~m_30 |ackermann_#in~m_29|)) :named ssa_30))
(assert (! (and (= |ackermann_#res_31| (+ ackermann_~n_30 1)) (= ackermann_~m_30 0)) :named ssa_31))
(assert (! true :named ssa_32))
(assert (! (= |ackermann_#res_31| |ackermann_#t~ret6_33|) :named ssa_33_return))
(assert (! (and (= |ackermann_#res_34| |ackermann_#t~ret6_33|) (<= |ackermann_#t~ret6_33| 2147483647) (<= 0 (+ |ackermann_#t~ret6_33| 2147483648))) :named ssa_34))
(assert (! true :named ssa_35))
(assert (! (= |ackermann_#res_34| |ackermann_#t~ret5_36|) :named ssa_36_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_18_return ssa_16 ssa_6 ssa_26 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_11_LocVarAssigCall ssa_27_return ssa_10 ssa_14 ssa_8 ssa_9 ssa_25 ssa_3_GlobVarAssigCall ssa_20_GlobVarAssigCall ssa_20_OldVarAssigCall ssa_24_return ssa_7_OldVarAssigCall ssa_19 ssa_20_LocVarAssigCall ssa_12 ssa_5 ssa_11_OldVarAssigCall ssa_4 ssa_22 ssa_21 ssa_11_GlobVarAssigCall ssa_23 ssa_17 ssa_7_GlobVarAssigCall ssa_15_return) ssa_28 (and ssa_29_OldVarAssigCall ssa_31 ssa_29_GlobVarAssigCall ssa_32 ssa_29_LocVarAssigCall ssa_33_return ssa_30) ssa_34 ssa_35 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_36_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_3 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun ackermann_~n_6 () Int)
(declare-fun |ackermann_#in~m_7| () Int)
(declare-fun |ackermann_#in~n_7| () Int)
(declare-fun ackermann_~m_7 () Int)
(declare-fun ackermann_~n_8 () Int)
(declare-fun ackermann_~m_8 () Int)
(declare-fun |ackermann_#res_9| () Int)
(declare-fun ackermann_~n_9 () Int)
(declare-fun ackermann_~m_9 () Int)
(declare-fun |ackermann_#res_11| () Int)
(declare-fun |ackermann_#t~ret4_11| () Int)
(declare-fun |ackermann_#res_12| () Int)
(declare-fun |ackermann_#t~ret4_12| () Int)
(declare-fun |ackermann_#res_14| () Int)
(declare-fun |ackermann_#t~ret5_14| () Int)
(declare-fun |ackermann_#t~ret5_16| () Int)
(declare-fun |ackermann_#in~m_16| () Int)
(declare-fun |ackermann_#in~n_16| () Int)
(declare-fun ackermann_~m_16 () Int)
(declare-fun ackermann_~n_17 () Int)
(declare-fun ackermann_~m_17 () Int)
(declare-fun |ackermann_#res_18| () Int)
(declare-fun ackermann_~n_18 () Int)
(declare-fun ackermann_~m_18 () Int)
(declare-fun |ackermann_#res_20| () Int)
(declare-fun |ackermann_#t~ret6_20| () Int)
(declare-fun |ackermann_#res_21| () Int)
(declare-fun |ackermann_#t~ret6_21| () Int)
(declare-fun |ackermann_#t~ret5_21| () Int)
(declare-fun |ackermann_#res_23| () Int)
(declare-fun |ackermann_#t~ret5_23| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (not (= ackermann_~n_0 0)) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~n_0 (+ |ackermann_#in~n_3| 1)) (= |ackermann_#in~m_3| ackermann_~m_0)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (not (= ackermann_~m_4 0)) :named ssa_5))
(assert (! (= ackermann_~n_4 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_4 (+ |ackermann_#in~m_7| 1)) (= |ackermann_#in~n_7| 1)) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (and (= ackermann_~n_8 |ackermann_#in~n_7|) (= ackermann_~m_8 |ackermann_#in~m_7|)) :named ssa_8))
(assert (! (and (= |ackermann_#res_9| (+ ackermann_~n_8 1)) (= ackermann_~m_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! (= |ackermann_#res_9| |ackermann_#t~ret4_11|) :named ssa_11_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_11| 2147483648)) (<= |ackermann_#t~ret4_11| 2147483647) (= |ackermann_#res_12| |ackermann_#t~ret4_11|)) :named ssa_12))
(assert (! true :named ssa_13))
(assert (! (= |ackermann_#res_12| |ackermann_#t~ret5_14|) :named ssa_14_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret5_14| 2147483648)) (<= |ackermann_#t~ret5_14| 2147483647)) :named ssa_15))
(assert (! true :named ssa_16_GlobVarAssigCall))
(assert (! (and (= (+ |ackermann_#in~m_16| 1) ackermann_~m_0) (= |ackermann_#in~n_16| |ackermann_#t~ret5_14|)) :named ssa_16_LocVarAssigCall))
(assert (! true :named ssa_16_OldVarAssigCall))
(assert (! (and (= ackermann_~n_17 |ackermann_#in~n_16|) (= ackermann_~m_17 |ackermann_#in~m_16|)) :named ssa_17))
(assert (! (and (= |ackermann_#res_18| (+ ackermann_~n_17 1)) (= ackermann_~m_17 0)) :named ssa_18))
(assert (! true :named ssa_19))
(assert (! (= |ackermann_#res_18| |ackermann_#t~ret6_20|) :named ssa_20_return))
(assert (! (and (= |ackermann_#res_21| |ackermann_#t~ret6_20|) (<= |ackermann_#t~ret6_20| 2147483647) (<= 0 (+ |ackermann_#t~ret6_20| 2147483648))) :named ssa_21))
(assert (! true :named ssa_22))
(assert (! (= |ackermann_#res_21| |ackermann_#t~ret5_23|) :named ssa_23_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_13 ssa_3_OldVarAssigCall ssa_11_return ssa_6 ssa_3_LocVarAssigCall ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_3_GlobVarAssigCall ssa_7_OldVarAssigCall ssa_12 ssa_5 ssa_4 ssa_7_GlobVarAssigCall ssa_14_return) ssa_15 (and ssa_19 ssa_16_OldVarAssigCall ssa_16_LocVarAssigCall ssa_20_return ssa_16_GlobVarAssigCall ssa_18 ssa_17) ssa_21 ssa_22 (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond ssa_23_return))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~n_-2 () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun ackermann_~n_-1 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun ackermann_~n_2 () Int)
(declare-fun |ackermann_#in~m_3| () Int)
(declare-fun |ackermann_#in~n_3| () Int)
(declare-fun ackermann_~m_3 () Int)
(declare-fun ackermann_~n_4 () Int)
(declare-fun ackermann_~m_4 () Int)
(declare-fun |ackermann_#res_5| () Int)
(declare-fun ackermann_~n_5 () Int)
(declare-fun ackermann_~m_5 () Int)
(declare-fun |ackermann_#res_7| () Int)
(declare-fun |ackermann_#t~ret4_7| () Int)
(declare-fun |ackermann_#res_8| () Int)
(declare-fun |ackermann_#t~ret4_8| () Int)
(declare-fun |ackermann_#res_10| () Int)
(declare-fun |ackermann_#t~ret5_10| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (not (= ackermann_~m_0 0)) :named ssa_1))
(assert (! (= ackermann_~n_0 0) :named ssa_2))
(assert (! true :named ssa_3_GlobVarAssigCall))
(assert (! (and (= ackermann_~m_0 (+ |ackermann_#in~m_3| 1)) (= |ackermann_#in~n_3| 1)) :named ssa_3_LocVarAssigCall))
(assert (! true :named ssa_3_OldVarAssigCall))
(assert (! (and (= ackermann_~n_4 |ackermann_#in~n_3|) (= ackermann_~m_4 |ackermann_#in~m_3|)) :named ssa_4))
(assert (! (and (= |ackermann_#res_5| (+ ackermann_~n_4 1)) (= ackermann_~m_4 0)) :named ssa_5))
(assert (! true :named ssa_6))
(assert (! (= |ackermann_#res_5| |ackermann_#t~ret4_7|) :named ssa_7_return))
(assert (! (and (<= 0 (+ |ackermann_#t~ret4_7| 2147483648)) (<= |ackermann_#t~ret4_7| 2147483647) (= |ackermann_#res_8| |ackermann_#t~ret4_7|)) :named ssa_8))
(assert (! true :named ssa_9))
(assert (! (= |ackermann_#res_8| |ackermann_#t~ret5_10|) :named ssa_10_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~n_-2 (+ |ackermann_#in~n_-1| 1)) (= |ackermann_#in~m_-1| ackermann_~m_-2)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_3_OldVarAssigCall ssa_6 ssa_3_LocVarAssigCall ssa_7_return ssa_3_GlobVarAssigCall ssa_5 ssa_4) ssa_8 ssa_9 (and ssa_10_return ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret4_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret4_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= ackermann_~m_-2 (+ |ackermann_#in~m_-1| 1)) (= |ackermann_#in~n_-1| 1)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |ackermann_#t~ret5_-2| () Int)
(declare-fun ackermann_~m_-2 () Int)
(declare-fun |ackermann_#t~ret5_-1| () Int)
(declare-fun |ackermann_#in~m_-1| () Int)
(declare-fun |ackermann_#in~n_-1| () Int)
(declare-fun ackermann_~m_-1 () Int)
(declare-fun ackermann_~n_0 () Int)
(declare-fun ackermann_~m_0 () Int)
(declare-fun |ackermann_#res_1| () Int)
(declare-fun ackermann_~n_1 () Int)
(declare-fun ackermann_~m_1 () Int)
(declare-fun |ackermann_#res_3| () Int)
(declare-fun |ackermann_#t~ret6_3| () Int)
(assert (! true :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= ackermann_~n_0 |ackermann_#in~n_-1|) (= ackermann_~m_0 |ackermann_#in~m_-1|)) :named ssa_0))
(assert (! (and (= |ackermann_#res_1| (+ ackermann_~n_0 1)) (= ackermann_~m_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! (= |ackermann_#res_1| |ackermann_#t~ret6_3|) :named ssa_3_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! (and (= (+ |ackermann_#in~m_-1| 1) ackermann_~m_-2) (= |ackermann_#in~n_-1| |ackermann_#t~ret5_-2|)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
