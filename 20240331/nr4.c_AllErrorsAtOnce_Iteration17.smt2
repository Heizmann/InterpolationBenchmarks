(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:52:51+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id nr4.c_AllErrorsAtOnce_Iteration17)
(declare-fun |c_old(~CELLCOUNT~0)| () Int)
(declare-fun |c_old(~CELLCOUNT~0)_primed| () Int)
(declare-fun c_~CELLCOUNT~0 () Int)
(declare-fun c_~CELLCOUNT~0_primed () Int)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#2)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#2_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#2_#ptr.base| () Int)
(declare-fun |c_read~int#2_#ptr.base_primed| () Int)
(declare-fun |c_read~int#2_#ptr.offset| () Int)
(declare-fun |c_read~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType| () Int)
(declare-fun |c_read~int#2_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#2_#value| () Int)
(declare-fun |c_read~int#2_#value_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond| () Int)
(declare-fun |c_assume_abort_if_not_#in~cond_primed| () Int)
(declare-fun c_assume_abort_if_not_~cond () Int)
(declare-fun c_assume_abort_if_not_~cond_primed () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~nondet4| () Int)
(declare-fun |c_main_#t~nondet4_primed| () Int)
(declare-fun |c_main_#t~post5| () Int)
(declare-fun |c_main_#t~post5_primed| () Int)
(declare-fun |c_main_#t~post6| () Int)
(declare-fun |c_main_#t~post6_primed| () Int)
(declare-fun |c_main_#t~mem7| () Int)
(declare-fun |c_main_#t~mem7_primed| () Int)
(declare-fun |c_main_#t~mem8| () Int)
(declare-fun |c_main_#t~mem8_primed| () Int)
(declare-fun |c_main_#t~short9| () Bool)
(declare-fun |c_main_#t~short9_primed| () Bool)
(declare-fun |c_main_#t~post10| () Int)
(declare-fun |c_main_#t~post10_primed| () Int)
(declare-fun c_main_~MINVAL~0 () Int)
(declare-fun c_main_~MINVAL~0_primed () Int)
(declare-fun c_main_~i~0 () Int)
(declare-fun c_main_~i~0_primed () Int)
(declare-fun c_main_~j~0 () Int)
(declare-fun c_main_~j~0_primed () Int)
(declare-fun |c_main_~#volArray~0.base| () Int)
(declare-fun |c_main_~#volArray~0.base_primed| () Int)
(declare-fun |c_main_~#volArray~0.offset| () Int)
(declare-fun |c_main_~#volArray~0.offset_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#2_#value| () Int)
(declare-fun |c_write~int#2_#value_primed| () Int)
(declare-fun |c_write~int#2_#ptr.base| () Int)
(declare-fun |c_write~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~int#2_#ptr.offset| () Int)
(declare-fun |c_write~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res| () Int)
(declare-fun |c___VERIFIER_nondet_int_#res_primed| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret11| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret11_primed| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond| () Int)
(declare-fun |c___VERIFIER_assert_#in~cond_primed| () Int)
(declare-fun c___VERIFIER_assert_~cond () Int)
(declare-fun c___VERIFIER_assert_~cond_primed () Int)
(declare-fun |c_write~init~int#2_#value| () Int)
(declare-fun |c_write~init~int#2_#value_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.base| () Int)
(declare-fun |c_write~init~int#2_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset| () Int)
(declare-fun |c_write~init~int#2_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#2_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~0.base| () Int)
(declare-fun |c___assert_fail_#in~0.base_primed| () Int)
(declare-fun |c___assert_fail_#in~0.offset| () Int)
(declare-fun |c___assert_fail_#in~0.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~1.base| () Int)
(declare-fun |c___assert_fail_#in~1.base_primed| () Int)
(declare-fun |c___assert_fail_#in~1.offset| () Int)
(declare-fun |c___assert_fail_#in~1.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~2| () Int)
(declare-fun |c___assert_fail_#in~2_primed| () Int)
(declare-fun |c___assert_fail_#in~3.base| () Int)
(declare-fun |c___assert_fail_#in~3.base_primed| () Int)
(declare-fun |c___assert_fail_#in~3.offset| () Int)
(declare-fun |c___assert_fail_#in~3.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_aux_v_main_#t~mem7_3| () Int)
(declare-fun |c_aux_v_main_#t~mem8_3| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret11_3| () Int)
(declare-fun c_aux_v_ArrVal_1 () Int)
(declare-fun c_aux_v_ArrVal_2 () Int)
(declare-fun |c_aux_v_main_#t~mem7_6| () Int)
(declare-fun c_aux_v_ArrVal_4 () Int)
(declare-fun c_aux_v_ArrVal_3 () Int)
(declare-fun |c_aux_v_main_#t~mem7_7| () Int)
(declare-fun c_aux_v_ArrVal_5 () Int)
(declare-fun c_aux_v_ArrVal_6 () Int)
(declare-fun |c_aux_v_main_#t~mem7_8| () Int)
(declare-fun |c_aux_v_main_#t~mem8_6| () Int)
(declare-fun c_aux_v_ArrVal_8 () Int)
(declare-fun c_aux_v_ArrVal_7 () Int)
(declare-fun |c_aux_v_main_#t~mem7_9| () Int)
(declare-fun |c_aux_v_main_#t~mem8_7| () Int)
(declare-fun c_aux_v_ArrVal_9 () Int)
(declare-fun c_aux_v_ArrVal_10 () Int)
(declare-fun c_aux_v_ArrVal_11 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_12 () Int)
(declare-fun |c_aux_v_main_#t~mem7_10| () Int)
(declare-fun |c_aux_v_main_#t~mem8_8| () Int)
(declare-fun c_aux_v_ArrVal_13 () Int)
(declare-fun c_aux_v_ArrVal_14 () Int)
(declare-fun c_aux_v_ArrVal_16 () Int)
(declare-fun c_aux_v_ArrVal_15 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_18 () Int)
(declare-fun c_aux_v_ArrVal_17 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem7_11| () Int)
(declare-fun |c_aux_v_main_#t~mem8_9| () Int)
(declare-fun c_aux_v_ArrVal_19 () Int)
(declare-fun c_aux_v_ArrVal_20 () Int)
(declare-fun c_aux_v_ArrVal_21 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_22 () Int)
(declare-fun c_aux_v_ArrVal_24 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_23 () Int)
(declare-fun |c_aux_v_main_#t~mem7_12| () Int)
(declare-fun |c_aux_v_main_#t~mem8_10| () Int)
(declare-fun c_aux_v_ArrVal_25 () Int)
(declare-fun c_aux_v_ArrVal_26 () Int)
(declare-fun c_aux_v_ArrVal_28 () Int)
(declare-fun c_aux_v_ArrVal_27 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_29 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_30 () Int)
(declare-fun c_aux_v_ArrVal_32 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_31 () Int)
(declare-fun |c_aux_v_main_#t~mem7_13| () Int)
(declare-fun |c_aux_v_main_#t~mem8_11| () Int)
(declare-fun c_aux_v_ArrVal_33 () Int)
(declare-fun c_aux_v_ArrVal_34 () Int)
(declare-fun c_aux_v_ArrVal_36 () Int)
(declare-fun c_aux_v_ArrVal_35 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_38 () Int)
(declare-fun c_aux_v_ArrVal_37 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_39 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_40 () Int)
(declare-fun c_aux_v_ArrVal_42 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_41 () Int)
(declare-fun |c_aux_v_main_#t~mem7_14| () Int)
(declare-fun |c_aux_v_main_#t~mem8_12| () Int)
(declare-fun c_aux_v_ArrVal_43 () Int)
(declare-fun c_aux_v_ArrVal_44 () Int)
(declare-fun c_aux_v_ArrVal_46 () Int)
(declare-fun c_aux_v_ArrVal_45 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_48 () Int)
(declare-fun c_aux_v_ArrVal_47 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_49 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_50 () Int)
(declare-fun c_aux_v_ArrVal_52 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_51 () Int)
(declare-fun |c_aux_v_main_#t~mem7_15| () Int)
(declare-fun |c_aux_v_main_#t~mem7_16| () Int)
(declare-fun |c_aux_v_main_#t~mem8_13| () Int)
(declare-fun c_aux_v_ArrVal_53 () Int)
(declare-fun c_aux_v_ArrVal_54 () Int)
(declare-fun c_aux_v_ArrVal_55 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_56 () Int)
(declare-fun c_aux_v_ArrVal_58 () Int)
(declare-fun c_aux_v_ArrVal_57 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_59 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_60 () Int)
(declare-fun c_aux_v_ArrVal_62 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_61 () Int)
(declare-fun |c_aux_v_main_#t~mem7_17| () Int)
(declare-fun |c_aux_v_main_#t~mem7_18| () Int)
(declare-fun |c_aux_v_main_#t~mem7_19| () Int)
(declare-fun |c_aux_v_main_#t~mem8_14| () Int)
(declare-fun c_aux_v_ArrVal_64 () Int)
(declare-fun c_aux_v_ArrVal_63 () Int)
(declare-fun c_aux_v_ArrVal_65 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_66 () Int)
(declare-fun c_aux_v_ArrVal_68 () Int)
(declare-fun c_aux_v_ArrVal_67 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_70 () Int)
(declare-fun c_aux_v_ArrVal_69 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_72 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_71 () Int)
(declare-fun c_aux_v_ArrVal_73 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_74 () Int)
(declare-fun c_aux_v_ArrVal_75 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_76 () Int)
(declare-fun c_aux_v_ArrVal_77 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_78 () Int)
(declare-fun c_aux_v_ArrVal_79 () Int)
(declare-fun c_aux_v_ArrVal_80 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem7_20| () Int)
(declare-fun |c_aux_v_main_#t~mem8_15| () Int)
(declare-fun c_aux_v_ArrVal_81 () Int)
(declare-fun c_aux_v_ArrVal_82 () Int)
(declare-fun c_aux_v_ArrVal_83 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_84 () Int)
(declare-fun c_aux_v_ArrVal_85 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_86 () Int)
(declare-fun c_aux_v_ArrVal_87 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_88 () Int)
(declare-fun c_aux_v_ArrVal_89 () Int)
(declare-fun c_aux_v_ArrVal_90 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem7_21| () Int)
(declare-fun |c_aux_v_main_#t~mem7_22| () Int)
(declare-fun |c_aux_v_main_#t~mem7_23| () Int)
(declare-fun |c_aux_v_main_#t~mem7_24| () Int)
(declare-fun |c_aux_v_main_#t~mem8_16| () Int)
(declare-fun c_aux_v_ArrVal_91 () Int)
(declare-fun c_aux_v_ArrVal_92 () Int)
(declare-fun c_aux_v_ArrVal_93 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_94 () Int)
(declare-fun c_aux_v_ArrVal_95 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_96 () Int)
(declare-fun c_aux_v_ArrVal_97 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_98 () Int)
(declare-fun c_aux_v_ArrVal_99 () Int)
(declare-fun c_aux_v_ArrVal_100 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem7_25| () Int)
(declare-fun |c_aux_v_main_#t~mem7_26| () Int)
(declare-fun |c_aux_v_main_#t~mem7_27| () Int)
(declare-fun |c_aux_v_main_#t~mem7_28| () Int)
(declare-fun |c_aux_v_main_#t~mem7_29| () Int)
(declare-fun |c_aux_v_main_#t~mem8_17| () Int)
(declare-fun c_aux_v_ArrVal_102 () Int)
(declare-fun c_aux_v_ArrVal_101 () Int)
(declare-fun c_aux_v_ArrVal_104 () Int)
(declare-fun c_aux_v_ArrVal_103 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_105 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_106 () Int)
(declare-fun c_aux_v_ArrVal_107 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_108 () Int)
(declare-fun c_aux_v_ArrVal_109 () Int)
(declare-fun c_aux_v_ArrVal_110 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_112 () Int)
(declare-fun c_aux_v_ArrVal_111 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_114 () Int)
(declare-fun c_aux_v_ArrVal_113 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_115 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_116 () Int)
(declare-fun c_aux_v_ArrVal_118 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_117 () Int)
(declare-fun |c_aux_v_main_#t~mem7_30| () Int)
(declare-fun |c_aux_v_main_#t~mem7_31| () Int)
(declare-fun |c_aux_v_main_#t~mem7_32| () Int)
(declare-fun |c_aux_v_main_#t~mem8_18| () Int)
(declare-fun c_aux_v_ArrVal_120 () Int)
(declare-fun c_aux_v_ArrVal_119 () Int)
(declare-fun c_aux_v_ArrVal_122 () Int)
(declare-fun c_aux_v_ArrVal_121 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_124 () Int)
(declare-fun c_aux_v_ArrVal_123 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_126 () Int)
(declare-fun c_aux_v_ArrVal_125 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_128 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_127 () Int)
(declare-fun c_aux_v_ArrVal_129 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_130 () Int)
(declare-fun c_aux_v_ArrVal_132 () Int)
(declare-fun c_aux_v_ArrVal_131 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_134 () Int)
(declare-fun c_aux_v_ArrVal_133 () (Array Int Int))
(declare-fun c_aux_v_ArrVal_135 () Int)
(declare-fun c_aux_v_ArrVal_136 () (Array Int Int))
(declare-fun |c_aux_v_main_#t~mem7_33| () Int)
(declare-fun |c_aux_v_main_#t~mem7_34| () Int)
(declare-fun |c_aux_v_main_#t~mem7_35| () Int)
(declare-fun |c_aux_v_main_#t~mem7_36| () Int)
(declare-fun |c_aux_v_main_#t~mem8_19| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_int#2_-1| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_0| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_1 () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_3| () Int)
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_3 () Int)
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |main_#t~nondet4_4| () Int)
(declare-fun ~CELLCOUNT~0_4 () Int)
(declare-fun main_~MINVAL~0_5 () Int)
(declare-fun |main_~#volArray~0.offset_5| () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun main_~j~0_5 () Int)
(declare-fun main_~i~0_5 () Int)
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |main_~#volArray~0.base_5| () Int)
(declare-fun v_ArrVal_137_fresh_1 () Int)
(declare-fun v_ArrVal_138_fresh_1 () Int)
(declare-fun |assume_abort_if_not_#in~cond_7| () Int)
(declare-fun assume_abort_if_not_~cond_8 () Int)
(declare-fun assume_abort_if_not_~cond_9 () Int)
(declare-fun main_~i~0_12 () Int)
(declare-fun main_~j~0_13 () Int)
(declare-fun |#memory_int#1_15| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_139_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_140_fresh_1 () Int)
(declare-fun main_~j~0_16 () Int)
(declare-fun |main_#t~post5_16| () Int)
(declare-fun |#memory_int#1_18| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_142_fresh_1 () Int)
(declare-fun v_ArrVal_141_fresh_1 () (Array Int Int))
(declare-fun main_~j~0_19 () Int)
(declare-fun |main_#t~post5_19| () Int)
(declare-fun |#memory_int#1_21| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_144_fresh_1 () Int)
(declare-fun v_ArrVal_143_fresh_1 () (Array Int Int))
(declare-fun main_~j~0_22 () Int)
(declare-fun |main_#t~post5_22| () Int)
(declare-fun |#memory_int#1_24| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_145_fresh_1 () Int)
(declare-fun v_ArrVal_146_fresh_1 () (Array Int Int))
(declare-fun main_~j~0_25 () Int)
(declare-fun |main_#t~post5_25| () Int)
(declare-fun main_~j~0_26 () Int)
(declare-fun main_~i~0_27 () Int)
(declare-fun |main_#t~post6_27| () Int)
(declare-fun main_~j~0_28 () Int)
(declare-fun |#memory_int#1_30| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_148_fresh_1 () Int)
(declare-fun v_ArrVal_147_fresh_1 () (Array Int Int))
(declare-fun main_~j~0_31 () Int)
(declare-fun |main_#t~post5_31| () Int)
(declare-fun |#memory_int#1_33| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_149_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_150_fresh_1 () Int)
(declare-fun main_~j~0_34 () Int)
(declare-fun |main_#t~post5_34| () Int)
(declare-fun |#memory_int#1_36| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_151_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_152_fresh_1 () Int)
(declare-fun main_~j~0_37 () Int)
(declare-fun |main_#t~post5_37| () Int)
(declare-fun |#memory_int#1_39| () (Array Int (Array Int Int)))
(declare-fun v_ArrVal_153_fresh_1 () Int)
(declare-fun v_ArrVal_154_fresh_1 () (Array Int Int))
(declare-fun main_~j~0_40 () Int)
(declare-fun |main_#t~post5_40| () Int)
(declare-fun main_~j~0_41 () Int)
(declare-fun main_~i~0_42 () Int)
(declare-fun |main_#t~post6_42| () Int)
(declare-fun main_~i~0_43 () Int)
(declare-fun main_~i~0_44 () Int)
(declare-fun |main_#t~short9_45| () Bool)
(declare-fun |v_main_#t~mem7_37_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_47| () Int)
(declare-fun |main_#t~short9_47| () Bool)
(declare-fun __VERIFIER_assert_~cond_48 () Int)
(declare-fun __VERIFIER_assert_~cond_49 () Int)
(declare-fun |main_#t~post10_52| () Int)
(declare-fun main_~i~0_52 () Int)
(declare-fun |main_#t~mem7_52| () Int)
(declare-fun |main_#t~mem8_52| () Int)
(declare-fun |main_#t~short9_52| () Bool)
(declare-fun |main_#t~short9_53| () Bool)
(declare-fun |v_main_#t~mem7_38_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_55| () Int)
(declare-fun |main_#t~short9_55| () Bool)
(declare-fun __VERIFIER_assert_~cond_56 () Int)
(declare-fun __VERIFIER_assert_~cond_57 () Int)
(declare-fun |main_#t~post10_60| () Int)
(declare-fun main_~i~0_60 () Int)
(declare-fun |main_#t~mem7_60| () Int)
(declare-fun |main_#t~mem8_60| () Int)
(declare-fun |main_#t~short9_60| () Bool)
(declare-fun |main_#t~short9_61| () Bool)
(declare-fun |v_main_#t~mem7_39_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_63| () Int)
(declare-fun |main_#t~short9_63| () Bool)
(declare-fun __VERIFIER_assert_~cond_64 () Int)
(declare-fun __VERIFIER_assert_~cond_65 () Int)
(declare-fun |main_#t~post10_68| () Int)
(declare-fun main_~i~0_68 () Int)
(declare-fun |main_#t~mem7_68| () Int)
(declare-fun |main_#t~mem8_68| () Int)
(declare-fun |main_#t~short9_68| () Bool)
(declare-fun |main_#t~short9_69| () Bool)
(declare-fun |v_main_#t~mem7_40_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_71| () Int)
(declare-fun |main_#t~short9_71| () Bool)
(declare-fun __VERIFIER_assert_~cond_72 () Int)
(declare-fun __VERIFIER_assert_~cond_73 () Int)
(declare-fun |main_#t~post10_76| () Int)
(declare-fun main_~i~0_76 () Int)
(declare-fun |main_#t~mem7_76| () Int)
(declare-fun |main_#t~mem8_76| () Int)
(declare-fun |main_#t~short9_76| () Bool)
(declare-fun |main_#t~short9_77| () Bool)
(declare-fun |v_main_#t~mem7_41_fresh_1| () Int)
(declare-fun |main_#t~short9_78| () Bool)
(declare-fun |v_main_#t~mem8_20_fresh_1| () Int)
(declare-fun |__VERIFIER_assert_#in~cond_79| () Int)
(declare-fun |main_#t~short9_79| () Bool)
(declare-fun __VERIFIER_assert_~cond_80 () Int)
(declare-fun __VERIFIER_assert_~cond_81 () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_0) :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! (= |old(~CELLCOUNT~0)_0| ~CELLCOUNT~0_-1) :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#valid_-1| 0) 0) (= 46 (select (select |#memory_int#2_-1| 2) 3)) (= 110 (select (select |#memory_int#2_-1| 2) 0)) (= (select |#valid_-1| 2) 1) (= (select |#length_-1| 2) 6) (= (select |#valid_-1| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#valid_-1| 1) 1) (= (select |#length_-1| 1) 2) (= (select |#length_-1| 3) 12) (= (select (select |#memory_int#2_-1| 2) 1) 114) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= 52 (select (select |#memory_int#2_-1| 2) 2)) (= (select (select |#memory_int#2_-1| 2) 5) 0) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select (select |#memory_int#2_-1| 2) 4) 99) (= ~CELLCOUNT~0_1 0)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_3)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(~CELLCOUNT~0)_3| ~CELLCOUNT~0_1) (= |old(#memory_int#1)_3| |#memory_int#1_-1|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (<= 0 (+ ~CELLCOUNT~0_4 2147483648)) (<= ~CELLCOUNT~0_4 2147483647)) :named ssa_4))
(assert (! (and (= (store |#valid_3| |main_~#volArray~0.base_5| v_ArrVal_138_fresh_1) |#valid_5|) (< |#StackHeapBarrier_-1| |main_~#volArray~0.base_5|) (= |main_~#volArray~0.offset_5| 0) (not (= |main_~#volArray~0.base_5| 0)) (= (store |#length_3| |main_~#volArray~0.base_5| v_ArrVal_137_fresh_1) |#length_5|) (= 0 (select |#valid_3| |main_~#volArray~0.base_5|)) (= main_~MINVAL~0_5 2) (= v_ArrVal_138_fresh_1 1) (< 1 ~CELLCOUNT~0_4) (= v_ArrVal_137_fresh_1 (* (mod ~CELLCOUNT~0_4 1073741824) 4))) :named ssa_5))
(assert (! (= (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (mod ~CELLCOUNT~0_4 4) (- 4)) (mod ~CELLCOUNT~0_4 4)) 0) :named ssa_6))
(assert (! true :named ssa_7_GlobVarAssigCall))
(assert (! (= (ite (= (ite (and (< ~CELLCOUNT~0_4 0) (not (= (mod ~CELLCOUNT~0_4 4) 0))) (+ (- 4) (mod ~CELLCOUNT~0_4 4)) (mod ~CELLCOUNT~0_4 4)) 0) 1 0) |assume_abort_if_not_#in~cond_7|) :named ssa_7_LocVarAssigCall))
(assert (! true :named ssa_7_OldVarAssigCall))
(assert (! (= |assume_abort_if_not_#in~cond_7| assume_abort_if_not_~cond_8) :named ssa_8))
(assert (! (not (= assume_abort_if_not_~cond_8 0)) :named ssa_9))
(assert (! true :named ssa_10))
(assert (! true :named ssa_11_return))
(assert (! (= main_~i~0_12 1) :named ssa_12))
(assert (! (and (= main_~j~0_13 4) (<= main_~i~0_12 (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)))) :named ssa_13))
(assert (! (<= 1 main_~j~0_13) :named ssa_14))
(assert (! (and (= v_ArrVal_140_fresh_1 main_~j~0_13) (= v_ArrVal_139_fresh_1 (store (select |#memory_int#1_3| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_13 (- 4)) (* main_~i~0_12 16)) main_~j~0_13)) (= |#memory_int#1_15| (store |#memory_int#1_3| |main_~#volArray~0.base_5| v_ArrVal_139_fresh_1)) (<= main_~MINVAL~0_5 main_~j~0_13)) :named ssa_15))
(assert (! (= main_~j~0_13 (+ main_~j~0_16 1)) :named ssa_16))
(assert (! (<= 1 main_~j~0_16) :named ssa_17))
(assert (! (and (= v_ArrVal_141_fresh_1 (store (select |#memory_int#1_15| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_16 (- 4)) (* main_~i~0_12 16)) main_~j~0_16)) (= v_ArrVal_142_fresh_1 main_~j~0_16) (= |#memory_int#1_18| (store |#memory_int#1_15| |main_~#volArray~0.base_5| v_ArrVal_141_fresh_1)) (<= main_~MINVAL~0_5 main_~j~0_16)) :named ssa_18))
(assert (! (= main_~j~0_16 (+ main_~j~0_19 1)) :named ssa_19))
(assert (! (<= 1 main_~j~0_19) :named ssa_20))
(assert (! (and (= v_ArrVal_143_fresh_1 (store (select |#memory_int#1_18| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_19 (- 4)) (* main_~i~0_12 16)) main_~j~0_19)) (= (store |#memory_int#1_18| |main_~#volArray~0.base_5| v_ArrVal_143_fresh_1) |#memory_int#1_21|) (<= main_~MINVAL~0_5 main_~j~0_19) (= v_ArrVal_144_fresh_1 main_~j~0_19)) :named ssa_21))
(assert (! (= main_~j~0_19 (+ main_~j~0_22 1)) :named ssa_22))
(assert (! (<= 1 main_~j~0_22) :named ssa_23))
(assert (! (and (= v_ArrVal_145_fresh_1 0) (< main_~j~0_22 main_~MINVAL~0_5) (= v_ArrVal_146_fresh_1 (store (select |#memory_int#1_21| |main_~#volArray~0.base_5|) (+ (* main_~i~0_12 16) |main_~#volArray~0.offset_5| (* main_~j~0_22 (- 4))) v_ArrVal_145_fresh_1)) (= (store |#memory_int#1_21| |main_~#volArray~0.base_5| v_ArrVal_146_fresh_1) |#memory_int#1_24|)) :named ssa_24))
(assert (! (= main_~j~0_22 (+ main_~j~0_25 1)) :named ssa_25))
(assert (! (< main_~j~0_25 1) :named ssa_26))
(assert (! (= main_~i~0_27 (+ main_~i~0_12 1)) :named ssa_27))
(assert (! (and (= main_~j~0_28 4) (<= main_~i~0_27 (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)))) :named ssa_28))
(assert (! (<= 1 main_~j~0_28) :named ssa_29))
(assert (! (and (= v_ArrVal_148_fresh_1 main_~j~0_28) (= |#memory_int#1_30| (store |#memory_int#1_24| |main_~#volArray~0.base_5| v_ArrVal_147_fresh_1)) (= v_ArrVal_147_fresh_1 (store (select |#memory_int#1_24| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_28 (- 4)) (* main_~i~0_27 16)) main_~j~0_28)) (<= main_~MINVAL~0_5 main_~j~0_28)) :named ssa_30))
(assert (! (= main_~j~0_28 (+ main_~j~0_31 1)) :named ssa_31))
(assert (! (<= 1 main_~j~0_31) :named ssa_32))
(assert (! (and (= v_ArrVal_150_fresh_1 main_~j~0_31) (= (store |#memory_int#1_30| |main_~#volArray~0.base_5| v_ArrVal_149_fresh_1) |#memory_int#1_33|) (= v_ArrVal_149_fresh_1 (store (select |#memory_int#1_30| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_31 (- 4)) (* main_~i~0_27 16)) main_~j~0_31)) (<= main_~MINVAL~0_5 main_~j~0_31)) :named ssa_33))
(assert (! (= main_~j~0_31 (+ main_~j~0_34 1)) :named ssa_34))
(assert (! (<= 1 main_~j~0_34) :named ssa_35))
(assert (! (and (= v_ArrVal_151_fresh_1 (store (select |#memory_int#1_33| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~j~0_34 (- 4)) (* main_~i~0_27 16)) main_~j~0_34)) (= (store |#memory_int#1_33| |main_~#volArray~0.base_5| v_ArrVal_151_fresh_1) |#memory_int#1_36|) (<= main_~MINVAL~0_5 main_~j~0_34) (= v_ArrVal_152_fresh_1 main_~j~0_34)) :named ssa_36))
(assert (! (= main_~j~0_34 (+ main_~j~0_37 1)) :named ssa_37))
(assert (! (<= 1 main_~j~0_37) :named ssa_38))
(assert (! (and (< main_~j~0_37 main_~MINVAL~0_5) (= v_ArrVal_154_fresh_1 (store (select |#memory_int#1_36| |main_~#volArray~0.base_5|) (+ (* main_~i~0_27 16) |main_~#volArray~0.offset_5| (* main_~j~0_37 (- 4))) v_ArrVal_153_fresh_1)) (= (store |#memory_int#1_36| |main_~#volArray~0.base_5| v_ArrVal_154_fresh_1) |#memory_int#1_39|) (= v_ArrVal_153_fresh_1 0)) :named ssa_39))
(assert (! (= main_~j~0_37 (+ main_~j~0_40 1)) :named ssa_40))
(assert (! (< main_~j~0_40 1) :named ssa_41))
(assert (! (= main_~i~0_42 (+ main_~i~0_27 1)) :named ssa_42))
(assert (! (< (ite (and (not (= (mod ~CELLCOUNT~0_4 4) 0)) (< ~CELLCOUNT~0_4 0)) (+ (div ~CELLCOUNT~0_4 4) 1) (div ~CELLCOUNT~0_4 4)) main_~i~0_42) :named ssa_43))
(assert (! (= main_~i~0_44 0) :named ssa_44))
(assert (! (and (or (and (< |v_main_#t~mem7_37_fresh_1| main_~MINVAL~0_5) (not |main_#t~short9_45|)) (and |main_#t~short9_45| (<= main_~MINVAL~0_5 |v_main_#t~mem7_37_fresh_1|))) (< main_~i~0_44 ~CELLCOUNT~0_4) (= (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ (* main_~i~0_44 4) |main_~#volArray~0.offset_5|)) |v_main_#t~mem7_37_fresh_1|)) :named ssa_45))
(assert (! |main_#t~short9_45| :named ssa_46))
(assert (! true :named ssa_47_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_47| (ite |main_#t~short9_45| 1 0)) :named ssa_47_LocVarAssigCall))
(assert (! true :named ssa_47_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_48 |__VERIFIER_assert_#in~cond_47|) :named ssa_48))
(assert (! (not (= __VERIFIER_assert_~cond_48 0)) :named ssa_49))
(assert (! true :named ssa_50))
(assert (! true :named ssa_51_return))
(assert (! (= main_~i~0_52 (+ main_~i~0_44 1)) :named ssa_52))
(assert (! (and (< main_~i~0_52 ~CELLCOUNT~0_4) (or (and (< |v_main_#t~mem7_38_fresh_1| main_~MINVAL~0_5) (not |main_#t~short9_53|)) (and |main_#t~short9_53| (<= main_~MINVAL~0_5 |v_main_#t~mem7_38_fresh_1|))) (= (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ (* main_~i~0_52 4) |main_~#volArray~0.offset_5|)) |v_main_#t~mem7_38_fresh_1|)) :named ssa_53))
(assert (! |main_#t~short9_53| :named ssa_54))
(assert (! true :named ssa_55_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_55| (ite |main_#t~short9_53| 1 0)) :named ssa_55_LocVarAssigCall))
(assert (! true :named ssa_55_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_56 |__VERIFIER_assert_#in~cond_55|) :named ssa_56))
(assert (! (not (= __VERIFIER_assert_~cond_56 0)) :named ssa_57))
(assert (! true :named ssa_58))
(assert (! true :named ssa_59_return))
(assert (! (= main_~i~0_60 (+ main_~i~0_52 1)) :named ssa_60))
(assert (! (and (= (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ (* main_~i~0_60 4) |main_~#volArray~0.offset_5|)) |v_main_#t~mem7_39_fresh_1|) (or (and |main_#t~short9_61| (<= main_~MINVAL~0_5 |v_main_#t~mem7_39_fresh_1|)) (and (< |v_main_#t~mem7_39_fresh_1| main_~MINVAL~0_5) (not |main_#t~short9_61|))) (< main_~i~0_60 ~CELLCOUNT~0_4)) :named ssa_61))
(assert (! |main_#t~short9_61| :named ssa_62))
(assert (! true :named ssa_63_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_63| (ite |main_#t~short9_61| 1 0)) :named ssa_63_LocVarAssigCall))
(assert (! true :named ssa_63_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_64 |__VERIFIER_assert_#in~cond_63|) :named ssa_64))
(assert (! (not (= __VERIFIER_assert_~cond_64 0)) :named ssa_65))
(assert (! true :named ssa_66))
(assert (! true :named ssa_67_return))
(assert (! (= main_~i~0_68 (+ main_~i~0_60 1)) :named ssa_68))
(assert (! (and (= (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ (* main_~i~0_68 4) |main_~#volArray~0.offset_5|)) |v_main_#t~mem7_40_fresh_1|) (or (and (< |v_main_#t~mem7_40_fresh_1| main_~MINVAL~0_5) (not |main_#t~short9_69|)) (and |main_#t~short9_69| (<= main_~MINVAL~0_5 |v_main_#t~mem7_40_fresh_1|))) (< main_~i~0_68 ~CELLCOUNT~0_4)) :named ssa_69))
(assert (! |main_#t~short9_69| :named ssa_70))
(assert (! true :named ssa_71_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_71| (ite |main_#t~short9_69| 1 0)) :named ssa_71_LocVarAssigCall))
(assert (! true :named ssa_71_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_72 |__VERIFIER_assert_#in~cond_71|) :named ssa_72))
(assert (! (not (= __VERIFIER_assert_~cond_72 0)) :named ssa_73))
(assert (! true :named ssa_74))
(assert (! true :named ssa_75_return))
(assert (! (= main_~i~0_76 (+ main_~i~0_68 1)) :named ssa_76))
(assert (! (and (= (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ (* main_~i~0_76 4) |main_~#volArray~0.offset_5|)) |v_main_#t~mem7_41_fresh_1|) (or (and (not |main_#t~short9_77|) (< |v_main_#t~mem7_41_fresh_1| main_~MINVAL~0_5)) (and |main_#t~short9_77| (<= main_~MINVAL~0_5 |v_main_#t~mem7_41_fresh_1|))) (< main_~i~0_76 ~CELLCOUNT~0_4)) :named ssa_77))
(assert (! (and (= |v_main_#t~mem8_20_fresh_1| (select (select |#memory_int#1_39| |main_~#volArray~0.base_5|) (+ |main_~#volArray~0.offset_5| (* main_~i~0_76 4)))) (not |main_#t~short9_77|) (or (and (not (= |v_main_#t~mem8_20_fresh_1| 0)) (not |main_#t~short9_78|)) (and |main_#t~short9_78| (= |v_main_#t~mem8_20_fresh_1| 0)))) :named ssa_78))
(assert (! true :named ssa_79_GlobVarAssigCall))
(assert (! (= |__VERIFIER_assert_#in~cond_79| (ite |main_#t~short9_78| 1 0)) :named ssa_79_LocVarAssigCall))
(assert (! true :named ssa_79_OldVarAssigCall))
(assert (! (= __VERIFIER_assert_~cond_80 |__VERIFIER_assert_#in~cond_79|) :named ssa_80))
(assert (! (= __VERIFIER_assert_~cond_80 0) :named ssa_81))
(assert (! true :named ssa_82))
(check-sat)
(get-interpolants (and ssa_0_LocVarAssigCall ssa_precond ssa_0_GlobVarAssigCall ssa_0_OldVarAssigCall ssa_2_return ssa_1) (and ssa_3_OldVarAssigCall ssa_3_LocVarAssigCall ssa_3_GlobVarAssigCall) ssa_4 ssa_5 ssa_6 (and ssa_11_return ssa_7_LocVarAssigCall ssa_10 ssa_8 ssa_9 ssa_7_OldVarAssigCall ssa_7_GlobVarAssigCall) ssa_12 ssa_13 ssa_14 ssa_15 ssa_16 ssa_17 ssa_18 ssa_19 ssa_20 ssa_21 ssa_22 ssa_23 ssa_24 ssa_25 ssa_26 ssa_27 ssa_28 ssa_29 ssa_30 ssa_31 ssa_32 ssa_33 ssa_34 ssa_35 ssa_36 ssa_37 ssa_38 ssa_39 ssa_40 ssa_41 ssa_42 ssa_43 ssa_44 ssa_45 ssa_46 (and ssa_47_GlobVarAssigCall ssa_51_return ssa_47_OldVarAssigCall ssa_50 ssa_48 ssa_49 ssa_47_LocVarAssigCall) ssa_52 ssa_53 ssa_54 (and ssa_57 ssa_55_OldVarAssigCall ssa_59_return ssa_58 ssa_55_GlobVarAssigCall ssa_55_LocVarAssigCall ssa_56) ssa_60 ssa_61 ssa_62 (and ssa_64 ssa_63_OldVarAssigCall ssa_67_return ssa_63_LocVarAssigCall ssa_63_GlobVarAssigCall ssa_65 ssa_66) ssa_68 ssa_69 ssa_70 (and ssa_71_LocVarAssigCall ssa_74 ssa_71_OldVarAssigCall ssa_71_GlobVarAssigCall ssa_72 ssa_75_return ssa_73) ssa_76 ssa_77 ssa_78 (and ssa_79_LocVarAssigCall ssa_79_OldVarAssigCall ssa_79_GlobVarAssigCall) ssa_80 ssa_81 (and ssa_82 ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-2| () (Array Int (Array Int Int)))
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#2_-2| () (Array Int (Array Int Int)))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#2)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun |old(~CELLCOUNT~0)_-1| () Int)
(declare-fun ~CELLCOUNT~0_-1 () Int)
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun ~CELLCOUNT~0_0 () Int)
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-1) :named ssa_precond))
(assert (! (not true) :named ssa_postcond))
(assert (! (and (= (select |#valid_-2| 0) 0) (= 46 (select (select |#memory_int#2_-2| 2) 3)) (= 110 (select (select |#memory_int#2_-2| 2) 0)) (= (select |#valid_-2| 2) 1) (= (select |#length_-2| 2) 6) (= (select |#valid_-2| 3) 1) (< 0 |#StackHeapBarrier_-1|) (= (select |#valid_-2| 1) 1) (= (select |#length_-2| 1) 2) (= (select |#length_-2| 3) 12) (= (select (select |#memory_int#2_-2| 2) 1) 114) (= (select (select |#memory_int#0_-2| 1) 1) 0) (= 52 (select (select |#memory_int#2_-2| 2) 2)) (= (select (select |#memory_int#2_-2| 2) 5) 0) (= (select (select |#memory_int#0_-2| 1) 0) 48) (= (select (select |#memory_int#2_-2| 2) 4) 99) (= ~CELLCOUNT~0_0 0)) :named ssa_0))
(assert (! true :named ssa_1_return))
(assert (! true :named ssa_-2_PendingContext))
(assert (! true :named ssa_-2_LocVarAssignPendingContext))
(assert (! (= |old(~CELLCOUNT~0)_-1| ~CELLCOUNT~0_-2) :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) (and ssa_-2_PendingContext ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_1_return ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |assume_abort_if_not_#in~cond_-1| () Int)
(declare-fun assume_abort_if_not_~cond_0 () Int)
(declare-fun assume_abort_if_not_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (= 2 main_~MINVAL~0_-2)) :named ssa_postcond))
(assert (! (= |assume_abort_if_not_#in~cond_-1| assume_abort_if_not_~cond_0) :named ssa_0))
(assert (! (not (= assume_abort_if_not_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (= 2 main_~MINVAL~0_-2) :named ssa_-2_PendingContext))
(assert (! (= (ite (= (ite (and (< ~CELLCOUNT~0_-2 0) (not (= (mod ~CELLCOUNT~0_-2 4) 0))) (+ (- 4) (mod ~CELLCOUNT~0_-2 4)) (mod ~CELLCOUNT~0_-2 4)) 0) 1 0) |assume_abort_if_not_#in~cond_-1|) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short9_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short9_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 16)) 4) (= main_~i~0_-2 0) (= 2 main_~MINVAL~0_-2))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 16)) 4) (= main_~i~0_-2 0) (= 2 main_~MINVAL~0_-2)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short9_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short9_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short9_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 12 (* main_~i~0_-2 4))) 4) (= 2 main_~MINVAL~0_-2))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 12 (* main_~i~0_-2 4))) 4) (= 2 main_~MINVAL~0_-2)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short9_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short9_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short9_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= 4 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 8 (* main_~i~0_-2 4)))) (= 2 main_~MINVAL~0_-2))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= 4 (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 8 (* main_~i~0_-2 4)))) (= 2 main_~MINVAL~0_-2)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short9_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#valid_-2| () (Array Int Int))
(declare-fun ~CELLCOUNT~0_-2 () Int)
(declare-fun |#length_-2| () (Array Int Int))
(declare-fun |#memory_int#1_-2| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-2| () (Array Int Int))
(declare-fun |old(~CELLCOUNT~0)_-2| () Int)
(declare-fun |old(#length)_-2| () (Array Int Int))
(declare-fun |old(#memory_int#1)_-2| () (Array Int (Array Int Int)))
(declare-fun main_~MINVAL~0_-2 () Int)
(declare-fun |main_~#volArray~0.offset_-2| () Int)
(declare-fun main_~i~0_-2 () Int)
(declare-fun |main_~#volArray~0.base_-2| () Int)
(declare-fun |main_#t~short9_-2| () Bool)
(declare-fun |__VERIFIER_assert_#in~cond_-1| () Int)
(declare-fun |main_#t~short9_-1| () Bool)
(declare-fun __VERIFIER_assert_~cond_0 () Int)
(declare-fun __VERIFIER_assert_~cond_1 () Int)
(assert (! true :named ssa_precond))
(assert (! (not (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 4 (* main_~i~0_-2 4))) 4) (= 2 main_~MINVAL~0_-2))) :named ssa_postcond))
(assert (! (= __VERIFIER_assert_~cond_0 |__VERIFIER_assert_#in~cond_-1|) :named ssa_0))
(assert (! (not (= __VERIFIER_assert_~cond_0 0)) :named ssa_1))
(assert (! true :named ssa_2))
(assert (! true :named ssa_3_return))
(assert (! (and (= (select (select |#memory_int#1_-2| |main_~#volArray~0.base_-2|) (+ |main_~#volArray~0.offset_-2| 4 (* main_~i~0_-2 4))) 4) (= 2 main_~MINVAL~0_-2)) :named ssa_-2_PendingContext))
(assert (! (= |__VERIFIER_assert_#in~cond_-1| (ite |main_#t~short9_-2| 1 0)) :named ssa_-2_LocVarAssignPendingContext))
(assert (! true :named ssa_-2_OldVarAssignPendingContext))
(check-sat)
(get-interpolants (and ssa_0 ssa_precond) ssa_1 ssa_2 (and ssa_-2_PendingContext ssa_3_return ssa_-2_LocVarAssignPendingContext ssa_-2_OldVarAssignPendingContext ssa_postcond))
(echo "finished trace check")
(pop 1)
(exit)
