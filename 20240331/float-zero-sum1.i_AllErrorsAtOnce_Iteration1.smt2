(set-option :produce-models true)
(set-option :produce-unsat-cores true)
(set-option :produce-interpolants true)
(set-option :interpolant-check-mode true)
(set-option :proof-transformation LU)
(set-logic ALL)
(set-info :source |SMT script generated on 2024-03-30T23:57:11+01:00 by Ultimate (https://ultimate.informatik.uni-freiburg.de/)|)
(set-info :smt-lib-version 2.5)
(set-info :category "industrial")
(set-info :ultimate-id float-zero-sum1.i_AllErrorsAtOnce_Iteration1)
(define-sort ~int8_t~0 () Int)
(define-sort ~int16_t~0 () Int)
(define-sort ~int32_t~0 () Int)
(define-sort ~int64_t~0 () Int)
(define-sort ~uint8_t~0 () Int)
(define-sort ~uint16_t~0 () Int)
(define-sort ~uint32_t~0 () Int)
(define-sort ~uint64_t~0 () Int)
(define-sort ~int_least8_t~0 () Int)
(define-sort ~int_least16_t~0 () Int)
(define-sort ~int_least32_t~0 () Int)
(define-sort ~int_least64_t~0 () Int)
(define-sort ~uint_least8_t~0 () Int)
(define-sort ~uint_least16_t~0 () Int)
(define-sort ~uint_least32_t~0 () Int)
(define-sort ~uint_least64_t~0 () Int)
(define-sort ~int_fast8_t~0 () Int)
(define-sort ~int_fast16_t~0 () Int)
(define-sort ~int_fast32_t~0 () Int)
(define-sort ~int_fast64_t~0 () Int)
(define-sort ~uint_fast8_t~0 () Int)
(define-sort ~uint_fast16_t~0 () Int)
(define-sort ~uint_fast32_t~0 () Int)
(define-sort ~uint_fast64_t~0 () Int)
(define-sort ~intptr_t~0 () Int)
(define-sort ~uintptr_t~0 () Int)
(define-sort ~intmax_t~0 () Int)
(define-sort ~uintmax_t~0 () Int)
(declare-fun ~someBinaryArithmeticFLOAToperation (Real Real) Real)
(declare-fun ~someUnaryDOUBLEoperation (Real) Real)
(declare-fun |c_old(#valid)| () (Array Int Int))
(declare-fun |c_old(#valid)_primed| () (Array Int Int))
(declare-fun |c_#valid| () (Array Int Int))
(declare-fun |c_#valid_primed| () (Array Int Int))
(declare-fun |c_old(#length)| () (Array Int Int))
(declare-fun |c_old(#length)_primed| () (Array Int Int))
(declare-fun |c_#length| () (Array Int Int))
(declare-fun |c_#length_primed| () (Array Int Int))
(declare-fun |c_old(#memory_int#0)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#0)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#0_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_int#1)_primed| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1| () (Array Int (Array Int Int)))
(declare-fun |c_#memory_int#1_primed| () (Array Int (Array Int Int)))
(declare-fun |c_old(#memory_real#0)| () (Array Int (Array Int Real)))
(declare-fun |c_old(#memory_real#0)_primed| () (Array Int (Array Int Real)))
(declare-fun |c_#memory_real#0| () (Array Int (Array Int Real)))
(declare-fun |c_#memory_real#0_primed| () (Array Int (Array Int Real)))
(declare-fun |c_old(#memory_real#1)| () (Array Int (Array Int Real)))
(declare-fun |c_old(#memory_real#1)_primed| () (Array Int (Array Int Real)))
(declare-fun |c_#memory_real#1| () (Array Int (Array Int Real)))
(declare-fun |c_#memory_real#1_primed| () (Array Int (Array Int Real)))
(declare-fun |c_old(#StackHeapBarrier)| () Int)
(declare-fun |c_old(#StackHeapBarrier)_primed| () Int)
(declare-fun |c_#StackHeapBarrier| () Int)
(declare-fun |c_#StackHeapBarrier_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.base| () Int)
(declare-fun |c_reach_error_#t~nondet0.base_primed| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset| () Int)
(declare-fun |c_reach_error_#t~nondet0.offset_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_~size| () Int)
(declare-fun |c_#Ultimate.allocInit_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase| () Int)
(declare-fun |c_#Ultimate.allocInit_ptrBase_primed| () Int)
(declare-fun |c_read~int#1_#ptr.base| () Int)
(declare-fun |c_read~int#1_#ptr.base_primed| () Int)
(declare-fun |c_read~int#1_#ptr.offset| () Int)
(declare-fun |c_read~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType| () Int)
(declare-fun |c_read~int#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#1_#value| () Int)
(declare-fun |c_read~int#1_#value_primed| () Int)
(declare-fun |c_f00_#in~a| () Real)
(declare-fun |c_f00_#in~a_primed| () Real)
(declare-fun |c_f00_#in~b| () Real)
(declare-fun |c_f00_#in~b_primed| () Real)
(declare-fun |c_f00_#res| () Int)
(declare-fun |c_f00_#res_primed| () Int)
(declare-fun |c_f00_#t~mem1| () Int)
(declare-fun |c_f00_#t~mem1_primed| () Int)
(declare-fun c_f00_~a () Real)
(declare-fun c_f00_~a_primed () Real)
(declare-fun c_f00_~b () Real)
(declare-fun c_f00_~b_primed () Real)
(declare-fun c_f00_~sum~0 () Real)
(declare-fun c_f00_~sum~0_primed () Real)
(declare-fun |c_f00_~#m~0.base| () Int)
(declare-fun |c_f00_~#m~0.base_primed| () Int)
(declare-fun |c_f00_~#m~0.offset| () Int)
(declare-fun |c_f00_~#m~0.offset_primed| () Int)
(declare-fun |c_read~int#0_#ptr.base| () Int)
(declare-fun |c_read~int#0_#ptr.base_primed| () Int)
(declare-fun |c_read~int#0_#ptr.offset| () Int)
(declare-fun |c_read~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType| () Int)
(declare-fun |c_read~int#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~int#0_#value| () Int)
(declare-fun |c_read~int#0_#value_primed| () Int)
(declare-fun |c_main_#res| () Int)
(declare-fun |c_main_#res_primed| () Int)
(declare-fun |c_main_#t~ret2| () Int)
(declare-fun |c_main_#t~ret2_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size| () Int)
(declare-fun |c_#Ultimate.allocOnStack_~size_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.base_primed| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset| () Int)
(declare-fun |c_#Ultimate.allocOnStack_#res.offset_primed| () Int)
(declare-fun |c_write~int#0_#value| () Int)
(declare-fun |c_write~int#0_#value_primed| () Int)
(declare-fun |c_write~int#0_#ptr.base| () Int)
(declare-fun |c_write~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~int#0_#ptr.offset| () Int)
(declare-fun |c_write~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~int#1_#value| () Int)
(declare-fun |c_write~int#1_#value_primed| () Int)
(declare-fun |c_write~int#1_#ptr.base| () Int)
(declare-fun |c_write~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~int#1_#ptr.offset| () Int)
(declare-fun |c_write~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~real#0_#value| () Real)
(declare-fun |c_write~real#0_#value_primed| () Real)
(declare-fun |c_write~real#0_#ptr.base| () Int)
(declare-fun |c_write~real#0_#ptr.base_primed| () Int)
(declare-fun |c_write~real#0_#ptr.offset| () Int)
(declare-fun |c_write~real#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~real#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~real#0_#sizeOfWrittenType_primed| () Int)
(declare-fun |c_write~real#1_#value| () Real)
(declare-fun |c_write~real#1_#value_primed| () Real)
(declare-fun |c_write~real#1_#ptr.base| () Int)
(declare-fun |c_write~real#1_#ptr.base_primed| () Int)
(declare-fun |c_write~real#1_#ptr.offset| () Int)
(declare-fun |c_write~real#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~real#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~real#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_#in~__assertion.base| () Int)
(declare-fun |c___assert_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_#in~__assertion.offset| () Int)
(declare-fun |c___assert_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_#in~__file.base| () Int)
(declare-fun |c___assert_#in~__file.base_primed| () Int)
(declare-fun |c___assert_#in~__file.offset| () Int)
(declare-fun |c___assert_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_#in~__line| () Int)
(declare-fun |c___assert_#in~__line_primed| () Int)
(declare-fun |c_read~real#0_#ptr.base| () Int)
(declare-fun |c_read~real#0_#ptr.base_primed| () Int)
(declare-fun |c_read~real#0_#ptr.offset| () Int)
(declare-fun |c_read~real#0_#ptr.offset_primed| () Int)
(declare-fun |c_read~real#0_#sizeOfReadType| () Int)
(declare-fun |c_read~real#0_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~real#0_#value| () Real)
(declare-fun |c_read~real#0_#value_primed| () Real)
(declare-fun |c_ULTIMATE.start_#t~ret3| () Int)
(declare-fun |c_ULTIMATE.start_#t~ret3_primed| () Int)
(declare-fun |c_write~init~int#1_#value| () Int)
(declare-fun |c_write~init~int#1_#value_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.base| () Int)
(declare-fun |c_write~init~int#1_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset| () Int)
(declare-fun |c_write~init~int#1_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#1_#sizeOfWrittenType_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base| () Int)
(declare-fun |c___assert_fail_#in~__assertion.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset| () Int)
(declare-fun |c___assert_fail_#in~__assertion.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.base| () Int)
(declare-fun |c___assert_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_fail_#in~__line| () Int)
(declare-fun |c___assert_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.base| () Int)
(declare-fun |c___assert_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_fail_#in~__function.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum| () Int)
(declare-fun |c___assert_perror_fail_#in~__errnum_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__file.offset_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__line| () Int)
(declare-fun |c___assert_perror_fail_#in~__line_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.base_primed| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset| () Int)
(declare-fun |c___assert_perror_fail_#in~__function.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#value| () Int)
(declare-fun |c_write~init~int#0_#value_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.base| () Int)
(declare-fun |c_write~init~int#0_#ptr.base_primed| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset| () Int)
(declare-fun |c_write~init~int#0_#ptr.offset_primed| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType| () Int)
(declare-fun |c_write~init~int#0_#sizeOfWrittenType_primed| () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.base_primed () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset () Int)
(declare-fun c_ULTIMATE.dealloc_~addr.offset_primed () Int)
(declare-fun |c_read~real#1_#ptr.base| () Int)
(declare-fun |c_read~real#1_#ptr.base_primed| () Int)
(declare-fun |c_read~real#1_#ptr.offset| () Int)
(declare-fun |c_read~real#1_#ptr.offset_primed| () Int)
(declare-fun |c_read~real#1_#sizeOfReadType| () Int)
(declare-fun |c_read~real#1_#sizeOfReadType_primed| () Int)
(declare-fun |c_read~real#1_#value| () Real)
(declare-fun |c_read~real#1_#value_primed| () Real)
(declare-fun c_aux_v_f00_~a_2 () Real)
(declare-fun c_aux_v_f00_~b_2 () Real)
(declare-fun c_aux_v_f00_~sum~0_2 () Real)
(declare-fun |c_aux_v_f00_~#m~0.offset_4| () Int)
(declare-fun |c_aux_v_ULTIMATE.start_#t~ret3_3| () Int)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_real#0_-1| () (Array Int (Array Int Real)))
(declare-fun |#memory_real#1_-1| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_real#0)_-1| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_real#1)_-1| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_real#1)_3| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_real#1_3| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_4| () (Array Int Int))
(declare-fun |old(#length)_4| () (Array Int Int))
(declare-fun |old(#memory_real#1)_4| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_4| () (Array Int (Array Int Int)))
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |#memory_real#1_4| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_4| () (Array Int (Array Int Int)))
(declare-fun |f00_#in~a_4| () Real)
(declare-fun |f00_#in~b_4| () Real)
(declare-fun |f00_#t~mem1_5| () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |#memory_real#1_5| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_5| () (Array Int (Array Int Int)))
(declare-fun |f00_~#m~0.base_5| () Int)
(declare-fun v_f00_~a_3_fresh_1 () Real)
(declare-fun v_f00_~b_3_fresh_1 () Real)
(declare-fun v_f00_~sum~0_3_fresh_1 () Real)
(declare-fun |v_f00_~#m~0.offset_7_fresh_1| () Int)
(declare-fun v_ArrVal_4_fresh_1 () Int)
(declare-fun v_ArrVal_1_fresh_1 () Real)
(declare-fun v_ArrVal_3_fresh_1 () Int)
(declare-fun v_ArrVal_5_fresh_1 () (Array Int Real))
(declare-fun v_ArrVal_2_fresh_1 () (Array Int Int))
(declare-fun v_ArrVal_6_fresh_1 () Int)
(declare-fun |f00_#t~mem1_6| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#length_-1| 2) 18) (< 0 |#StackHeapBarrier_-1|) (= (select |#valid_-1| 0) 0) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#valid_-1| 1) 1) (= (select |#valid_-1| 2) 1) (= (select (select |#memory_int#0_-1| 1) 0) 48) (= (select |#length_-1| 1) 2)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |old(#memory_real#1)_3| |#memory_real#1_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|) (= |#memory_real#1_-1| |old(#memory_real#1)_3|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= |old(#valid)_4| |#valid_4|) (= |old(#memory_real#1)_4| |#memory_real#1_4|) (= |#length_4| |old(#length)_4|) (= |old(#memory_int#1)_4| |#memory_int#1_4|)) :named ssa_4_GlobVarAssigCall))
(assert (! (= 762388928.0 |f00_#in~b_4|) :named ssa_4_LocVarAssigCall))
(assert (! (and (= |old(#length)_4| |#length_3|) (= |#valid_3| |old(#valid)_4|) (= |old(#memory_int#1)_4| |#memory_int#1_3|) (= |#memory_real#1_3| |old(#memory_real#1)_4|)) :named ssa_4_OldVarAssigCall))
(assert (! (and (= v_ArrVal_5_fresh_1 (store (select |#memory_real#1_4| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_7_fresh_1| v_ArrVal_1_fresh_1)) (< |#StackHeapBarrier_-1| |f00_~#m~0.base_5|) (not (= |f00_~#m~0.base_5| 0)) (= (store (select |#memory_int#1_4| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_7_fresh_1| (select (select |#memory_int#1_5| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_7_fresh_1|)) v_ArrVal_2_fresh_1) (= (select (select |#memory_int#1_5| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_7_fresh_1|) |f00_#t~mem1_5|) (= (store |#memory_real#1_4| |f00_~#m~0.base_5| v_ArrVal_5_fresh_1) |#memory_real#1_5|) (= |f00_#in~b_4| v_f00_~b_3_fresh_1) (= |f00_#in~a_4| v_f00_~a_3_fresh_1) (= v_f00_~sum~0_3_fresh_1 v_ArrVal_1_fresh_1) (= (store |#valid_4| |f00_~#m~0.base_5| v_ArrVal_6_fresh_1) |#valid_5|) (= (store |#length_4| |f00_~#m~0.base_5| v_ArrVal_3_fresh_1) |#length_5|) (= |v_f00_~#m~0.offset_7_fresh_1| 0) (= (select |#valid_4| |f00_~#m~0.base_5|) 0) (= |#memory_int#1_5| (store |#memory_int#1_4| |f00_~#m~0.base_5| v_ArrVal_2_fresh_1)) (= v_ArrVal_6_fresh_1 1) (= (select (select |#memory_int#1_5| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_7_fresh_1|) v_ArrVal_4_fresh_1) (= 4 v_ArrVal_3_fresh_1)) :named ssa_5))
(assert (! (= (mod |f00_#t~mem1_5| 4294967296) 2147483648) :named ssa_6))
(assert (! true :named ssa_7))
(check-sat)
(echo "Trace is feasible, we will do another trace check, this time with branch encoders.")
(echo "finished trace check")
(pop 1)
(echo "starting trace check")
(push 1)
(declare-fun |#memory_int#0_-1| () (Array Int (Array Int Int)))
(declare-fun |#valid_-1| () (Array Int Int))
(declare-fun |#length_-1| () (Array Int Int))
(declare-fun |#memory_real#0_-1| () (Array Int (Array Int Real)))
(declare-fun |#memory_real#1_-1| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#memory_int#0)_-1| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_-1| () (Array Int Int))
(declare-fun |old(#length)_-1| () (Array Int Int))
(declare-fun |old(#memory_real#0)_-1| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_real#1)_-1| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_-1| () (Array Int (Array Int Int)))
(declare-fun |#StackHeapBarrier_-1| () Int)
(declare-fun |old(#valid)_3| () (Array Int Int))
(declare-fun |old(#length)_3| () (Array Int Int))
(declare-fun |old(#memory_real#1)_3| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_3| () (Array Int (Array Int Int)))
(declare-fun |#valid_3| () (Array Int Int))
(declare-fun |#length_3| () (Array Int Int))
(declare-fun |#memory_real#1_3| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_3| () (Array Int (Array Int Int)))
(declare-fun |old(#valid)_4| () (Array Int Int))
(declare-fun |old(#length)_4| () (Array Int Int))
(declare-fun |old(#memory_real#1)_4| () (Array Int (Array Int Real)))
(declare-fun |old(#memory_int#1)_4| () (Array Int (Array Int Int)))
(declare-fun |#valid_4| () (Array Int Int))
(declare-fun |#length_4| () (Array Int Int))
(declare-fun |#memory_real#1_4| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_4| () (Array Int (Array Int Int)))
(declare-fun |f00_#in~a_4| () Real)
(declare-fun |f00_#in~b_4| () Real)
(declare-fun |f00_#t~mem1_5| () Int)
(declare-fun |#valid_5| () (Array Int Int))
(declare-fun |#length_5| () (Array Int Int))
(declare-fun |#memory_real#1_5| () (Array Int (Array Int Real)))
(declare-fun |#memory_int#1_5| () (Array Int (Array Int Int)))
(declare-fun |f00_~#m~0.base_5| () Int)
(declare-fun v_f00_~a_2_fresh_1 () Real)
(declare-fun v_f00_~b_2_fresh_1 () Real)
(declare-fun v_f00_~sum~0_2_fresh_1 () Real)
(declare-fun |v_f00_~#m~0.offset_4_fresh_1| () Int)
(declare-fun |f00_#t~mem1_6| () Int)
(assert (! true :named ssa_precond))
(assert (! (not false) :named ssa_postcond))
(assert (! true :named ssa_0_GlobVarAssigCall))
(assert (! true :named ssa_0_LocVarAssigCall))
(assert (! true :named ssa_0_OldVarAssigCall))
(assert (! (and (= (select |#length_-1| 1) 2) (= (select |#valid_-1| 1) 1) (= (select (select |#memory_int#0_-1| 1) 1) 0) (= (select |#valid_-1| 2) 1) (< 0 |#StackHeapBarrier_-1|) (= 48 (select (select |#memory_int#0_-1| 1) 0)) (= (select |#valid_-1| 0) 0) (= (select |#length_-1| 2) 18)) :named ssa_1))
(assert (! true :named ssa_2_return))
(assert (! (and (= |old(#valid)_3| |#valid_3|) (= |old(#memory_real#1)_3| |#memory_real#1_3|) (= |#length_3| |old(#length)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_3|)) :named ssa_3_GlobVarAssigCall))
(assert (! true :named ssa_3_LocVarAssigCall))
(assert (! (and (= |old(#length)_3| |#length_-1|) (= |#valid_-1| |old(#valid)_3|) (= |old(#memory_int#1)_3| |#memory_int#1_-1|) (= |#memory_real#1_-1| |old(#memory_real#1)_3|)) :named ssa_3_OldVarAssigCall))
(assert (! (and (= |old(#valid)_4| |#valid_4|) (= |old(#memory_real#1)_4| |#memory_real#1_4|) (= |#length_4| |old(#length)_4|) (= |old(#memory_int#1)_4| |#memory_int#1_4|)) :named ssa_4_GlobVarAssigCall))
(assert (! (= 762388928.0 |f00_#in~b_4|) :named ssa_4_LocVarAssigCall))
(assert (! (and (= |old(#length)_4| |#length_3|) (= |#valid_3| |old(#valid)_4|) (= |old(#memory_int#1)_4| |#memory_int#1_3|) (= |#memory_real#1_3| |old(#memory_real#1)_4|)) :named ssa_4_OldVarAssigCall))
(assert (! (and (< |#StackHeapBarrier_-1| |f00_~#m~0.base_5|) (not (= |f00_~#m~0.base_5| 0)) (= (store |#length_4| |f00_~#m~0.base_5| 4) |#length_5|) (= (store |#memory_int#1_4| |f00_~#m~0.base_5| (store (select |#memory_int#1_4| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_4_fresh_1| (select (select |#memory_int#1_5| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_4_fresh_1|))) |#memory_int#1_5|) (= |f00_#t~mem1_5| (select (select |#memory_int#1_5| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_4_fresh_1|)) (= |f00_#in~b_4| v_f00_~b_2_fresh_1) (= (store |#memory_real#1_4| |f00_~#m~0.base_5| (store (select |#memory_real#1_4| |f00_~#m~0.base_5|) |v_f00_~#m~0.offset_4_fresh_1| v_f00_~sum~0_2_fresh_1)) |#memory_real#1_5|) (= |f00_#in~a_4| v_f00_~a_2_fresh_1) (= (select |#valid_4| |f00_~#m~0.base_5|) 0) (= |v_f00_~#m~0.offset_4_fresh_1| 0) (= (store |#valid_4| |f00_~#m~0.base_5| 1) |#valid_5|)) :named ssa_5))
(assert (! (= (mod |f00_#t~mem1_5| 4294967296) 2147483648) :named ssa_6))
(assert (! true :named ssa_7))
(check-sat)
(get-value (|f00_#t~mem1_5|))
(get-value (|f00_#t~mem1_6|))
(get-value (|f00_#in~a_4|))
(get-value (|f00_#in~b_4|))
(get-value (|#StackHeapBarrier_-1|))
(get-value (|f00_~#m~0.base_5|))
(echo "finished trace check")
(pop 1)
(exit)
